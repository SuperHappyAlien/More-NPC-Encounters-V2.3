<?xml version="1.0"?>
<Definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Prefabs>
    <Prefab xsi:type="MyObjectBuilder_PrefabDefinition">
      <Id Type="MyObjectBuilder_PrefabDefinition" Subtype="Morja Land Speedboat (Vanilla)" />
      <CubeGrids>
        <CubeGrid>
          <SubtypeName />
          <EntityId>84172786938976086</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="0" y="0" z="0" />
            <Forward x="0.2097325" y="-0.9490658" z="0.2351299" />
            <Up x="0.1174196" y="0.2631861" z="0.9575727" />
            <Orientation>
              <X>-0.0177577417</X>
              <Y>0.785652339</Y>
              <Z>0.606705666</Z>
              <W>-0.1197636</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="-21" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="-17" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>143770200349467889</EntityId>
              <Min x="-4" y="-10" z="-1" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Atmospheric Thrusters 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="-21" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="-17" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="-6" z="0" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-16" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>131521785480635687</EntityId>
              <Min x="2" y="-10" z="-1" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Atmospheric Thrusters 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="-6" z="0" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1</SubtypeName>
              <EntityId>73433094749888081</EntityId>
              <Min x="2" y="-4" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Wheel Suspension 1x1 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform>
                <Position x="4.1601830162107944E-05" y="0.83439946174621582" z="0.45166260004043579" />
                <Forward x="-0.514315963" y="0.0014344441" z="-0.8575995" />
                <Up x="-9.632E-06" y="0.999998569" z="0.001678401" />
                <Orientation>
                  <X>0.0008074888</X>
                  <Y>0.266832471</Y>
                  <Z>0.0002285675</Z>
                  <W>0.963742554</W>
                </Orientation>
              </MasterToSlaveTransform>
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>94030564780222425</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.607574642</Damping>
              <Strength>0.742605567</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0</Friction>
              <Power>0</Power>
              <Height>-0.458</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>0.03208606</SuspensionTravel>
              <SpeedLimit>360</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1</SubtypeName>
              <EntityId>96770947117664253</EntityId>
              <Min x="-2" y="-4" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Wheel Suspension 1x1 5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform>
                <Position x="3.6835321225225925E-05" y="0.83441364765167236" z="0.45168361067771912" />
                <Forward x="-0.8833692" y="-0.000857585343" z="0.4686762" />
                <Up x="-5.44954673E-05" y="0.9999985" z="0.00172708533" />
                <Orientation>
                  <X>0.0004217407</X>
                  <Y>0.8569352</Y>
                  <Z>0.000754045031</Z>
                  <W>0.515423357</W>
                </Orientation>
              </MasterToSlaveTransform>
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>122818229125165285</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.607574642</Damping>
              <Strength>0.742605567</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0</Friction>
              <Power>0</Power>
              <Height>-0.458</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>0.03208606</SuspensionTravel>
              <SpeedLimit>360</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-5" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-5" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-6" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-6" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-7" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-7" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-8" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-8" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-9" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-9" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1</SubtypeName>
              <EntityId>113562747456168643</EntityId>
              <Min x="3" y="-9" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Wheel Suspension 1x1 6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform>
                <Position x="7.2608236223459244E-06" y="0.83485829830169678" z="0.45517709851264954" />
                <Forward x="0.321301073" y="-0.000276896229" z="0.946976662" />
                <Up x="9.891082E-07" y="0.99999994" z="0.000292064564" />
                <Orientation>
                  <X>-2.32895163E-05</X>
                  <Y>0.986655235</Y>
                  <Z>0.000144164092</Z>
                  <W>-0.162823439</W>
                </Orientation>
              </MasterToSlaveTransform>
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>100226004247688927</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.607574642</Damping>
              <Strength>0.742605567</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0</Friction>
              <Power>0</Power>
              <Height>-0.458</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>0.03208606</SuspensionTravel>
              <SpeedLimit>360</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1</SubtypeName>
              <EntityId>141278154256472855</EntityId>
              <Min x="-3" y="-9" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Wheel Suspension 1x1 7</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform>
                <Position x="0.00013875286094844341" y="0.834818959236145" z="0.45396691560745239" />
                <Forward x="-0.860915244" y="0.000593323261" z="-0.5087478" />
                <Up x="1.04465E-05" y="0.999999344" z="0.00114856428" />
                <Orientation>
                  <X>0.0005013798</X>
                  <Y>0.4956065</Y>
                  <Z>0.0002800815</Z>
                  <W>0.868546963</W>
                </Orientation>
              </MasterToSlaveTransform>
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>134737386072524743</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.607574642</Damping>
              <Strength>0.742605567</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0</Friction>
              <Power>0</Power>
              <Height>-0.458</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>0.03208606</SuspensionTravel>
              <SpeedLimit>360</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1</SubtypeName>
              <EntityId>88304221222841715</EntityId>
              <Min x="3" y="-11" z="0" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Wheel Suspension 1x1 8</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform>
                <Position x="-0.00014134438242763281" y="0.8350253701210022" z="0.45422074198722839" />
                <Forward x="0.1664767" y="0.0009276594" z="-0.986044943" />
                <Up x="-1.49247935E-05" y="0.9999996" z="0.000938268" />
                <Orientation>
                  <X>0.000468117854</X>
                  <Y>-0.08353026</Y>
                  <Z>-3.17505765E-05</Z>
                  <W>0.996505141</W>
                </Orientation>
              </MasterToSlaveTransform>
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>74101985351596083</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.607574642</Damping>
              <Strength>0.742605567</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0</Friction>
              <Power>0</Power>
              <Height>-0.458</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>0.03208606</SuspensionTravel>
              <SpeedLimit>360</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1</SubtypeName>
              <EntityId>96860775364090700</EntityId>
              <Min x="-3" y="-11" z="0" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Wheel Suspension 1x1 9</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform>
                <Position x="-0.00017811532597988844" y="0.83465117216110229" z="0.45468398928642273" />
                <Forward x="-0.765415549" y="-0.0003712496" z="0.643535" />
                <Up x="8.33068E-06" y="0.9999998" z="0.0005867987" />
                <Orientation>
                  <X>0.000127641892</X>
                  <Y>0.906514049</Y>
                  <Z>0.000264212373</Z>
                  <W>0.422175527</W>
                </Orientation>
              </MasterToSlaveTransform>
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>80292538573804460</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.607574642</Damping>
              <Strength>0.742605567</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0</Friction>
              <Power>0</Power>
              <Height>-0.458</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>0.03208606</SuspensionTravel>
              <SpeedLimit>360</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-10" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-10" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-11" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-11" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>134467984329666007</EntityId>
              <Min x="2" y="-11" z="-1" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Atmospheric Thrusters 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>83038293241000353</EntityId>
              <Min x="-4" y="-11" z="-1" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Atmospheric Thrusters 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>82809095811628608</EntityId>
              <Min x="2" y="-9" z="-1" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Atmospheric Thrusters 5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>136737374422781524</EntityId>
              <Min x="-4" y="-9" z="-1" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Atmospheric Thrusters 6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1</SubtypeName>
              <EntityId>137271425841747546</EntityId>
              <Min x="-2" y="-15" z="0" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Wheel Suspension 1x1 11</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform>
                <Position x="-0.00021098286379128695" y="0.83524799346923828" z="0.45572522282600403" />
                <Forward x="-0.28548184" y="4.88502837E-06" z="0.9583837" />
                <Up x="1.08849463E-07" y="1" z="-5.06472725E-06" />
                <Orientation>
                  <X>-3.11436878E-07</X>
                  <Y>0.989541352</Y>
                  <Z>-2.51373012E-06</Z>
                  <W>0.144249633</W>
                </Orientation>
              </MasterToSlaveTransform>
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>141042860178530302</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.607574642</Damping>
              <Strength>0.742605567</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0</Friction>
              <Power>0</Power>
              <Height>-0.458</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>0.03208606</SuspensionTravel>
              <SpeedLimit>360</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1</SubtypeName>
              <EntityId>126391321105484332</EntityId>
              <Min x="2" y="-15" z="0" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Wheel Suspension 1x1 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform>
                <Position x="-0.00029462529346346855" y="0.83460938930511475" z="0.45426511764526367" />
                <Forward x="0.525390148" y="-0.000757584756" z="0.8508605" />
                <Up x="-4.23964229E-06" y="0.9999996" z="0.00089299184" />
                <Orientation>
                  <X>-0.000123965583</X>
                  <Y>0.961993</Y>
                  <Z>0.000428947358</Z>
                  <W>-0.273073882</W>
                </Orientation>
              </MasterToSlaveTransform>
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>104982180291365831</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.607574642</Damping>
              <Strength>0.742605567</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0</Friction>
              <Power>0</Power>
              <Height>-0.458</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>0.03208606</SuspensionTravel>
              <SpeedLimit>360</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-14" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-14" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-15" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-15" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-16" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-16" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-17" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-17" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1</SubtypeName>
              <EntityId>135592766291341451</EntityId>
              <Min x="1" y="-19" z="0" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Wheel Suspension 1x1 12</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform>
                <Position x="-7.43386335670948E-05" y="0.83453834056854248" z="0.4548366367816925" />
                <Forward x="-0.246686339" y="0.0005704951" z="-0.96909523" />
                <Up x="-6.735485E-06" y="0.9999998" z="0.0005904028" />
                <Orientation>
                  <X>0.000292493147</X>
                  <Y>0.12430732</Y>
                  <Z>4.003732E-05</Z>
                  <W>0.9922437</W>
                </Orientation>
              </MasterToSlaveTransform>
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>115187202775216918</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.607574642</Damping>
              <Strength>0.742605567</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0</Friction>
              <Power>0</Power>
              <Height>-0.458</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>0.03208606</SuspensionTravel>
              <SpeedLimit>360</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1</SubtypeName>
              <EntityId>123075597671420505</EntityId>
              <Min x="-1" y="-19" z="0" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Wheel Suspension 1x1 13</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform>
                <Position x="-0.00022748426999896765" y="0.83507168292999268" z="0.45579090714454651" />
                <Forward x="-0.7424283" y="-2.25399685E-06" z="-0.6699255" />
                <Up x="-4.61337777E-08" y="1" z="-3.31342221E-06" />
                <Orientation>
                  <X>-1.52321206E-06</X>
                  <Y>0.406247765</Y>
                  <Z>-6.519576E-07</Z>
                  <W>0.9137629</W>
                </Orientation>
              </MasterToSlaveTransform>
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>132093863831041557</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.607574642</Damping>
              <Strength>0.742605567</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0</Friction>
              <Power>0</Power>
              <Height>-0.458</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>0.03208606</SuspensionTravel>
              <SpeedLimit>360</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LargeGatlingTurret">
              <SubtypeName>SmallGatlingTurret</SubtypeName>
              <EntityId>127201595243836267</EntityId>
              <Min x="-2" y="-18" z="-5" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>27</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                            <SubtypeName>NATO_25x184mm</SubtypeName>
                            <ProjectilesCount>0</ProjectilesCount>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.084</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Gatling Turret</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>true</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>27</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                      <SubtypeName>NATO_25x184mm</SubtypeName>
                      <ProjectilesCount>0</ProjectilesCount>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.084</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
              <RemainingAmmo>83</RemainingAmmo>
              <Target>0</Target>
              <IsPotentialTarget>true</IsPotentialTarget>
              <PreviousControlledEntityId xsi:nil="true" />
              <Rotation>0</Rotation>
              <Elevation>0</Elevation>
              <GunBase>
                <RemainingAmmo>83</RemainingAmmo>
                <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                <RemainingAmmosList />
                <LastShootTime>636435393962536140</LastShootTime>
              </GunBase>
              <EnableIdleRotation>false</EnableIdleRotation>
              <PreviousIdleRotationState>false</PreviousIdleRotationState>
              <TargetCharacters>true</TargetCharacters>
              <TargetNeutrals>false</TargetNeutrals>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>107578359936884329</EntityId>
              <Min x="1" y="-19" z="-1" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>2.149427</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Reactor 8</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>2.149427</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                      <SubtypeName>Uranium</SubtypeName>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.125</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-20" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-21" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension1x1</SubtypeName>
              <EntityId>89462035942917298</EntityId>
              <Min x="0" y="-23" z="0" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Wheel Suspension 1x1 14</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform>
                <Position x="-0.00017895607743412256" y="0.8346484899520874" z="0.45269304513931274" />
                <Forward x="0.6165768" y="-0.00108735543" z="0.7872933" />
                <Up x="-1.2823235E-05" y="0.999999046" z="0.00139117148" />
                <Orientation>
                  <X>-0.000232903811</X>
                  <Y>0.945328951</Y>
                  <Z>0.000655467156</Z>
                  <W>-0.3261176</W>
                </Orientation>
              </MasterToSlaveTransform>
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>136668266435614394</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.607574642</Damping>
              <Strength>0.742605567</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0</Friction>
              <Power>0</Power>
              <Height>-0.458</Height>
              <MaxSteerAngle>0.32</MaxSteerAngle>
              <SteerSpeed>0.01</SteerSpeed>
              <SteerReturnSpeed>0.01</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>0.03208606</SuspensionTravel>
              <SpeedLimit>360</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="-6" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="-6" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="-7" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="-7" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="4" y="-8" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-4" y="-8" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="-9" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="-9" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="-10" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="-10" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="4" y="-11" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-4" y="-11" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>76928275714412701</EntityId>
              <Min x="2" y="-8" z="-1" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Atmospheric Thrusters 7</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>99057970305189263</EntityId>
              <Min x="-4" y="-8" z="-1" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Atmospheric Thrusters 8</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="-5" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="-5" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="-2" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="-2" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="-3" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="-3" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="-4" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="-4" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-3" y="-5" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="3" y="-5" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-13" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-12" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-11" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-10" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-9" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-8" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-7" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="-6" z="0" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockLargeAtmosphericThrust</SubtypeName>
              <EntityId>127907321121807351</EntityId>
              <Min x="-1" y="-5" z="-2" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Large Atmospheric Thruster</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-4" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-13" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-12" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-11" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-10" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-9" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-8" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-7" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="-6" z="0" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-6" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-4" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="-5" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="-5" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="-6" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="-6" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>100014818593871094</EntityId>
              <Min x="-3" y="-7" z="-1" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>1</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_PhysicalGunObject">
                            <SubtypeName>UltimateAutomaticRifleItem</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>10</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                            <SubtypeName>NATO_5p56x45mm</SubtypeName>
                            <ProjectilesCount>0</ProjectilesCount>
                          </PhysicalContent>
                          <ItemId>1</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>1</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_PhysicalGunObject">
                            <SubtypeName>AngleGrinder4Item</SubtypeName>
                          </PhysicalContent>
                          <ItemId>2</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>1</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_PhysicalGunObject">
                            <SubtypeName>Welder4Item</SubtypeName>
                          </PhysicalContent>
                          <ItemId>3</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>1</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_PhysicalGunObject">
                            <SubtypeName>HandDrill4Item</SubtypeName>
                          </PhysicalContent>
                          <ItemId>4</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>10</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Component">
                            <SubtypeName>Explosives</SubtypeName>
                          </PhysicalContent>
                          <ItemId>5</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>6</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Cargo Container</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>121748977860985528</EntityId>
              <Min x="3" y="-7" z="-1" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>1</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_PhysicalGunObject">
                            <SubtypeName>UltimateAutomaticRifleItem</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>10</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                            <SubtypeName>NATO_5p56x45mm</SubtypeName>
                            <ProjectilesCount>0</ProjectilesCount>
                          </PhysicalContent>
                          <ItemId>1</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>1</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_PhysicalGunObject">
                            <SubtypeName>AngleGrinder4Item</SubtypeName>
                          </PhysicalContent>
                          <ItemId>2</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>1</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_PhysicalGunObject">
                            <SubtypeName>Welder4Item</SubtypeName>
                          </PhysicalContent>
                          <ItemId>3</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>1</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_PhysicalGunObject">
                            <SubtypeName>HandDrill4Item</SubtypeName>
                          </PhysicalContent>
                          <ItemId>4</ItemId>
                        </MyObjectBuilder_InventoryItem>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>10</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Component">
                            <SubtypeName>Explosives</SubtypeName>
                          </PhysicalContent>
                          <ItemId>5</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>6</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Cargo Container 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-8" z="-2" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-9" z="-2" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-10" z="-2" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-11" z="-2" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-8" z="-2" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-9" z="-2" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-10" z="-2" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-11" z="-2" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-13" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-13" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-12" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-12" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="-13" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="-13" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="-13" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="-13" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="-12" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="-12" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="-12" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="-12" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="-13" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="-13" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="-14" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="-14" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-14" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-14" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-15" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-15" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="-19" z="-2" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-21" z="-2" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="-20" z="-2" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-16" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-16" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-17" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-17" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Beacon">
              <SubtypeName>SmallBlockBeacon</SubtypeName>
              <EntityId>115195416543941299</EntityId>
              <Min x="0" y="-23" z="-2" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <Owner>144115188075855899</Owner>
              <CustomName>Morja</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <BroadcastRadius>20000</BroadcastRadius>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>127506961665692215</EntityId>
              <Min x="-1" y="-22" z="-2" />
              <IntegrityPercent>0.5</IntegrityPercent>
              <BuildPercent>0.5</BuildPercent>
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <ShareMode>All</ShareMode>
              <CustomName>Text panel 12</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>107659496137723466</EntityId>
              <Min x="0" y="-24" z="-2" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <Owner>144115188075855899</Owner>
              <CustomName>Button Panel 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>115195416543941299</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary>
                  <item>
                    <Key xsi:type="xsd:int">0</Key>
                    <Value xsi:type="xsd:string">Beacon - Toggle block On/Off</Value>
                  </item>
                </dictionary>
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>132714081143707873</EntityId>
              <Min x="1" y="-20" z="-2" />
              <IntegrityPercent>0.6666667</IntegrityPercent>
              <BuildPercent>0.6666667</BuildPercent>
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855897</Owner>
              <ShareMode>Faction</ShareMode>
              <CustomName>Text panel 11</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-18" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-18" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>141806837320400491</EntityId>
              <Min x="1" y="-21" z="-2" />
              <IntegrityPercent>0.6666667</IntegrityPercent>
              <BuildPercent>0.6666667</BuildPercent>
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855897</Owner>
              <ShareMode>Faction</ShareMode>
              <CustomName>Text panel 7</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>141141944894997114</EntityId>
              <Min x="-1" y="-21" z="-2" />
              <IntegrityPercent>0.6666667</IntegrityPercent>
              <BuildPercent>0.6666667</BuildPercent>
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855897</Owner>
              <ShareMode>Faction</ShareMode>
              <CustomName>Text panel 6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="-19" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="-19" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="-20" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="-20" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="-20" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="-20" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="-21" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="-21" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-19" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-19" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="-20" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="-20" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="-22" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="-22" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="1" y="-22" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-1" y="-22" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="-23" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="-23" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="-24" z="0" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="-24" z="0" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="-23" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="-23" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-22" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-23" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="-22" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-21" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>119320713367059197</EntityId>
              <Min x="-1" y="-22" z="-1" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Atmospheric Thrusters 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-18" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>75903674003004756</EntityId>
              <Min x="-1" y="-19" z="-1" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>2.141693</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Reactor 7</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>2.141693</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                      <SubtypeName>Uranium</SubtypeName>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.125</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>117251690902129722</EntityId>
              <Min x="1" y="-22" z="-1" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Atmospheric Thrusters 11</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-19" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>100096364516231062</EntityId>
              <Min x="0" y="-19" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>134643890877794402</EntityId>
              <Min x="-3" y="-16" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <Owner>144115188075855899</Owner>
              <CustomName>Button Panel 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>127201595243836267</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary>
                  <item>
                    <Key xsi:type="xsd:int">0</Key>
                    <Value xsi:type="xsd:string">Gatling Turret - Toggle block On/Off</Value>
                  </item>
                </dictionary>
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-20" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="-22" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>123761801713286295</EntityId>
              <Min x="0" y="-24" z="-1" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Spotlight</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Radius>10</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <ColorGreen>0.435294122</ColorGreen>
              <ColorBlue>0</ColorBlue>
              <Falloff>3</Falloff>
              <Intensity>5</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <EntityId>139696138313180853</EntityId>
              <Min x="2" y="-12" z="-2" />
              <IntegrityPercent>0.6</IntegrityPercent>
              <BuildPercent>0.6</BuildPercent>
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="-24" z="0" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <EntityId>79847205613541210</EntityId>
              <Min x="-2" y="-12" z="-2" />
              <IntegrityPercent>0.6</IntegrityPercent>
              <BuildPercent>0.6</BuildPercent>
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="-24" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="-24" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="-21" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="-21" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-15" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-15" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="-3" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="-3" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-7" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-8" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-9" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-10" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-11" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-12" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-13" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-14" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-15" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-16" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="0" y="-17" z="0" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-12" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-12" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-13" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-13" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Cockpit">
              <SubtypeName>PassengerSeatSmall</SubtypeName>
              <EntityId>130683242476250426</EntityId>
              <Min x="-1" y="-9" z="-3" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>1</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Passenger Seat 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </BuildToolbar>
              <PilotRelativeWorld xsi:nil="true" />
              <PilotGunDefinition xsi:nil="true" />
              <IsInFirstPersonView>true</IsInFirstPersonView>
              <OxygenLevel>0</OxygenLevel>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RemoteControl">
              <SubtypeName>SmallBlockRemoteControl</SubtypeName>
              <EntityId>129386876796733229</EntityId>
              <Min x="0" y="-6" z="-1" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <CustomName>Remote Control Forward (NPC)</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>127201595243836267</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>115195416543941299</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>111630080345996175</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>136682982595068824</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>79167912626629344</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>126138425804834262</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Force weld</Action>
                      <BlockEntityId>125720797178626380</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </BuildToolbar>
              <PreviousControlledEntityId xsi:nil="true" />
              <AutoPilotEnabled>false</AutoPilotEnabled>
              <FlightMode>2</FlightMode>
              <BindedCamera>0</BindedCamera>
              <CurrentWaypointIndex>-1</CurrentWaypointIndex>
              <Waypoints />
              <Direction>0</Direction>
              <DockingModeEnabled>false</DockingModeEnabled>
              <CollisionAvoidance>false</CollisionAvoidance>
              <Coords />
              <Names />
              <AutopilotSpeedLimit>25.4244022</AutopilotSpeedLimit>
              <WaypointThresholdDistance>0</WaypointThresholdDistance>
              <IsMainRemoteControl>false</IsMainRemoteControl>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>126138425804834262</EntityId>
              <Min x="0" y="-6" z="-2" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <CustomName>Timer Block</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Start</Action>
                      <BlockEntityId>126138425804834262</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>126138425804834262</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>RunWithDefaultArgument</Action>
                      <BlockEntityId>103020782944046617</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>RunWithDefaultArgument</Action>
                      <BlockEntityId>79021847067043618</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value />
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>133611515673565025</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <JustTriggered>true</JustTriggered>
              <Delay>1100</Delay>
              <CurrentTime>50</CurrentTime>
              <IsCountingDown>true</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>103020782944046617</EntityId>
              <Min x="1" y="-6" z="-2" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <CustomName>Programmable block</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>/* 
This script has no variables editable here in code. To change values, use script menu instead. 
Digi's control module binding: 
===================================== 
- Open menu:                     Home 
- Left/Right/Up/Down:      Numeric 4/6/8/2 
- Enter:                               Enter 
- Back:                               Numeric 0 
===================================== 
 
Quick setup: 
^^^^^^^^^^ 
1) Load script into a programmable block, compile it and save it. 
2) Let Timer block trigger itself, start itself and run this PB with no argument (don't run with default argument). 
3) Trigger the timer block. 
4) To LCD you want to a projection be displayed on, add to it's name "3D/x,y/", where x and y are indexes 
    of panel position in multiple matrix of panels, starting at 0! (So the most top left LCD has "3D/0,0/"). 
    If you don't understand, it is enough to write "3D//" (with no quotation marks, of course). 
 
Menu setup &amp; use: 
^^^^^^^^^^^^^^^ 
1) Add to name of LCD you want the menu to be displayed on following: "3D/Menu/" 
2) If you don't have Digi's Control Module, you need to setup 7 buttons: 
    In toolbar (or on button panel), set Run programmable block with following arguments: 
        left, right, up, down, enter, back, menu 
3) To open menu, you press "menu" button. 
 
Event setup: 
^^^^^^^^^^ 
To make certain timer block be run when some integrity falls under certain value, do following: 
1) Add to name of the timer block following: 
        3D/&lt;type&gt;_&lt;percent&gt;/ 
    where type is either "ARMOR", "TERMINAL" or "TOTAL", and value is percent at which (and bellow) the timer 
    block will be triggered. Examples: 
        3D/ARMOR_80/ 
        3D/TOTAL_99/ 
Note: Timer block will be triggered only once the condition is met. If value is higher again, it will be ready to serve. 
 
*/ 
 
static ShipProjection proj; 
static HUDDisplay hud; 
static ShipObject ship; 
static ShipProjectionMenu menu; 
static EventCommander commander; 
static ShipEvents events; 
 
const char green = '\uE001'; 
const char blue = '\uE002'; 
const char red = '\uE003'; 
const char yellow = '\uE004'; 
const char white = '\uE006'; 
const char lightGray = '\uE00E'; 
const char mediumGray = '\uE00D'; 
const char darkGray = '\uE00F'; 
const char dimGray = '\uE017'; 
const char cyan = '\uE007'; 
const char purple = '\uE008'; 
const char yellue = '\uE009'; 
const char greed = '\uE010'; 
const char orange = '\uE011'; 
const char yelleen = '\uE016'; 
const char lgreen = '\uE012'; 
const char lred = '\uE013'; 
const char lyellow = '\uE014'; 
const char lblue = '\uE015'; 
const char dummy = '\uE005'; 
const string trueBlack = "\u2026\u2219"; 
 
Program() { 
    proj = new ShipProjection(this); 
    hud = new HUDDisplay(this); 
    ship = new ShipObject(this); 
    events = new ShipEvents(this); 
    commander = new EventCommander(this); 
    menu = new ShipProjectionMenu(this); 
 
    menu.LoadData(Storage); 
} 
 
void Save() { 
    Echo("INFO: saving program..."); 
    Storage = menu.SaveData(); 
} 
 
static DateTime lastUpdate = DateTime.Now; 
void Main(string argument) { 
    DateTime fTime = DateTime.Now; 
    if (argument.ToUpper().Trim() == "RESET") { 
        Storage = ""; 
    } 
    commander.ProcessTick(argument); 
} 
 
class ShipProjection { 
    MyGridProgram program; 
    List&lt;IMyTextPanel&gt;[][] panels; 
    char[][] projector; 
    float[] depthBuffer; 
    float[] depthBufferStatic; 
    public List&lt;MeshGroup&gt; meshGroups = new List&lt;MeshGroup&gt;(); 
    public Camera camera; 
    public Vector3 dRotate = new Vector3(-0.05f,0f,0f); 
    public Vector3 baseRotation = new Vector3(0,0,0); 
    Vector3 rotateCorrection = new Vector3(0,0,0); 
    Vector3 translation = new Vector3(0,0,0); 
    MatrixD UniverseMatrix; 
    MatrixD RawUniverseMatrix; 
    MatrixD UniverseAxisMatrix; 
    float baseScale = 0.5f; 
    int sx;  
    int sy;  
    char background; 
    bool showAxes = true; 
    bool showHUD = true; 
    bool showEdges = true; 
    bool blueBackground = true; 
 
    byte status = 0; 
    bool ASCS = false; 
    int[] ASCS_ind = new int[] {0,0,0}; 
    const int ASCS_cutoff = 49000; 
    const int ASCS_screencutoff = 49200; 
    int ASCS_initDepthBuffer = -1; 
 
    public ShipProjection(MyGridProgram progr) { 
        program = progr; 
        camera = new Camera(); 
        camera.Position = new Vector3D(0,6,-12);    
        camera.Target = new Vector3D(0,0,0); 
        background = dummy; 
    } 
    public void DepthBufferInit() { 
        var last = (ASCS_initDepthBuffer &gt; -1 ? ASCS_initDepthBuffer : 0); 
        var ASCS_shutdown = false; 
        for (var i = last; i &lt; depthBuffer.Length; i++) { 
            if (program.Runtime.CurrentInstructionCount &gt; ASCS_screencutoff) { 
                ASCS_initDepthBuffer = i; 
                ASCS_shutdown = true; 
                break; 
            } 
            depthBufferStatic[i] = float.MaxValue; 
        } 
        if (!ASCS_shutdown) { 
            ASCS_initDepthBuffer = -2; 
        } 
    } 
    public void ResetData() { 
        char[][] newProjector = new char[sy][]; 
        var helperArray = new char[sx]; 
        for (var x = 0; x &lt; sx; x++) { 
            helperArray[x] = background; 
        } 
        for (var y = 0; y &lt; sy; y++) { 
            newProjector[y] = new char[sx]; 
            Array.Copy(helperArray, newProjector[y], helperArray.Length); 
        } 
        projector = newProjector; 
        Array.Copy(depthBufferStatic, depthBuffer, depthBufferStatic.Length); 
    } 
    bool RefreshDisplays() { 
        var dictPanels = new Dictionary&lt;IMyTextPanel, int[]&gt;(); 
        var maxX = 0; 
        var maxY = 0; 
        var possibleLCDs = new List&lt;IMyTerminalBlock&gt;(); 
        program.GridTerminalSystem.GetBlocksOfType&lt;IMyTextPanel&gt;(possibleLCDs, 
            b =&gt; b.CustomName.Contains("3D/")); 
        for (var i = 0; i &lt; possibleLCDs.Count; i++) { 
            var nam = possibleLCDs[i].CustomName; 
            nam = nam.Substring(nam.IndexOf("3D/")+3, nam.Length-(nam.IndexOf("3D/")+3)); 
  
            var sb = new StringBuilder(10);  
            if (!nam.Contains("/")) { 
                continue; 
            } 
            foreach (var l in nam) { 
                if (l == '/') break; 
                sb.Append(l); 
            } 
            nam = sb.ToString(); 
            if (nam == string.Empty) nam = "0,0"; // '3D//' means '3D/0,0/' 
            var splitted = nam.Split(','); 
            if (splitted.Length != 2) { 
                continue; 
            } 
            int iX; 
            int iY; 
            if (int.TryParse(splitted[0], out iX) &amp;&amp; int.TryParse(splitted[1], out iY)) { 
                maxX = Math.Max(iX, maxX); 
                maxY = Math.Max(iY, maxY); 
                dictPanels.Add(possibleLCDs[i] as IMyTextPanel, new int[] {iX, iY}); 
            } 
        } 
        var panels2 = new List&lt;IMyTextPanel&gt;[maxY+1][]; 
        for (var y = 0; y &lt;= maxY; y++) { 
            panels2[y] = new List&lt;IMyTextPanel&gt;[maxX+1]; 
            for (var x = 0; x &lt;= maxX; x++) { 
                panels2[y][x] = new List&lt;IMyTextPanel&gt;(); 
            } 
        } 
        foreach (var pair in dictPanels) { 
            panels2[pair.Value[1]][pair.Value[0]].Add(pair.Key); 
        } 
        if (panels != null) { 
            for (var y = 0; y &lt; panels.Length; y++) { 
                for (var x = 0; x &lt; panels[y].Length; x++) { 
                    foreach (var pan in panels[y][x]) { 
                        if ((y &gt;= panels2.Length || x &gt;= panels2[y].Length) || !panels2[y][x].Contains(pan)) { 
                            pan.SetValueFloat("FontSize", 1.2f); 
                            pan.WritePublicText(""); 
                            pan.SetValue("BackgroundColor", new Color(0,0,0)); 
                        } 
                    } 
                } 
            } 
        } 
        var lastY = (panels != null ? panels.Length : 0); 
        var lastX = (panels != null &amp;&amp; panels.Length &gt; 0 ? panels[0].Length : 0); 
        var currY = panels2.Length;  
        var currX = (panels2.Length &gt; 0 ? panels2[0].Length : 0); 
        panels = panels2; 
        if ((lastY != currY || lastX != currX)) { 
            sx = 160*currX;  
            sy = 178*currY;  
            depthBuffer = new float[sx*sy];  
            depthBufferStatic = new float[sx*sy]; 
            return true; 
        } 
        return false; 
    } 
    void ShowOnScreen() { 
        if (panels == null) return; 
        var panelsx = panels[0].Length; 
        var panelsy = panels.Length; 
        for (var ay = 0; ay &lt; panelsy; ay++) { 
            for (var ax = 0; ax &lt; panelsx; ax++) { 
                if (panels[ay][ax].Count == 0) continue; 
                StringBuilder sb = new StringBuilder((sx+1)*sy); 
                for (var y = ay *sy/panelsy; y &lt; (ay+1)*sy/panelsy; y++) { 
                    sb.Append(string.Join("", projector[y]).Substring(ax*(sx/panelsx), sx/panelsx) 
                        .TrimEnd(background)).Append('\n'); 
                } 
                foreach (var pan in panels[ay][ax]) { 
                    pan.SetValueFloat("FontSize", 0.1f); 
                    pan.ShowPublicTextOnScreen(); 
                    pan.WritePublicText(sb.ToString().Replace(background.ToString(), trueBlack)); 
                    if (blueBackground) pan.SetValue("BackgroundColor", new Color(0,1,2)); 
                    else pan.SetValue("BackgroundColor", new Color(0,0,0)); 
                } 
            } 
        } 
        lastUpdate = DateTime.Now; 
    } 
    public bool ProcessTick() { 
        if (status == 0) {  
            if (RefreshDisplays()) {status = 1;} 
            else {status = 2;} 
        } 
        if (status == 1) { 
            DepthBufferInit(); 
            if (ASCS_initDepthBuffer == -2) status = 2; 
        } 
        if (status == 2) { 
            if (program.Runtime.CurrentInstructionCount &gt; ASCS_screencutoff) return false; 
            ResetData(); 
            PerformRotation(); 
            status = 3; 
        } 
        if (status == 3) { 
            if (program.Runtime.CurrentInstructionCount &gt; ASCS_screencutoff) return false; 
            BeforeRender(); 
            if (!ASCS) status = 4; 
        } 
        if (status == 4) { 
            if (program.Runtime.CurrentInstructionCount &gt; ASCS_screencutoff) return false; 
            Render(meshGroups); 
            if (!ASCS) status = (showHUD ? (byte)5 : (byte)8); 
        } 
        int minRes = Math.Min(panels[0].Length,panels.Length); 
        if (status == 5) { 
            float armorIntegrity = (float)Math.Floor(100f*ship.CurrentArmorBlocksCount/ship.InitArmorBlocksCount); 
            float terminalIntegrity = (float)Math.Floor(100f*ship.Integrity/ship.InitTerminalBlocksCount); 
            if (hud.CreateControl(0,0,100*minRes,46*minRes, 
string.Format("ARMOR INTEGRITY:\n  {0}%\nTERMINAL INTEGITY:\n  {1}%\nA-BLOCKS: {2}/{3}\nT-BLOCKS: {4}/{5}", 
armorIntegrity, terminalIntegrity,ship.CurrentArmorBlocksCount,ship.InitArmorBlocksCount, 
ship.CurrentTerminalBlocksCount,ship.InitTerminalBlocksCount), 
dimGray, 1f*minRes, red, 2)) status = 6; 
        } 
        if (status == 6) { 
            float armorIntegrity = (float)ship.CurrentArmorBlocksCount/ship.InitArmorBlocksCount; 
            if (hud.CreateBar(4+36*minRes,11*minRes,50*minRes,5*minRes, armorIntegrity, yellow, lightGray)) 
                status = 7; 
        } 
        if (status == 7) { 
            float terminalIntegrity = (float)ship.Integrity/ship.InitTerminalBlocksCount; 
            if (hud.CreateBar(4+36*minRes,25*minRes,50*minRes,5*minRes, terminalIntegrity, yellow, lightGray)) 
                status = 8;  
        } 
        if (status == 8) { 
            if (program.Runtime.CurrentInstructionCount+sy+sx&lt;=ASCS_screencutoff) { 
                ShowOnScreen(); 
                status = 0; 
                return true; 
            } 
        } 
        return false; 
    } 
    public void PerformRotation() { 
        baseRotation += dRotate; 
        if (baseRotation.X &gt; float.MaxValue-100) baseRotation.X = 0; 
        if (baseRotation.Y &gt; float.MaxValue-100) baseRotation.Y = 0; 
        if (baseRotation.Z &gt; float.MaxValue-100) baseRotation.Z = 0; 
    } 
 
    public void PutPixel(Vector3D pos, char col) { 
        if (pos.X &gt;= 0 &amp;&amp; pos.Y &gt;= 0 &amp;&amp; pos.X &lt; sx &amp;&amp; pos.Y &lt; sy) { 
            var index = ((int)pos.X + (int)pos.Y * sx); 
            if (depthBuffer[index] &lt; (float)pos.Z) 
            { 
                return;  
            }  
            depthBuffer[index] = (float)pos.Z; 
            var px = (int)pos.X; 
            var py = (int)pos.Y; 
            bool pxpy = ((px+py)%2 == 0); 
            if (col == cyan) projector[(int)pos.Y][(int)pos.X] = (pxpy ? green : blue); 
            else if (col == purple) projector[(int)pos.Y][(int)pos.X] = (pxpy ? red : blue); 
            else if (col == yellue) projector[(int)pos.Y][(int)pos.X] = (pxpy ? yellow : blue); 
            else if (col == greed) projector[(int)pos.Y][(int)pos.X] = (pxpy ? red : green); 
            else if (col == orange) projector[(int)pos.Y][(int)pos.X] = (pxpy ? yellow : red); 
            else if (col == yelleen) projector[(int)pos.Y][(int)pos.X] = (pxpy ? yellow : green); 
            else if (col == lred) projector[(int)pos.Y][(int)pos.X] = (pxpy ? lightGray : red); 
            else if (col == lgreen) projector[(int)pos.Y][(int)pos.X] = (pxpy ? lightGray : green); 
            else if (col == lblue) projector[(int)pos.Y][(int)pos.X] = (pxpy ? lightGray : blue); 
            else if (col == lyellow) projector[(int)pos.Y][(int)pos.X] = (pxpy ? lightGray : yellow); 
            else projector[py][px] = col; 
        } 
    } 
    public Vector3D Project(Vector3D coord, MatrixD transMat) { 
        var point = Vector3D.Transform(coord, transMat); 
        var x = -point.X*sx + sx/2f; 
        var y = -point.Y*sy + sy/2f; 
        return new Vector3D(x,y, point.Z); 
    } 
    bool IsInsideBounds(Vector3D pos) { 
        return (pos.X &gt;= 0 &amp;&amp; pos.Y &gt;= 0 &amp;&amp; pos.X &lt; sx &amp;&amp; pos.Y &lt; sy); 
    } 
    bool IsTriangleVisible(Vector3D v1, Vector3D v2, Vector3D v3) { 
        if (v1.X &lt; 0 &amp;&amp; v2.X &lt; 0 &amp;&amp; v3.X &lt; 0) return false; 
        if (v1.X &gt;= sx &amp;&amp; v2.X &gt;= sx &amp;&amp; v3.X &gt;= sx) return false; 
        if (v1.Y &lt; 0 &amp;&amp; v2.Y &lt; 0 &amp;&amp; v3.Y &lt; 0) return false; 
        if (v1.Y &gt;= sy &amp;&amp; v2.Y &gt;= sy &amp;&amp; v3.Y &gt;= sy) return false; 
        return true; 
    } 
    void BeforeRender() { 
        if (!ASCS) { 
            var viewMatrix = MatrixD.CreateLookAt(camera.Position, camera.Target, new Vector3D(0,1,0));  
            var projeMatrix = MatrixD.CreateOrthographic(sx/8,sy/8,0.1f, 1f); 
            var previewRota = MatrixD.CreateFromYawPitchRoll(baseRotation.X,baseRotation.Y,baseRotation.Z);  
            var UnivRota = MatrixD.CreateFromYawPitchRoll( 
-rotateCorrection.Y*Math.PI/2,-rotateCorrection.X*Math.PI/2,-rotateCorrection.Z*Math.PI/2); 
            var translation2 = Vector3.Transform(translation, UnivRota); 
            translation2 = Vector3.Round(translation2); 
            var UnivTrans = MatrixD.CreateTranslation(translation2); 
            var UnivScale = MatrixD.CreateScale(baseScale); 
            RawUniverseMatrix = previewRota * viewMatrix * projeMatrix; 
            UniverseAxisMatrix = /*UnivScale * */RawUniverseMatrix; 
            UniverseMatrix = UnivTrans * UnivRota * UnivScale * RawUniverseMatrix; 
        } 
        if (showAxes) { 
            var x_axis = Project(new Vector3(5,0,0), UniverseAxisMatrix); 
            var y_axis = Project(new Vector3(0,5,0), UniverseAxisMatrix); 
            var z_axis = Project(new Vector3(0,0,5), UniverseAxisMatrix); 
            var o_axis = Project(new Vector3(0,0,0), UniverseAxisMatrix); 
            DrawBresenhamLine(o_axis,x_axis,red); 
            DrawBresenhamLine(o_axis,y_axis,yelleen); 
            DrawBresenhamLine(o_axis,z_axis,blue); 
        } 
    } 
    void Render(List&lt;MeshGroup&gt; meshgroups) { 
        var ASCS_shutdown = false; 
        var Universe = UniverseMatrix; 
 
        var istart = ASCS_ind[0]; 
        var mstart = ASCS_ind[1]; 
        var vstart = ASCS_ind[2]; 
        for (var i = istart; i &lt; meshgroups.Count; i++) { 
            if (ASCS_shutdown) break; 
            var group = meshgroups[i]; 
            var grpRot = MatrixD.CreateFromYawPitchRoll(0,group.Rotation.Y,0)* 
                        MatrixD.CreateFromYawPitchRoll(group.Rotation.X,0,0)* 
                        MatrixD.CreateFromYawPitchRoll(0,0,group.Rotation.Z); 
            var groupWorldMatrix = grpRot*MatrixD.CreateScale(group.Scale)* 
                        MatrixD.CreateTranslation(group.Position); 
 
            for (var m = mstart; m &lt; group.meshes.Count; m++) { 
                if (ASCS_shutdown) break; 
                mstart = 0; 
                var mesh = group.meshes[m]; 
             
                var worldMatrix = MatrixD.CreateFromYawPitchRoll(mesh.Rotation.X, mesh.Rotation.Y, 
                        mesh.Rotation.Z) * MatrixD.CreateTranslation(mesh.Position) * groupWorldMatrix; 
                var transformMatrix = worldMatrix * Universe; 
 
                for (var v = vstart; v &lt; mesh.Faces.Length; v++) { 
                    if (ASCS_shutdown) break; 
                    vstart = 0; 
                    if (program.Runtime.CurrentInstructionCount &gt; ASCS_cutoff) { 
                        ASCS = true; 
                        ASCS_ind = new int[] {i, m, v}; 
                        ASCS_shutdown = true; 
                        break; 
                    } 
 
                    var face = mesh.Faces[v]; 
                    var a = Project(mesh.Vertices[face.A], transformMatrix); 
                    var b = Project(mesh.Vertices[face.B], transformMatrix); 
                    var c = Project(mesh.Vertices[face.C], transformMatrix); 
                    if (!IsTriangleVisible(a,b,c)) continue; 
                    try { 
                        DrawTriangle(a,b,c, mesh.Color); 
                        if (showEdges) { 
                            if (face.ab == 1) DrawBresenhamLine(a,b,lightGray); 
                            if (face.bc == 1) DrawBresenhamLine(b,c,lightGray); 
                            if (face.ac == 1) DrawBresenhamLine(a,c,lightGray); 
                        } 
                    } catch (Exception e) { 
                        if (e.Message == "ASCS_shutdown") { 
                            if (!(i == ASCS_ind[0] &amp;&amp; m == ASCS_ind[1] &amp;&amp; v == ASCS_ind[2])) { 
                                ASCS = true; 
                                ASCS_ind = new int[] {i, m, v}; 
                                ASCS_shutdown = true;  
                                break; 
                            } 
                        } 
                    } 
                } 
            } 
        } 
        if (!ASCS_shutdown) { 
            ASCS = false; 
            ASCS_ind = new int[] {0,0,0}; 
        } 
//else program.Echo(string.Format("Group: {0}/{1}\nMesh: {2}/{3}",ASCS_ind[0]+1,meshGroups.Count, 
//ASCS_ind[1]+1,meshGroups[ASCS_ind[0]].meshes.Count)); 
    } 
    float Clamp(float value, float min = 0, float max = 1) {  
        return Math.Max(min, Math.Min(value, max));  
    }  
    float Interpolate(float min, float max, float gradient) {  
        return min + (max - min) * Clamp(gradient);  
    } 
    void ProcessScanLine(int y, Vector3 pa, Vector3 pb, Vector3 pc, Vector3 pd, char color) {  
        var gradient1 = pa.Y != pb.Y ? ((y) - pa.Y) / (pb.Y - pa.Y) : 1;  
        var gradient2 = pc.Y != pd.Y ? ((y) - pc.Y) / (pd.Y - pc.Y) : 1;  
        if (program.Runtime.CurrentInstructionCount &gt; ASCS_cutoff) 
            throw new Exception("ASCS_shutdown"); 
        int sx = (int)Math.Round(Interpolate(pa.X, pb.X, gradient1));  
        int ex = (int)Math.Round(Interpolate(pc.X, pd.X, gradient2)); 
        float z1 = Interpolate(pa.Z, pb.Z, gradient1);   
        float z2 = Interpolate(pc.Z, pd.Z, gradient2);  
 
        for (var x = sx; x &lt; ex; x++)  
        {  
            float gradient = (x+0.5f - sx) / (float)(ex - sx);  
            var z = Interpolate(z1, z2, gradient); 
            PutPixel(new Vector3(x, y, z), color);  
        } 
    } 
    float Cross2D(float x0, float y0, float x1, float y1) {  
        return x0*y1-x1*y0;  
    }  
    float LineSide2D(Vector3 p, Vector3 lineFrom, Vector3 lineTo) {  
        return Cross2D(p.X - lineFrom.X, p.Y - lineFrom.Y, lineTo.X - lineFrom.X, lineTo.Y - lineFrom.Y);  
    } 
    public void DrawTriangle(Vector3 p1, Vector3 p2, Vector3 p3, char color) { 
        if (p1.Y &lt;= p2.Y &amp;&amp; p1.Y &lt;= p3.Y) {if (LineSide2D(p3, p2, p1) &lt;= 0) return;} 
        else if (p2.Y &lt;= p3.Y &amp;&amp; p2.Y &lt;= p1.Y) {if (LineSide2D(p1, p3, p2) &lt;= 0) return;} 
        else if (p3.Y &lt;= p1.Y &amp;&amp; p3.Y &lt;= p2.Y) {if (LineSide2D(p2, p1, p3) &lt;= 0) return;} 
 
        if (p1.Y &gt; p2.Y) {  
            var temp = p2;  
            p2 = p1;  
            p1 = temp;  
        }  
 
        if (p2.Y &gt; p3.Y) {  
            var temp = p2;  
            p2 = p3;  
            p3 = temp;  
        }  
 
        if (p1.Y &gt; p2.Y) { 
            var temp = p2; 
            p2 = p1; 
            p1 = temp; 
        } 
        if (LineSide2D(p2, p1, p3) &gt; 0) { 
            for (var y = (int)p1.Y; y &lt;= (int)p3.Y; y++) {  
                if (y &lt; p2.Y) {  
                    ProcessScanLine(y, p1, p3, p1, p2, color);  
                } else {  
                    ProcessScanLine(y, p1, p3, p2, p3, color);  
                }  
            }  
        }  
        else {  
            for (var y = (int)p1.Y; y &lt;= (int)p3.Y; y++) {  
                if (y &lt; p2.Y) {  
                    ProcessScanLine(y, p1, p2, p1, p3, color);  
                } else {  
                    ProcessScanLine(y, p2, p3, p1, p3, color);  
                }  
            }  
        } 
    } 
    public void DrawBresenhamLine(Vector3 point0, Vector3 point1, char color) {  
        var x0 = point0.X; 
        var y0 = point0.Y; 
        var x1 = point1.X; 
        var y1 = point1.Y; 
 
        var dx = (point1.X - point0.X);   
        var dy = (point1.Y - point0.Y); 
 
        var sx = (x0 &lt; x1) ? 1 : -1; 
        var sy = (y0 &lt; y1) ? 1 : -1; 
        var err = (Math.Floor(y0+sy)+0.5-y0)*dx - (Math.Floor(x0+sx)+0.5-x0)*dy; 
        while (true) { 
            float gradient; 
            if (dx &gt; dy) gradient = Math.Abs(x0-point0.X)/(float)(dx != 0 ? Math.Abs(dx) : 1); 
            else gradient = Math.Abs(y0-point0.Y)/(float)(dy != 0 ? Math.Abs(dy) : 1); 
            var z = point0.Z-Math.Abs(point0.Z*0.01f) + (point1.Z-point0.Z)*gradient; 
            PutPixel(new Vector3D(x0, y0, z), color);  
  
            if (((x0-x1)*sx&gt;=0 || (int)x0==(int)x1) &amp;&amp; ((y0-y1)*sy&gt;=0 || (int)y0==(int)y1)) break; 
            var e2 = 2 * err; 
            if ((e2 + dy*sx)*sx*sy &gt; 0) { err -= dy*sx; x0 += sx; } 
            if ((e2 - dx*sy)*sx*sy &lt; 0) { err += dx*sy; y0 += sy; } 
        }  
    } 
    public List&lt;Parameter&gt; GetParameters() { 
        var holder = new List&lt;Parameter&gt;(30); 
        holder.Add(new Parameter(0.02f, 2, baseScale, 0.02f, "scale", "Projection scale")); 
        holder.Add(new Parameter(-2, 2, rotateCorrection.X, 1, "rotXcorr", "Rotation correction X")); 
        holder.Add(new Parameter(-2, 2, rotateCorrection.Y, 1, "rotYcorr", "Rotation correction Y")); 
        holder.Add(new Parameter(-2, 2, rotateCorrection.Z, 1, "rotZcorr", "Rotation correction Z")); 
        holder.Add(new Parameter(-100, 100, translation.X, 2, "transX", "Translation X")); 
        holder.Add(new Parameter(-100, 100, translation.Y, 2, "transY", "Translation Y")); 
        holder.Add(new Parameter(-100, 100, translation.Z, 2, "transZ", "Translation Z")); 
        holder.Add(new Parameter(-30, 30, (float)camera.Position.Y, 1, "camYpos", "Camera Y position")); 
        holder.Add(new Parameter(-0.2f, 0.2f, dRotate.X, 0.01f, "rotXdelta", "Rotation speed X"));  
        holder.Add(new Parameter(-0.2f, 0.2f, dRotate.Y, 0.01f, "rotYdelta", "Rotation speed Y")); 
        holder.Add(new Parameter(-0.2f, 0.2f, dRotate.Z, 0.01f, "rotZdelta", "Rotation speed Z")); 
        holder.Add(new Parameter(0f, 4f, ship.colorSchema, 1f, "colors", "Blocks color schema")); 
        holder.Add(new Parameter(0f, 1f, (commander.doEvents ? 1 : 0), 1f, "events", "Enable events")); 
        holder.Add(new Parameter(0f, 1f, (ship.doSensors ? 1 : 0), 1f, "sensors", "Enable sensors input")); 
        holder.Add(new Parameter(0f, 1f, (showHUD ? 1 : 0), 1f, "hud", "Show HUD")); 
        holder.Add(new Parameter(0f, 1f, (showAxes ? 1 : 0), 1f, "axes", "Show axes")); 
        holder.Add(new Parameter(0f, 1f, (showEdges ? 1 : 0), 1f, "edges", "Show edges")); 
        holder.Add(new Parameter(0f, 1f, (blueBackground ? 1 : 0), 1f, "bluebgr", "Blue background")); 
        holder.Add(new Parameter(5f, 200f, commander.UpdateShipRate, 5f, "updShp", "Ship update rate")); 
        holder.Add(new Parameter(5f, 100f, commander.UpdateScreenRate, 5f, "updScr", "Screen refresh rate")); 
        return holder; 
    } 
    public void SetParameters(List&lt;Parameter&gt; parameters) { 
        foreach (var p in parameters) { 
            if (p.Variable == "camYpos") camera.Position.Y = p.Current; 
            if (p.Variable == "rotXcorr") rotateCorrection.X = p.Current; 
            if (p.Variable == "rotYcorr") rotateCorrection.Y = p.Current; 
            if (p.Variable == "rotZcorr") rotateCorrection.Z = p.Current; 
            if (p.Variable == "transX") translation.X = p.Current; 
            if (p.Variable == "transY") translation.Y = p.Current; 
            if (p.Variable == "transZ") translation.Z = p.Current; 
            if (p.Variable == "rotXdelta") dRotate.X = p.Current; 
            if (p.Variable == "rotYdelta") dRotate.Y = p.Current; 
            if (p.Variable == "rotZdelta") dRotate.Z = p.Current; 
            if (p.Variable == "scale") baseScale = p.Current; 
            if (p.Variable == "colors") ship.colorSchema = (int)p.Current; 
            if (p.Variable == "events") commander.doEvents = p.Current == 1; 
            if (p.Variable == "sensors") ship.doSensors = p.Current == 1; 
            if (p.Variable == "hud") showHUD = p.Current == 1; 
            if (p.Variable == "axes") showAxes = p.Current == 1; 
            if (p.Variable == "edges") showEdges = p.Current == 1; 
            if (p.Variable == "bluebgr") blueBackground = p.Current == 1; 
            if (p.Variable == "updShp") commander.UpdateShipRate = (Int16)p.Current; 
            if (p.Variable == "updScr") commander.UpdateScreenRate = (Int16)p.Current; 
        } 
    } 
    public class Parameter { 
        public float Min; 
        public float Max; 
        public float Current; 
        public float Delta; 
        public string Variable; 
        public string Desc; 
        public Parameter(float min, float max, float curr, float d, string v, string desc) { 
            Min = min; 
            Max = max; 
            Current = curr; 
            Delta = d; 
            Variable = v; 
            Desc = desc; 
        } 
    } 
} 
public class HUDDisplay { 
    MyGridProgram program; 
    Dictionary&lt;char, Letter&gt; letters = new Dictionary&lt;char, Letter&gt;(); 
    int letterSizeX = 4; 
    int letterSizeY = 5; 
 
    int ASCS_cutoff = 49000; 
    int status = 0; 
    bool ASCS = false; 
    int[] ASCS_ind = null; 
    public HUDDisplay(MyGridProgram progr) { 
        program = progr; 
letters.Add(' ', new Letter("")); 
letters.Add('A', new Letter("0,0:0,4|0,0:3,0|3,0:3,4|0,2:3,2")); 
letters.Add('B', new Letter("0,0:0,4|0,0:2,0|2,0:2,2|0,2:3,2|0,4:3,4|3,2:3,4"));  
letters.Add('C', new Letter("0,0:3,0|0,0:0,4|0,4:3,4")); 
letters.Add('D', new Letter("0,0:0,4|0,4:3,4|3,4:2,0|2,0:0,0")); 
letters.Add('E', new Letter("0,0:0,4|0,4:3,4|0,0:3,0|0,2:2,2")); 
letters.Add('F', new Letter("0,0:0,4|0,0:3,0|0,2:2,2")); 
letters.Add('G', new Letter("0,0:3,0|0,0:0,4|0,4:3,4|3,4:3,2|3,2:2,2")); 
letters.Add('H', new Letter("0,0:0,4|3,0:3,4|0,2:3,2")); 
letters.Add('I', new Letter("1,0:1,4")); 
letters.Add('J', new Letter("3,0:3,4|3,4:0,4|0,4:0,2")); 
letters.Add('K', new Letter("0,0:0,4|0,2:3,4|0,2:3,0")); 
letters.Add('L', new Letter("0,0:0,4|0,4:3,4")); 
letters.Add('M', new Letter("0,0:0,4|0,1:3,1|3,0:3,4")); 
letters.Add('N', new Letter("0,0:0,4|0,0:3,4|3,4:3,0")); 
letters.Add('O', new Letter("0,0:0,4|0,0:3,0|3,0:3,4|0,4:3,4")); 
letters.Add('P', new Letter("0,0:0,4|0,0:3,0|3,0:3,2|3,2:0,2")); 
letters.Add('Q', new Letter("0,0:0,4|0,0:3,0|3,0:3,4|0,4:3,4|2,3:4,5")); 
letters.Add('R', new Letter("0,0:0,4|0,0:2,0|2,0:2,2|0,2:3,2|3,2:3,4")); 
letters.Add('S', new Letter("0,0:0,2|0,0:3,0|0,2:3,2|3,2:3,4|3,4:0,4")); 
letters.Add('T', new Letter("1,0:1,4|0,0:3,0")); 
letters.Add('U', new Letter("0,0:0,4|0,4:3,4|3,4:3,0")); 
letters.Add('V', new Letter("0,0:1,4|1,4:3,0")); 
letters.Add('W', new Letter("0,0:0,4|0,3:3,3|3,0:3,4")); 
letters.Add('X', new Letter("0,0:3,4|3,0:0,4")); 
letters.Add('Y', new Letter("1,4:1,3|1,3:0,0|1,3:3,0")); 
letters.Add('Z', new Letter("0,0:3,0|3,0:0,4|0,4:3,4")); 
letters.Add(':', new Letter("1,1:1,1|1,3:1,3")); 
letters.Add('.', new Letter("1,4:1,4")); 
letters.Add(',', new Letter("1,3:1,4")); 
letters.Add('-', new Letter("0,2:3,2")); 
letters.Add('\'', new Letter("1,0:1,1")); 
letters.Add('!', new Letter("1,0:1,2|1,4:1,4")); 
letters.Add('?', new Letter("0,0:3,0|3,0:3,2|3,2:1,2|1,4:1,4")); 
letters.Add('%', new Letter("3,0:0,4|0,0:0,0|3,4:3,4")); 
letters.Add('/', new Letter("3,0:0,4")); 
letters.Add('(', new Letter("1,0:0,2|0,2:1,4")); 
letters.Add(')', new Letter("0,0:1,2|1,2:0,4")); 
letters.Add('0', new Letter("0,0:0,4|0,0:3,0|3,0:3,4|0,4:3,4|0,0:3,4")); 
letters.Add('1', new Letter("1,1:2,0|2,0:2,4|1,4:3,4")); 
letters.Add('2', new Letter("0,0:3,0|3,0:3,2|3,2:0,2|0,2:0,4|0,4:3,4")); 
letters.Add('3', new Letter("3,0:3,4|0,0:3,0|0,2:3,2|0,4:3,4")); 
letters.Add('4', new Letter("2,4:2,0|2,0:0,3|0,3:3,3")); 
letters.Add('5', new Letter("0,0:3,0|0,0:0,1|0,1:3,2|3,2:3,3|3,3:1,4|1,4:0,3")); 
letters.Add('6', new Letter("0,0:3,0|0,0:0,4|0,4:3,4|3,4:3,2|3,2:0,2")); 
letters.Add('7', new Letter("0,0:3,0|3,0:0,4")); 
letters.Add('8', new Letter("0,0:3,0|3,0:3,4|3,4:0,4|0,4:0,0|0,2:3,2")); 
letters.Add('9', new Letter("0,0:3,0|3,0:3,4|3,4:0,4|0,0:0,2|0,2:3,2")); 
    } 
    public bool CreateControl(int x, int y, int w, int h, string txt, char bgrCol, float fontSize, char fontCol,int borSize=1, 
            char borCol=lightGray) { 
        if (w==0 || h==0) return true; 
        if (status == 0) { 
            var xstart = (ASCS ? ASCS_ind[0] : x); 
            var ystart = (ASCS ? ASCS_ind[1] : y); 
            var ASCS_shutdown = false; 
            for (var iy = ystart; iy &lt; y+h; iy++) { 
                if (ASCS_shutdown) break; 
                for (var ix = xstart; ix &lt; x+w; ix++) { 
                    xstart = x; 
                    if (program.Runtime.CurrentInstructionCount &gt; ASCS_cutoff) { 
                        ASCS = true; 
                        ASCS_ind = new int[] {ix, iy}; 
                        ASCS_shutdown = true; 
                        break; 
                    } 
                    var color = (iy-borSize&lt;y || iy+borSize&gt;=y+h || ix-borSize&lt;x || ix+borSize&gt;=x+w) ? borCol : bgrCol; 
                    proj.PutPixel(new Vector3D(ix,iy,float.MinValue), color); 
                } 
            } 
            if (!ASCS_shutdown) { 
                status = 1; 
                ASCS_ind = null; 
                ASCS = false; 
            } 
        } 
        if (status == 1) { 
            var txtArr = txt.Split('\n'); 
            var ASCS_shutdown = false; 
            var lineStart = (ASCS ? ASCS_ind[0] : 0); 
            var lStart = (ASCS ? ASCS_ind[1] : 0); 
            var pStart = (ASCS ? ASCS_ind[2] : 0); 
            for (var line = lineStart; line &lt; txtArr.Length; line++) { 
                if (ASCS_shutdown) break; 
                var mline = txtArr[line]; 
                for (var l = lStart; l &lt; mline.Length; l++) { 
                    if (ASCS_shutdown) break; 
                    lStart = 0; 
                    char let = mline[l]; 
                    Letter letData; 
                    if (letters.ContainsKey(let)) letData = letters[let]; else letData = letters['?']; 
                    var trans = new Vector2(2*borSize+x+l*(letterSizeX+1), 2*borSize+y+line*(letterSizeY+2)); 
                    for (var p = pStart; p &lt; letData.points.Length; p++) { 
                        if (program.Runtime.CurrentInstructionCount &gt; ASCS_cutoff) { 
                            ASCS_shutdown = true; 
                            ASCS = true; 
                            ASCS_ind = new int[] {line, l, p}; 
                            break; 
                        } 
                        pStart = 0; 
                        var pnts = letData.points[p]; 
                        var p0 = ((Vector2)pnts[0]+trans)*fontSize; 
                        var p1 = ((Vector2)pnts[1]+trans)*fontSize; 
                        proj.DrawBresenhamLine(new Vector3D(p0.X+0.5f,p0.Y+0.5f,float.MinValue), 
                                new Vector3D(p1.X+0.5f,p1.Y+0.5f,float.MinValue),fontCol); 
                    } 
                } 
            } 
            if (!ASCS_shutdown) { 
                ASCS = false; 
                ASCS_ind = null; 
                status = 0; 
            } 
        } 
        return (!ASCS); 
    } 
    public bool CreateBar(int x, int y, int w, int h, float progress, char fillCol=yellow, char borCol=lightGray) { 
        var borSize = 1; 
        var ASCS_shutdown = false; 
        var xstart = (ASCS ? ASCS_ind[0] : x); 
        var ystart = (ASCS ? ASCS_ind[1] : y); 
        for (var iy = ystart; iy &lt; y+h; iy++) { 
            if (ASCS_shutdown) break; 
            for (var ix = xstart; ix &lt; x+w; ix++) { 
                if (program.Runtime.CurrentInstructionCount &gt; ASCS_cutoff) { 
                    ASCS_shutdown = true; 
                    ASCS = true; 
                    ASCS_ind = new int[] {ix, iy}; 
                    break; 
                } 
                xstart = x; 
                char? col = null; 
                if (iy-borSize&lt;y || iy+borSize&gt;=y+h || ix-borSize&lt;x || ix+borSize&gt;=x+w) col = borCol; 
                else if (ix-x-borSize &lt; Math.Round((w-borSize*2f)*progress)) col = fillCol; 
                if (col != null) proj.PutPixel(new Vector3D(ix,iy,float.MinValue), (char)col); 
            } 
        } 
        if (!ASCS_shutdown) { 
            ASCS = false; 
            ASCS_ind = null; 
            return true; 
        } 
        return false; 
    } 
    class Letter { 
        public Vector2I[][] points; 
        public Letter(string data) { 
            Init(data); 
        } 
        void Init(string dat) { 
            var lines = dat.Split('|'); 
            if (!dat.Contains(":")) { points = new Vector2I[0][]; return;} 
            points = new Vector2I[lines.Length][]; 
            for (var a = 0; a &lt; lines.Length; a++) { 
                var points2 = lines[a].Split(':'); 
                int x0 = 0; 
                int y0 = 0; 
                int x1 = 0; 
                int y1 = 0; 
                for (var i = 0; i &lt; 2; i++) { 
                    var coords = points2[i].Split(','); 
                    if (i==0) int.TryParse(coords[0], out x0); else int.TryParse(coords[0], out x1); 
                    if (i==0) int.TryParse(coords[1], out y0); else int.TryParse(coords[1], out y1); 
                } 
                points[a] = new Vector2I[] {new Vector2I(x0, y0), new Vector2I(x1, y1)}; 
            } 
        } 
    } 
} 
struct Face { 
    public int A; 
    public int B; 
    public int C; 
    public int ab; 
    public int bc; 
    public int ac; 
} 
class Mesh { 
    public string Name; 
    public Vector3D[] Vertices; 
    public Face[] Faces; 
    public Vector3D Position; 
    public Vector3D Rotation; 
    public char Color = dimGray; 
    int copyID = 0; 
    public Mesh(string name, int vertCount, int faceCount) { 
        Name = name; 
        Vertices = new Vector3D[vertCount]; 
        Faces = new Face[faceCount]; 
    } 
    public Mesh Copy() { 
        var copyHandler = new Mesh(Name+"_"+copyID, Vertices.Length, Faces.Length); 
        copyID++; 
        copyHandler.Vertices = Vertices.Clone() as Vector3D[]; 
        copyHandler.Faces = Faces.Clone() as Face[]; 
        copyHandler.Position = new Vector3D(Position); 
        copyHandler.Rotation = new Vector3D(Rotation); 
        copyHandler.Color = Color; 
        return copyHandler; 
    } 
} 
class MeshGroup { 
    public string Name;  
    public List&lt;Mesh&gt; meshes; 
    public Vector3D Position;  
    public Vector3D Rotation; 
    public float Scale = 1f; 
    public MeshGroup(string name) { 
        Name = name; 
        meshes = new List&lt;Mesh&gt;(); 
    } 
    public void AddMesh(params Mesh[] meshArr) { 
        foreach (var mesh in meshArr) { 
            meshes.Add(mesh); 
        } 
    } 
} 
class Camera { 
    public Vector3D Position; 
    public Vector3D Target; 
} 
 
class ShipObject { 
    MyGridProgram program; 
    public static Mesh UnitCube; 
    List&lt;IMyTerminalBlock&gt; blockListHolder; 
    Dictionary&lt;IMyCubeGrid, GridInfo&gt; GridsDataInit; 
    Dictionary&lt;IMyCubeGrid, GridInfo&gt; GridsDataCurrent; 
    public List&lt;MeshGroup&gt; GridsMeshes; 
    public List&lt;string&gt; WhitelistGrids = new List&lt;string&gt;() {}; 
    public bool doSensors = true; 
    public int colorSchema = 0; 
 
    public int CurrentTerminalBlocksCount = 0; 
    public int InitTerminalBlocksCount = 0; 
    public int CurrentArmorBlocksCount = 0;  
    public int InitArmorBlocksCount = 0; 
    public float Integrity = 0; 
 
    bool initialized = false; 
    byte status = 0; 
 
    int ASCS_grid = -1; 
    int ASCS = -1; 
    int[] ASCS_ind = new int[] {0,0,0}; 
    int ASCS_cutoff = 49000; 
    int ASCS_datamerge = -1; 
 
    public ShipObject(MyGridProgram progr) { 
        program = progr; 
        InitUnitCube(); 
    } 
    public void ResetGrids() { 
        initialized = false; 
        status = 0; 
    } 
    bool UpdateGridList(bool init) { 
        var ASCS_shutdown = false; 
        if (ASCS_datamerge == -1) { 
            if (GridsDataInit == null || init) GridsDataInit = new Dictionary&lt;IMyCubeGrid, GridInfo&gt;(); 
            if (ASCS == -1) { 
                GridsDataCurrent = new Dictionary&lt;IMyCubeGrid, GridInfo&gt;(); 
                blockListHolder = new List&lt;IMyTerminalBlock&gt;(); 
                program.GridTerminalSystem.GetBlocks(blockListHolder); 
            } 
 
            var start = (ASCS == 0 ? ASCS : 0); 
            for (var i = start; i &lt; blockListHolder.Count; i++) { 
                if (ASCS_cutoff &lt; program.Runtime.CurrentInstructionCount) { 
                    ASCS = i; 
                    program.Echo("ASCS engaged (UpdateGridList)"); 
                    break; 
                } 
                var block = blockListHolder[i]; 
                var tmpWhitelist = WhitelistGrids.Count == 0; 
                foreach (var whitelist in WhitelistGrids) { 
                    if (block.CustomName.Contains(whitelist)) { 
                        tmpWhitelist = true; 
                        break; 
                    } 
                } 
                if (!tmpWhitelist) continue; 
                if (!GridsDataCurrent.ContainsKey(block.CubeGrid)) { 
                    var gr = block.CubeGrid; 
                    var gridInfo = new GridInfo() {blocks = new HashSet&lt;BlockInfo2&gt;(), mMax = gr.Max, mMin = gr.Min}; 
                    GridsDataCurrent.Add(gr, gridInfo); 
                    if (!GridsDataInit.ContainsKey(gr)) { 
                        gridInfo = new GridInfo() {blocks = new HashSet&lt;BlockInfo2&gt;(), mMax = gr.Max, mMin = gr.Min}; 
                        GridsDataInit.Add(gr, gridInfo); 
                    } 
                } 
            } 
        } 
        if (!ASCS_shutdown) { 
            if (ASCS_datamerge == -1) { 
                ASCS_datamerge = 0;  
                return false; 
            } 
            ASCS = -1; 
            ASCS_datamerge = -1; 
            var toRemove = new List&lt;IMyCubeGrid&gt;(); 
            foreach (var pair in GridsDataInit) { 
                if (!GridsDataCurrent.ContainsKey(pair.Key)) { 
                    toRemove.Add(pair.Key); 
                } 
            } 
            foreach (var grid in toRemove) { 
                GridsDataInit.Remove(grid); 
            } 
            return true; 
        } 
        return false; 
    } 
 
    bool UpdateData2() { 
        var ASCS_shutdown = false; 
 
        var gridList = new List&lt;IMyCubeGrid&gt;(GridsDataCurrent.Keys); 
        for (var grid = (ASCS_grid &gt; -1 ? ASCS_grid : 0); grid &lt; gridList.Count; grid++) { 
            if (ASCS_shutdown) break; 
            IMyCubeGrid mGrid = gridList[grid]; 
            GridInfo mInfo = GridsDataCurrent[mGrid]; 
            GridInfo mInfoInit = GridsDataInit[mGrid]; 
            if (ASCS_grid != grid) { 
                mInfo.blocks = new HashSet&lt;BlockInfo2&gt;(); 
                mInfo.mMin = mGrid.Min; 
                mInfo.mMax = mGrid.Max; 
                mInfoInit.mMin = Vector3I.Min(mGrid.Min, mInfoInit.mMin); 
                mInfoInit.mMax = Vector3I.Max(mGrid.Max, mInfoInit.mMax); 
            } 
 
            var dx = mInfo.mMax.X - mInfo.mMin.X+1;  
            var dy = mInfo.mMax.Y - mInfo.mMin.Y+1;  
            var dz = mInfo.mMax.Z - mInfo.mMin.Z+1; 
 
            var xstart = ASCS_ind[0]; 
            var ystart = ASCS_ind[1]; 
            var zstart= ASCS_ind[2]; 
            ASCS_ind = new int[] {0,0,0}; 
 
            for (var x = xstart; x &lt; dx; x++) {  
                if (ASCS_shutdown) break; 
                xstart = 0;  
                for (var y = ystart; y &lt; dy; y++) {  
                    if (ASCS_shutdown) break;  
                    ystart = 0;  
                    for (var z = zstart; z &lt; dz; z++) {  
                        if (ASCS_cutoff &lt; program.Runtime.CurrentInstructionCount) {  
                            ASCS_shutdown = true;  
                            ASCS_ind = new int[] {x, y, z}; 
                            ASCS_grid = grid; 
                            break;  
                        }  
                        zstart = 0; 
                        var vect = new Vector3I(mInfo.mMin.X+x,mInfo.mMin.Y+y,mInfo.mMin.Z+z);  
                        if (mGrid.CubeExists(vect)) {  
                            var slim = mGrid.GetCubeBlock(vect);  
                            BlockInfo2 blck; 
                            if (slim != null) {  
                                var cubeblock = slim.FatBlock;  
                                blck = new BlockInfo2() { Min=cubeblock.Min, Max=cubeblock.Max, refer=cubeblock };  
                            } else {  
                                blck = new BlockInfo2() { Min=vect, Max=vect, refer = null};  
                            }  
                            if (mInfo.blocks.Add(blck)) { 
                                if (blck.refer==null) {mInfo.armorCount++;} 
                                else {mInfo.terminalCount++; 
mInfo.terminalIntegrity+=slim.BuildLevelRatio;} 
                            } 
                            else {} 
                            if (mInfoInit.blocks.Add(blck)) { 
                                if (blck.refer==null) {mInfoInit.armorCount++;} 
                                else {mInfoInit.terminalCount++;  
mInfoInit.terminalIntegrity+=slim.BuildLevelRatio;} 
                            } 
                            else {} 
                        } 
                    } 
                } 
            } 
        } 
        if (!ASCS_shutdown) { 
            ASCS = -1; 
            ASCS_ind = new int[] {0,0,0};  
            ASCS_grid = -1; 
            return true;            
        } 
        return false; 
    } 
 
    public bool ExportData2() { 
        var gridList = new List&lt;IMyCubeGrid&gt;(GridsDataInit.Keys); 
        if (ASCS_grid == -1) { 
            GridsMeshes = new List&lt;MeshGroup&gt;(); 
            CurrentTerminalBlocksCount = 0;  
            InitTerminalBlocksCount = 0;  
            CurrentArmorBlocksCount = 0;  
            InitArmorBlocksCount = 0; 
            Integrity = 0; 
        } 
 
        var refGrid = program.Me.CubeGrid;  
        var refCenterMin = Vector3I.Floor((refGrid.Max+refGrid.Min)/2f);  
        var refCenterMax = Vector3I.Ceiling((refGrid.Max+refGrid.Min)/2f);  
        var refCenter = (refGrid.GridIntegerToWorld(refCenterMin)+refGrid.GridIntegerToWorld(refCenterMax))/2f; 
        var refFwd = new Vector3D();   
        var refUp = new Vector3D();   
        GetGridForwardUp(refGrid, out refFwd, out refUp); 
 
        var istart = (ASCS &gt; -1 ? ASCS : 0); 
        var ASCS_shutdown = false; 
        for (var grid = (ASCS_grid &gt; -1 ? ASCS_grid : 0); grid &lt; gridList.Count; grid++) { 
            if (ASCS_shutdown) break; 
            var mGrid = gridList[grid]; 
            var mInfo = GridsDataInit[mGrid]; 
            var mInfoCurr = GridsDataCurrent[mGrid]; 
            MeshGroup meshgrp; 
            if (ASCS_grid == grid) { 
                meshgrp = GridsMeshes[ASCS_grid]; 
            } else { 
                meshgrp = new MeshGroup(DateTime.Now.ToString("HHmmssFFFF")); 
                GridsMeshes.Add(meshgrp); 
            } 
            var gridSize = (mInfo.mMax-mInfo.mMin); // should be +1, but in blockMesh.Position there is -1, so nope 
 
            var blockArray = new BlockInfo2[mInfo.blocks.Count]; 
            mInfo.blocks.CopyTo(blockArray); 
            for (var i = istart; i &lt; blockArray.Length; i++) { 
                istart = 0; 
                if (ASCS_cutoff &lt; program.Runtime.CurrentInstructionCount) { 
                    ASCS_shutdown = true; 
                    ASCS_grid = grid; 
                    ASCS = i; 
                    break; 
                } 
                BlockInfo2 block = blockArray[i]; 
                Vector3 center = (block.Max+block.Min)/2f; 
                Vector3I size = block.Max-block.Min + 1; 
                Vector3D minMeshCoord = -size; 
                Vector3D maxMeshCoord = size; 
                Vector3 pos = center-mInfo.mMin; 
                Mesh blockMesh = CreateBlockMesh(minMeshCoord, maxMeshCoord); 
                blockMesh.Position = new Vector3D(-gridSize.X+pos.X*2,-gridSize.Y+pos.Y*2,-(-gridSize.Z+pos.Z*2)); 
 
                if (colorSchema==0) blockMesh.Color = GetBlockColor(block, mGrid); 
                else if (colorSchema==1) blockMesh.Color = GetBlockColor2(block, mGrid); 
                else if (colorSchema==2) blockMesh.Color = GetBlockColor3(block, mGrid); 
                else if (colorSchema==3) blockMesh.Color = GetBlockColor4(block, mGrid); 
                else if (colorSchema==4) blockMesh.Color = GetBlockColor5(block, mGrid); 
 
                meshgrp.AddMesh(blockMesh); 
            } 
            if (ASCS_shutdown) break; 
            CurrentTerminalBlocksCount += mInfoCurr.terminalCount; 
            InitTerminalBlocksCount += mInfo.terminalCount; 
            CurrentArmorBlocksCount += mInfoCurr.armorCount; 
            InitArmorBlocksCount += mInfo.armorCount; 
            Integrity += mInfoCurr.terminalIntegrity; 
             
            var currCenterMin = Vector3I.Floor((mInfo.mMax+mInfo.mMin)/2f);  
            var currCenterMax = Vector3I.Ceiling((mInfo.mMax+mInfo.mMin)/2f);  
            var currCenter = (mGrid.GridIntegerToWorld(currCenterMin)+mGrid.GridIntegerToWorld(currCenterMax))/2f; 
 
            var currFwd = new Vector3D(); 
            var currUp = new Vector3D(); 
            GetGridForwardUp(mGrid, out currFwd, out currUp); 
            var angle = GetAnglesFromForwardUp2(refFwd, refUp, currFwd, currUp); 
            var relPos = 2*GetRelativePosition(currCenter, refCenter, refFwd, refUp)/refGrid.GridSize; 
 
            meshgrp.Scale = mGrid.GridSize / refGrid.GridSize; 
            meshgrp.Position = new Vector3D(relPos.X, relPos.Y, -relPos.Z); 
            meshgrp.Rotation = new Vector3D(angle.Y, angle.X, -angle.Z); 
        } 
        if (!ASCS_shutdown) {  
            ASCS = -1; 
            ASCS_grid = -1; 
            return true;  
        } 
        return false; 
    } 
 
 
    char GetBlockColor(BlockInfo2 block, IMyCubeGrid grid) { 
        var currentBlocks = GridsDataCurrent[grid].blocks; 
        var initBlocks = GridsDataInit[grid].blocks; 
        if (!currentBlocks.Contains(block)) return red; 
        else if (block.refer != null) { 
            if (block.refer is IMyFunctionalBlock &amp;&amp; !((IMyFunctionalBlock)block.refer).IsWorking) return yellow; 
            else if (block.refer is IMyFunctionalBlock &amp;&amp; ((IMyFunctionalBlock)block.refer).IsWorking) return green; 
            else return mediumGray; 
        } 
        return darkGray; 
    } 
    char GetBlockColor2(BlockInfo2 block, IMyCubeGrid grid) { 
        var currentBlocks = GridsDataCurrent[grid].blocks;  
        var initBlocks = GridsDataInit[grid].blocks; 
        if (!currentBlocks.Contains(block)) return red; 
        var b = block.refer; 
        if (b!=null) { 
            if (b is IMyFunctionalBlock) { 
                if (!(b as IMyFunctionalBlock).IsFunctional) return orange; 
                if (!(b as IMyFunctionalBlock).IsWorking) return yellow; 
                if (b is IMySolarPanel) { 
                    if (((IMySolarPanel)b).MaxOutput &gt; 0) return green; 
                    return cyan; 
                } 
                if (b is IMyOxygenFarm) { 
                    if ((b as IMyOxygenFarm).GetOutput() &gt; 0) return green; 
                    return cyan; 
                } 
                if (b is IMyDoor) { 
                    if ((b as IMyDoor).Open) return green; 
                    return blue; 
                } 
                if (b is IMyBatteryBlock) { 
                    var ratio = (b as IMyBatteryBlock).CurrentStoredPower/(b as IMyBatteryBlock).MaxStoredPower; 
                    if (ratio&gt;0.6f) return green; 
                    if (ratio&gt;0.3f) return yelleen; 
                    return greed; 
                } 
                if (b is IMySensorBlock) { 
                    if ((b as IMySensorBlock).LastDetectedEntity == null) return green; 
                    return blue; 
                } 
                if (b is IMyShipConnector) { 
                    if ((b as IMyShipConnector).IsConnected) return green; 
                    return yelleen; 
                } 
                if (b is IMyGyro) { 
                    if ((b as IMyGyro).GyroOverride) return blue; 
                    if ((b as IMyGyro).GyroPower &gt; 0.66f) return green; 
                    if ((b as IMyGyro).GyroPower &gt; 0.33f) return yelleen; 
                    return greed; 
                } 
                if (b is IMyOxygenTank) { 
                    if ((b as IMyOxygenTank).GetValue&lt;bool&gt;("Stockpile")) return blue; 
                    var fill = (b as IMyOxygenTank).GetOxygenLevel(); 
                    if (fill &gt; 0.66f) return green; 
                    if (fill &gt; 0.33) return yelleen; 
                    return greed; 
                } 
                if (b is IMyWarhead) { 
                    if ((b as IMyWarhead).IsCountingDown) return purple; 
                    return green; 
                } 
                return green; 
            } 
            if (b is IMyShipController &amp;&amp; (b as IMyShipController).IsUnderControl) return lblue;  
            return lightGray; 
        } 
        return darkGray; 
    } 
    char GetBlockColor3(BlockInfo2 block, IMyCubeGrid grid) {  
        var currentBlocks = GridsDataCurrent[grid].blocks;  
        var initBlocks = GridsDataInit[grid].blocks; 
        if (!currentBlocks.Contains(block)) return red; 
        if (block.refer != null) { 
            var integrity = grid.GetCubeBlock(block.refer.Position).BuildLevelRatio; 
            if (integrity &gt; 0.75) return green; 
            if (integrity &gt; 0.50) return yelleen; 
            if (integrity &gt; 0.25) return yellow; 
            return orange; 
        } 
        return darkGray; 
    } 
    char GetBlockColor4(BlockInfo2 block, IMyCubeGrid grid) {  
        var currentBlocks = GridsDataCurrent[grid].blocks; 
        var initBlocks = GridsDataInit[grid].blocks; 
        if (!currentBlocks.Contains(block)) return red; 
        return darkGray; 
    } 
    char GetBlockColor5(BlockInfo2 block, IMyCubeGrid grid) { 
        var currentBlocks = GridsDataCurrent[grid].blocks;  
        var initBlocks = GridsDataInit[grid].blocks; 
        return darkGray; 
    } 
 
 
    bool ProcessSensors() { 
        var refGrid = program.Me.CubeGrid;   
        var refCenterMin = Vector3I.Floor((refGrid.Max+refGrid.Min)/2f);   
        var refCenterMax = Vector3I.Ceiling((refGrid.Max+refGrid.Min)/2f);   
        var refCenter = (refGrid.GridIntegerToWorld(refCenterMin)+refGrid.GridIntegerToWorld(refCenterMax))/2f;  
        var refFwd = new Vector3D();    
        var refUp = new Vector3D();    
        GetGridForwardUp(refGrid, out refFwd, out refUp); 
        var drawedEntities = new List&lt;IMyEntity&gt;(); 
 
        var lst = new List&lt;IMyTerminalBlock&gt;(); 
        program.GridTerminalSystem.GetBlocksOfType&lt;IMySensorBlock&gt;(lst, b =&gt; b.IsWorking); 
        for (var i = 0; i &lt; lst.Count; i++) { 
            IMyEntity entity = (lst[i] as IMySensorBlock).LastDetectedEntity; 
            if (entity == null || drawedEntities.Contains(entity)) continue; 
            drawedEntities.Add(entity); 
 
            var meshgrpsensor = new MeshGroup(DateTime.Now.ToString("S;HHmmssFFFF")); 
            GridsMeshes.Add(meshgrpsensor); 
            Mesh mesh = CreateEntityMesh(-Vector3D.One, Vector3D.One); 
            mesh.Color = red; 
            meshgrpsensor.AddMesh(mesh); 
            var relPos = 2*GetRelativePosition(entity.GetPosition(), refCenter, refFwd, refUp)/refGrid.GridSize; 
            meshgrpsensor.Position = new Vector3D(relPos.X,relPos.Y,-relPos.Z); 
        } 
        return true; 
    } 
 
    Vector3D GetRelativePosition(Vector3D point, Vector3D fromPos, Vector3D fromFwd, Vector3D fromUp) { 
        var handler = new Vector3D(); 
        var mat = MatrixD.CreateWorld(fromPos, fromFwd, fromUp); 
        handler = Vector3D.Transform(point, MatrixD.Invert(mat)); 
        return handler; 
    } 
    void GetGridForwardUp(IMyCubeGrid grid, out Vector3D forward, out Vector3D up) { 
        var pos = grid.GridIntegerToWorld(new Vector3I(0,0,0)); 
        var worldfwd = grid.GridIntegerToWorld(new Vector3I(0,0,-1)); 
        var worldup = grid.GridIntegerToWorld(new Vector3I(0,1,0)); 
        forward = Vector3D.Normalize(worldfwd-pos); 
        up = Vector3D.Normalize(worldup-pos); 
    }  
    Vector3 GetAnglesFromForwardUp(Vector3D fromFwd, Vector3D fromUp, Vector3D toFwd, Vector3D toUp) {  
        var mat1 = MatrixD.CreateFromDir(fromFwd, fromUp);  
        var mat2 = MatrixD.CreateFromDir(toFwd, toUp);  
        var angle1 = new Vector3D();  
        var angle2 = new Vector3D();  
        MatrixD.GetEulerAnglesXYZ(ref mat1, out angle1);  
        MatrixD.GetEulerAnglesXYZ(ref mat2, out angle2);  
        return (angle2 - angle1);  
    } 
    Vector3 GetAnglesFromForwardUp2(Vector3D fromFwd, Vector3D fromUp, Vector3D toFwd, Vector3D toUp) {   
        var m1 = MatrixD.CreateFromDir(fromFwd, fromUp);  
        var m1Inv = MatrixD.Invert(m1);  
        var transFwd = Vector3D.Transform(toFwd, m1Inv);  
        var transUp = Vector3D.Transform(toUp, m1Inv);  
        var m2 = MatrixD.CreateFromDir(transFwd, transUp);  
        var angle1 = new Vector3D();  
        MatrixD.GetEulerAnglesXYZ(ref m2, out angle1);  
        return angle1;   
    } 
    public bool ProcessTick() {  
        if (!initialized) {  
            if (status == 0 &amp;&amp; UpdateGridList(true)) { 
                status = 3; 
                program.Echo("init complete"); 
                initialized = true; 
            } 
        } 
        if (initialized &amp;&amp; status == 2) { 
            if (UpdateGridList(false)) { 
                status = 3; 
            } 
        } 
        if (initialized &amp;&amp; status == 3) {  
            if (UpdateData2()) { 
                status = 4; 
            } 
        }  
        if (initialized &amp;&amp; status == 4) { 
            if (ExportData2()) { 
                status = doSensors ? (byte)5 : (byte)6; 
            } 
        } 
        if (initialized &amp;&amp; status == 5) { 
            if (ProcessSensors()) { 
                status = 6; 
            } 
        } 
        if (initialized &amp;&amp; status == 6) { 
            status = 2; 
            return true; 
        } 
        return false;  
    } 
 
    public Mesh CreateBlockMesh(Vector3D min, Vector3D max) { 
        var Cube = UnitCube.Copy(); 
        Cube.Vertices[0] = new Vector3D(min.X,max.Y,max.Z);  
        Cube.Vertices[1] = new Vector3D(max.X,max.Y,max.Z);  
        Cube.Vertices[2] = new Vector3D(max.X,max.Y,min.Z);  
        Cube.Vertices[3] = new Vector3D(min.X,max.Y,min.Z);  
        Cube.Vertices[4] = new Vector3D(min.X,min.Y,max.Z);  
        Cube.Vertices[5] = new Vector3D(max.X,min.Y,max.Z);  
        Cube.Vertices[6] = new Vector3D(max.X,min.Y,min.Z);  
        Cube.Vertices[7] = new Vector3D(min.X,min.Y,min.Z);  
        return Cube; 
    } 
    public Mesh CreateEntityMesh(Vector3D min, Vector3D max) {  
        var Obj = new Mesh("UnitCube", 6, 8); 
        Obj.Vertices[0] = new Vector3D(min.X,0,max.Z); 
        Obj.Vertices[1] = new Vector3D(max.X,0,max.Z); 
        Obj.Vertices[2] = new Vector3D(max.X,0,min.Z); 
        Obj.Vertices[3] = new Vector3D(min.X,0,min.Z); 
        Obj.Vertices[4] = new Vector3D(0,max.Y,0); 
        Obj.Vertices[5] = new Vector3D(0,min.Y,0); 
        Obj.Faces[0] = new Face {A=0, B=1, C=4,ab=1,bc=1,ac=0}; // vertices, edge lines  
        Obj.Faces[1] = new Face {A=1, B=2, C=4,ab=1,bc=1,ac=0}; 
        Obj.Faces[2] = new Face {A=2, B=3, C=4,ab=1,bc=1,ac=0}; 
        Obj.Faces[3] = new Face {A=3, B=0, C=4,ab=1,bc=1,ac=0}; 
        Obj.Faces[4] = new Face {A=1, B=0, C=5,ab=0,bc=1,ac=0}; 
        Obj.Faces[5] = new Face {A=2, B=1, C=5,ab=0,bc=1,ac=0}; 
        Obj.Faces[6] = new Face {A=3, B=2, C=5,ab=0,bc=1,ac=0}; 
        Obj.Faces[7] = new Face {A=0, B=3, C=5,ab=0,bc=1,ac=0}; 
        Obj.Position = new Vector3D(0,0,0); 
        Obj.Rotation = new Vector3D(0,0,0); 
        return Obj; 
    } 
    void InitUnitCube() { 
        UnitCube = new Mesh("UnitCube", 8, 12);  
        UnitCube.Vertices[0] = new Vector3D(-1,1,1);    
        UnitCube.Vertices[1] = new Vector3D(1,1,1);    
        UnitCube.Vertices[2] = new Vector3D(1,1,-1);    
        UnitCube.Vertices[3] = new Vector3D(-1,1,-1);    
        UnitCube.Vertices[4] = new Vector3D(-1,-1,1);    
        UnitCube.Vertices[5] = new Vector3D(1,-1,1);    
        UnitCube.Vertices[6] = new Vector3D(1,-1,-1);    
        UnitCube.Vertices[7] = new Vector3D(-1,-1,-1);    
        UnitCube.Faces[0] = new Face {A=0, B=1, C=2,ab=1,bc=1,ac=0}; // vertices, edge lines 
        UnitCube.Faces[1] = new Face {A=2, B=3, C=0,ab=1,bc=1,ac=0}; 
        UnitCube.Faces[2] = new Face {A=4, B=7, C=6,ab=1,bc=1,ac=0}; 
        UnitCube.Faces[3] = new Face {A=6, B=5, C=4,ab=1,bc=1,ac=0}; 
        UnitCube.Faces[4] = new Face {A=0, B=4, C=5,ab=1,bc=0,ac=0}; 
        UnitCube.Faces[5] = new Face {A=5, B=1, C=0,ab=1,bc=0,ac=0}; 
        UnitCube.Faces[6] = new Face {A=7, B=4, C=0,ab=0,bc=0,ac=0}; 
        UnitCube.Faces[7] = new Face {A=0, B=3, C=7,ab=0,bc=1,ac=0}; 
        UnitCube.Faces[8] = new Face {A=3, B=2, C=6,ab=0,bc=1,ac=0}; 
        UnitCube.Faces[9] = new Face {A=6, B=7, C=3,ab=0,bc=0,ac=0}; 
        UnitCube.Faces[10] = new Face {A=1, B=5, C=6,ab=0,bc=0,ac=0}; 
        UnitCube.Faces[11] = new Face {A=6, B=2, C=1,ab=0,bc=0,ac=0}; 
        UnitCube.Position = new Vector3D(0,0,0);    
        UnitCube.Rotation = new Vector3D(0,0,0); 
    } 
    class BlockInfo2 { 
        public Vector3I Min;  
        public Vector3I Max;  
        public IMyCubeBlock refer; 
        public override bool Equals(object obj) { 
            BlockInfo2 ob = obj as BlockInfo2; 
            if (ob == null) return false; 
            return (Min==ob.Min &amp;&amp; Max==ob.Max &amp;&amp; refer==ob.refer); 
        } 
        public override int GetHashCode() {     // My first GetHashCode, I hope it'll work! :) 
            var holder = 17; 
            holder = 31*holder + (Min != null ? Min.GetHashCode() : 0); 
            holder = 31*holder + (Max != null ? Max.GetHashCode() : 0); 
            holder = 31*holder + (refer != null ? refer.GetHashCode() : 0); 
            return holder; 
        } 
    } 
    class GridInfo { 
        public HashSet&lt;BlockInfo2&gt; blocks; 
        public Vector3I mMin; 
        public Vector3I mMax; 
        public int terminalCount = 0; 
        public int armorCount = 0; 
        public float terminalIntegrity = 0; 
    } 
} 
 
class ShipProjectionMenu { 
    MyGridProgram program; 
    List&lt;IMyTerminalBlock&gt; lcds = new List&lt;IMyTerminalBlock&gt;(); 
    bool isVisible = false; 
    List&lt;ShipProjection.Parameter&gt; resetData; 
    List&lt;ShipProjection.Parameter&gt; menu; 
    string[] submenu = new string[] {"Set parameters", "Whitelist grids", "Show events", "Reset rotation", 
        "Reset parameters", "Reset grids data", "Exit"}; 
    int currSelected = 0; 
    int subMenuSelected = 0; 
    int menuSlider = 0; 
    int menuItems = 12; 
 
    bool DigiControlModule; 
    Dictionary&lt;string, string&gt; bindToCommand = new Dictionary&lt;string, string&gt;() { 
        {"num8", "up"}, 
        {"num2", "down"}, 
        {"num4", "left"}, 
        {"num6", "right"}, 
        {"num5", "enter"}, 
        {"num0", "back"}, 
        {"home", "menu"} 
    }; 
    public ShipProjectionMenu(MyGridProgram prog) { 
        program = prog; 
        resetData = proj.GetParameters(); 
        menu = proj.GetParameters(); 
        try { 
            var inputs = program.Me.GetValue&lt;Dictionary&lt;string, object&gt;&gt;("ControlModule.Inputs"); 
            DigiControlModule = true; 
        } catch { 
            DigiControlModule = false; 
        } 
        RefreshScreens(); 
        isVisible = true; 
        SwitchMenu(); 
    } 
    public List&lt;ShipProjection.Parameter&gt; GetCurrentParameters() { 
        return menu; 
    } 
    void SwitchMenu() { 
        isVisible = !isVisible; 
        if (isVisible) { 
            currSelected = 0; 
            subMenuSelected = 0; 
        } else { 
            foreach (var p in lcds) { 
                var pan = p as IMyTextPanel; 
                pan.WritePublicText(""); 
                pan.SetValue("BackgroundColor", new Color(0,0,0,255));  
                pan.SetValue("FontColor", new Color(255,255,255,255)); 
                pan.SetValueFloat("FontSize", 1.4f); 
            } 
        } 
    } 
    void Move(string dir) { 
        if (dir == "up") currSelected--; 
        if (dir == "down") currSelected++; 
        if (subMenuSelected == 0) { 
            if (currSelected &gt;= submenu.Length) currSelected = submenu.Length-1; 
            if (currSelected &lt; 0) currSelected = 0; 
        } else if (subMenuSelected == 1) { 
            if (currSelected &gt;= menu.Count) currSelected = menu.Count-1;  
            if (currSelected &lt; 0) currSelected = 0; 
            if (currSelected &gt;= menuSlider+menuItems) menuSlider++; 
            if (currSelected &lt; menuSlider) menuSlider--; 
            if (dir == "left") { 
                var item = menu[currSelected]; 
                item.Current = Math.Max((float)Math.Round(item.Current-item.Delta, 4), item.Min); 
            } 
            if (dir == "right") { 
                var item = menu[currSelected];  
                item.Current = Math.Min((float)Math.Round(item.Current+item.Delta, 4), item.Max); 
            } 
        } else if (subMenuSelected == 2) { 
            if (currSelected &gt;= ship.WhitelistGrids.Count) currSelected = ship.WhitelistGrids.Count-1;  
            if (currSelected &lt; 0) currSelected = 0; 
            if (currSelected &gt;= menuSlider+menuItems-4) menuSlider++;  
            if (currSelected &lt; menuSlider) menuSlider--; 
        } else if (subMenuSelected == 3) { 
            if (currSelected &gt;= events.information.Count) currSelected = events.information.Count-1;   
            if (currSelected &lt; 0) currSelected = 0;  
            if (currSelected &gt;= menuSlider+menuItems-2) menuSlider++;   
            if (currSelected &lt; menuSlider) menuSlider--; 
        } 
    } 
    void Enter() { 
        if (subMenuSelected == 0) { 
            if (currSelected == 0) { 
                menu = proj.GetParameters(); 
                subMenuSelected = 1; 
                currSelected = 0; 
                menuSlider = 0; 
            } else if (currSelected == 1) { 
                subMenuSelected = 2; 
                currSelected = 0; 
                menuSlider = 0; 
            } else if (currSelected == 2) { 
                subMenuSelected = 3; 
                currSelected = 0; 
                menuSlider = 0; 
            } else if (currSelected == 3) { 
                ResetRotation(); 
            } else if (currSelected == 4) { 
                ResetValues(); 
            } else if (currSelected == 5) { 
                ship.ResetGrids(); 
            } else if (currSelected == 6) {  
                SwitchMenu(); 
            } 
        } 
    } 
    void Back() { 
        if (subMenuSelected == 1 || subMenuSelected == 2 || subMenuSelected == 3) { 
            subMenuSelected = 0; 
            currSelected = 0; 
        } 
    } 
    void ResetRotation() { 
        proj.baseRotation = new Vector3(0,0,0); 
    } 
    public void ResetValues() { 
        var tmpCurr = menu; 
        proj.SetParameters(resetData); 
        menu = proj.GetParameters(); 
        proj.SetParameters(tmpCurr); 
    } 
    public string SaveData() { // "stopped?/whitelist1|whitelist2/var1:5|var2:8|var3:-0.25" 
        var sb = new StringBuilder(200); 
        sb.Append(commander.Stopped ? 1 : 0); 
        sb.Append("/"); 
        foreach (var wh in ship.WhitelistGrids) { 
            if (wh.Contains("/") || wh.Contains("|")) continue; 
            sb.Append(wh); 
            sb.Append("|"); 
        } 
        if (ship.WhitelistGrids.Count &gt; 0) sb.Remove(sb.Length-1, 1); 
        sb.Append("/"); 
        foreach (var para in menu) { 
            sb.Append(para.Variable); 
            sb.Append(":"); 
            sb.Append(para.Current.ToString()); 
            sb.Append("|"); 
        } 
        sb.Remove(sb.Length-1, 1);  
        return sb.ToString(); 
    } 
    public void LoadData(string data) { 
        if (data == String.Empty) return; 
        program.Echo("loading data..."); 
        var savedArray = data.Split('/'); 
        if (savedArray.Length != 3) return; 
 
        commander.Stopped = savedArray[0] == "1"; 
 
        ship.WhitelistGrids = new List&lt;string&gt;(); 
        if (savedArray[1].Length &gt; 0) { 
            var whitelistGrids = savedArray[1].Split('|'); 
            foreach (var wh in whitelistGrids) { 
                ship.WhitelistGrids.Add(wh); 
            } 
        } 
 
        var dataArray = savedArray[2].Split('|'); 
        var dataDict = new Dictionary&lt;string, float&gt;(); 
        foreach (var pair in dataArray) { 
            if (!pair.Contains(":")) continue; 
            var splitted = pair.Split(':'); 
            string key = splitted[0]; 
            float value = 0; 
            if (!float.TryParse(splitted[1], out value)) program.Echo("LOAD ERR: '"+key+"' value not resolved!"); 
            if (!dataDict.ContainsKey(key)) dataDict.Add(key, value); 
        } 
        foreach (var para in menu) { 
            if (dataDict.ContainsKey(para.Variable)) { 
                para.Current = dataDict[para.Variable]; 
            } 
        } 
        program.Echo("data loaded"); 
    } 
    bool ProcessArgument(string arg) { 
        var arg2 = arg.ToLower(); 
        if (arg2 == "menu") SwitchMenu(); 
        else if (isVisible == false) return false; 
        else if (arg2 == "up" || arg2 == "down" || arg2 == "left" || arg2 == "right") Move(arg2); 
        else if (arg2 == "enter") Enter(); 
        else if (arg2 == "back") Back(); 
        else if (subMenuSelected == 2 &amp;&amp; arg != "") return ProcessWhitelist(arg); 
        else return false; 
        return true; 
    } 
    bool ProcessWhitelist(string argument) { 
        var argSplit = argument.Trim().Split(); 
        if (argSplit[0] == "add") { 
            if (argSplit.Length &gt; 1) ship.WhitelistGrids.Add(argument.Substring(4,argument.Length-4)); 
        } else if (argSplit[0] == "remove") { 
            if (argSplit.Length &gt; 1) { 
                int tmp = -1; 
                int.TryParse(argument.Substring(7,argument.Length-7), out tmp); 
                if (tmp &gt;= 0 &amp;&amp; tmp &lt; ship.WhitelistGrids.Count) ship.WhitelistGrids.RemoveAt(tmp); 
            } else { 
                if (currSelected &gt; 0 &amp;&amp; ship.WhitelistGrids.Count &gt; currSelected) 
                    ship.WhitelistGrids.RemoveAt(currSelected); 
            } 
            if (currSelected &gt;= ship.WhitelistGrids.Count) currSelected = ship.WhitelistGrids.Count-1;   
            if (currSelected &lt; 0) currSelected = 0; 
        } else return false; 
        return true; 
    } 
    public bool ProcessTick(string argument) { 
        if (DigiControlModule) { 
            var inputs = program.Me.GetValue&lt;Dictionary&lt;string, object&gt;&gt;("ControlModule.Inputs"); 
            foreach (var key in bindToCommand) { 
                if (inputs.ContainsKey(key.Key)) { 
                    argument = bindToCommand[key.Key]; 
                    inputs.Remove(key.Key); 
                    break; 
                } 
            } 
        } 
        RefreshScreens(); 
        var finish = ProcessArgument(argument); 
        if (isVisible) ShowMenu(); 
        return (finish); 
    } 
    void RefreshScreens() { 
        program.GridTerminalSystem.SearchBlocksOfName("3D/Menu/", lcds); 
    } 
    void ShowMenu() { 
        if (lcds.Count == 0) return; 
        StringBuilder txt = new StringBuilder(200); 
        txt.Append("3D Projection Menu\n======================\n"); 
        if (subMenuSelected == 0) { 
            for (var i = 0; i &lt; submenu.Length; i++) { 
                txt.Append(submenu[i]); 
                if (i == currSelected) txt.Append(" &lt;&lt;"); 
                txt.Append("\n"); 
            } 
        } else if (subMenuSelected == 1) { 
            for (var i = menuSlider; i &lt; Math.Min(menu.Count, menuSlider+menuItems); i++) { 
                if (i == currSelected) txt.Append("&gt;&gt; "); 
                var it = menu[i]; 
                txt.Append(it.Desc); 
                txt.Append(":   "+(it.Current == it.Min ? "    " : "-= ")); 
                txt.Append(it.Current); 
                txt.Append((it.Current == it.Max ? "    " : " =-")); 
                txt.Append("\n");  
            } 
        } else if (subMenuSelected == 2) { 
            txt.Append("Run PB with these commands:\n  add &lt;tag&gt;\n  remove | remove &lt;number&gt;\n"); 
            txt.Append("======================\n"); 
            for (var i = 0; i &lt; ship.WhitelistGrids.Count; i++) { 
                if (i == currSelected) txt.Append("&gt;&gt; "); 
                txt.AppendLine(i+": \""+ship.WhitelistGrids[i]+"\""); 
            } 
        } else if (subMenuSelected == 3) { 
            if (commander.doEvents) { 
                txt.Append("Registered timer blocks:\n");  
                txt.Append("======================\n"); 
                foreach (var info in events.information) { 
                    txt.Append(info.Type+"&lt;="+info.Value+": "); 
                    txt.AppendLine(info.Triggered ? "FIRED" : "WAITING"); 
                } 
            } else { 
                txt.Append("Events disabled in parameters!\n"); 
            } 
        } 
        txt.Append("---------------------------------------"); 
        foreach (var p in lcds) { 
            var pan = p as IMyTextPanel; 
            pan.SetValueFloat("FontSize", 1.2f); 
            pan.SetValue("BackgroundColor", new Color(0,0,3,255)); 
            pan.SetValue("FontColor", new Color(255,255,255,255)); 
            pan.WritePublicText(txt.ToString()); 
        } 
    } 
} 
class ShipEvents { 
    MyGridProgram program; 
    List&lt;IMyTerminalBlock&gt; possibleBlocks; 
    List&lt;IMyTerminalBlock&gt; firedBlocks; 
    public List&lt;EventInfo&gt; information; 
    byte status = 0; 
 
    int ASCS_cutoff = 49000; 
    int ASCS = -1; 
 
    public ShipEvents(MyGridProgram progr) { 
        program = progr; 
        possibleBlocks = new List&lt;IMyTerminalBlock&gt;(); 
        firedBlocks = new List&lt;IMyTerminalBlock&gt;(); 
    } 
    public bool ProcessTick() { 
        if (status == 0) { 
            if (Process()) status = 1; 
        } 
        if (status == 1) { 
            if (GarbageFired()) { 
                status = 0; 
                return true; 
            } 
        } 
        return false; 
    } 
    bool Process() { 
        if (ASCS == -1) { 
            program.GridTerminalSystem.GetBlocksOfType&lt;IMyTimerBlock&gt;(possibleBlocks, 
                b =&gt; b.CustomName.Contains("3D/")); 
            information = new List&lt;EventInfo&gt;(); 
        } 
        var ASCS_shutdown = false; 
        for (var i = (ASCS &gt; -1 ? ASCS : 0); i &lt; possibleBlocks.Count; i++) { 
            if (program.Runtime.CurrentInstructionCount &gt; ASCS_cutoff) { 
                ASCS_shutdown = true; 
                ASCS = i; 
                break; 
            } 
            var blck = possibleBlocks[i]; 
            var nam = blck.CustomName; 
            nam = nam.Substring(nam.IndexOf("3D/")+3, nam.Length-(nam.IndexOf("3D/")+3));  
            var sb = new StringBuilder(30);   
            if (!nam.Contains("/")) {firedBlocks.Remove(blck);continue;} 
            foreach (var l in nam) {  
                if (l == '/') break;  
                sb.Append(l);  
            }  
            nam = sb.ToString(); 
            var commSplit = nam.Split('_'); 
            if (commSplit.Length != 2 ) {firedBlocks.Remove(blck);continue;} 
            if (commSplit[0] != "TERMINAL" &amp;&amp; commSplit[0] != "ARMOR" &amp;&amp; commSplit[0] != "TOTAL") 
                {firedBlocks.Remove(blck);continue;} 
            int mNumber = -1; 
            int.TryParse(commSplit[1], out mNumber); 
            if (mNumber &lt; 0 || mNumber &gt; 100) {firedBlocks.Remove(blck);continue;} 
            int armorIntegrity = (int)Math.Floor(100f*ship.CurrentArmorBlocksCount/ship.InitArmorBlocksCount);  
            int terminalIntegrity = (int)Math.Floor(100f*ship.Integrity/ship.InitTerminalBlocksCount); 
            int totalIntegrity = (int)Math.Floor((armorIntegrity+terminalIntegrity)/2f); 
            if (commSplit[0] == "TERMINAL") { 
                ProcessEvent(terminalIntegrity, mNumber, blck, commSplit[0]); 
            } else if (commSplit[0] == "ARMOR") { 
                ProcessEvent(armorIntegrity, mNumber, blck, commSplit[0]); 
            } else if (commSplit[0] == "TOTAL") { 
                ProcessEvent(totalIntegrity, mNumber, blck, commSplit[0]); 
            } 
        } 
        if (!ASCS_shutdown) { 
            ASCS = -1; 
            return true; 
        } 
        return false; 
    } 
    void ProcessEvent(int integrity, int num, IMyTerminalBlock blck, string type = "") { 
        if (integrity &lt;= num) { 
            if (blck.IsWorking &amp;&amp; !firedBlocks.Contains(blck)) { 
                firedBlocks.Add(blck); 
                blck.ApplyAction("TriggerNow"); 
            } 
        } else { 
            firedBlocks.Remove(blck); 
        } 
        information.Add(new EventInfo {Type = type, Value = num, Block = blck, 
            Triggered = firedBlocks.Contains(blck) }); 
    } 
    bool GarbageFired() { 
        var ASCS_shutdown = false; 
        for (var i = (ASCS &gt; -1 ? ASCS : 0); i &lt; firedBlocks.Count; i++) { 
            if (program.Runtime.CurrentInstructionCount &gt; ASCS_cutoff) {  
                ASCS_shutdown = true;  
                ASCS = i;  
                break;  
            } 
            if (!possibleBlocks.Contains(firedBlocks[i])) { 
                firedBlocks.RemoveAt(i); 
                i--; 
            } 
        } 
        if (!ASCS_shutdown) {  
            ASCS = -1;  
            return true;  
        } 
        return false; 
    } 
    public struct EventInfo { 
        public string Type; 
        public int Value; 
        public IMyTerminalBlock Block; 
        public bool Triggered; 
    } 
} 
 
class EventCommander { 
    public Int16 UpdateShipRate = 15; 
    public Int16 UpdateScreenRate = 10; 
    public bool Stopped = false; 
    public bool doEvents = true; 
 
    MyGridProgram program; 
    int status = 0; 
    long clock = 0; 
    bool shipUpdate = false; 
    bool screenUpdate = false; 
    public EventCommander(MyGridProgram progr) { 
        program = progr; 
    } 
    public void ProcessTick(string arg) { 
        var argUp = arg.ToUpper().Replace("_", " ").Trim(); 
        if (argUp == "POWER ON") Stopped = false; 
        else if (argUp == "POWER OFF") Stopped = true; 
        else if (argUp == "POWER") Stopped = !Stopped; 
        if (Stopped) { 
            program.Echo("3D Projection INFO:\n==================\nScript execution paused!\n"+ 
                "Use 'power on' or 'power' to resume."); 
            return; 
        } 
        if (argUp == "RESET") { 
            menu.ResetValues(); 
        } 
        var txt = "3D Projection by Georgik"; 
        program.Echo(txt.Substring(0, Math.Min(txt.Length, (int)clock%(txt.Length*5+60)/5))); 
        program.Echo("===================="); 
        program.Echo("If this text doesn't change, it is possible that this script is not running."); 
        clock++; 
        if (clock == long.MaxValue) clock = long.MinValue; 
 
        bool updateShip = (clock % UpdateShipRate == 0); 
        bool updateScreen = (clock % UpdateScreenRate == 0); 
        shipUpdate |= updateShip; 
        screenUpdate |= updateScreen; 
 
        if (status == -1) { 
            proj.SetParameters(menu.GetCurrentParameters()); 
            if (shipUpdate) {status = 0; shipUpdate=false;} 
            else if (screenUpdate) {status = 1; screenUpdate=false;} 
        } 
 
        menu.ProcessTick(arg); 
 
        if (status == 0) { 
            if (ship.ProcessTick()) { 
                proj.meshGroups = ship.GridsMeshes; 
                status = doEvents ? 10 : -1; 
            } 
        } 
        if (status == 10) { 
            if (events.ProcessTick()) status = -1; 
        } 
        if (status == 1) { 
            if (proj.ProcessTick()) { 
                status = -1; 
            } 
        } 
    } 
}</Program>
              <Storage>0//scale:0.18|rotXcorr:1|rotYcorr:0|rotZcorr:0|transX:0|transY:0|transZ:0|camYpos:6|rotXdelta:-0.05|rotYdelta:0|rotZdelta:0|colors:0|events:1|sensors:1|hud:1|axes:1|edges:1|bluebgr:1|updShp:15|updScr:10</Storage>
              <DefaultRunArgument />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="-10" z="-1" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="-10" z="-1" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>133611515673565025</EntityId>
              <Min x="0" y="-10" z="-1" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0" y="-0.95" z="-0.3" />
              <Owner>144115188075855899</Owner>
              <CustomName>Programmable block 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>        const string RemoteBlockTag = "(NPC)"; 
 
        List&lt;IMyRemoteControl&gt; _remotes = new List&lt;IMyRemoteControl&gt;(); 
        List&lt;IMyUserControllableGun&gt; _guns = new List&lt;IMyUserControllableGun&gt;(); 
 
        void Main(string argument) 
        { 
            Vector3D origin; 
            if (string.IsNullOrEmpty(Storage)) 
            { 
                origin = Me.GetPosition(); 
                Storage = origin.ToString(); 
            } 
            else 
            { 
                Vector3D.TryParse(Storage, out origin); 
            } 
 
            GridTerminalSystem.GetBlocksOfType(_remotes, block =&gt; block.CustomName.IndexOf(RemoteBlockTag, StringComparison.OrdinalIgnoreCase) &gt;= 0); 
            if (_remotes.Count &gt; 0) 
            { 
                var remote = _remotes[0]; 
                remote.ClearWaypoints(); 
                Vector3D player; 
                var success = remote.GetNearestPlayer(out player); 
                if (success) 
                { 
                    var gotoOrigin = false; 
                    GridTerminalSystem.GetBlocksOfType(_guns); 
                    if (_guns.Count == 0) 
                        gotoOrigin = true; 
                    else 
                    { 
                        var hasUsableGun = false; 
                        foreach (var weapon in _guns) 
                        { 
                            if (!weapon.IsFunctional) 
                                continue; 
                            if (weapon.HasInventory &amp;&amp; !weapon.GetInventory(0).IsItemAt(0)) 
                                continue; 
 
                            hasUsableGun = true; 
                        } 
 
                        if (!hasUsableGun) 
                            gotoOrigin = true; 
                    } 
 
                    if (Vector3D.DistanceSquared(player, origin) &gt; 20000 * 20000) 
                        gotoOrigin = true; 
 
                    if (gotoOrigin) 
                        remote.AddWaypoint(origin, "Origin"); 
                    else 
                        remote.AddWaypoint(player, "Player"); 
 
                    remote.SetAutoPilotEnabled(true); 
                } 
            } 
        } 
</Program>
       
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CargoContainer">
              <SubtypeName>SmallBlockSmallContainer</SubtypeName>
              <EntityId>109147288521391810</EntityId>
              <Min x="0" y="-11" z="-2" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <Owner>144115188075855899</Owner>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>18</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                            <SubtypeName>NATO_25x184mm</SubtypeName>
                            <ProjectilesCount>0</ProjectilesCount>
                          </PhysicalContent>
                          <ItemId>1</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>2</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Cargo Container 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>113405171164517740</EntityId>
              <Min x="1" y="-10" z="-2" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <Owner>144115188075855899</Owner>
              <CustomName>Text Panel Horizon</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>0.3</FontSize>
              <PublicDescription>   … … … … … … … … … … … … … … … … … … … … … … … …
   … … … … … … … … … … … … … … … … … … … … … … … … … … … … … … … …
   … … … … … … … … … … … … … … … … … … … … … … … … … …
   … … … … … … … … … … … … … … … … … … … … … … … … … … … … … … … …
   … … … … … … … … … … … … … … … … … … … … … … … … …

     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     

                                 … … … … … … … … … … … … … … … …
                                 … … … … … … … … … … … … … … … … … … … …
                                 … … … … … … … … … … … … … … … … … … … …
                                 … … … … … … … … … … … … … … … … … … … …
                                 … … … … … … … … … … … … … … …</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>PUBLIC</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>124197758608017751</EntityId>
              <Min x="-1" y="-10" z="-2" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <Owner>144115188075855899</Owner>
              <CustomName>Text panel 2 3D//</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>0.1</FontSize>
              <PublicDescription>













































…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙
…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙…∙






















































</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>PUBLIC</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278321408</PackedValue>
                <X>0</X>
                <Y>1</Y>
                <Z>2</Z>
                <R>0</R>
                <G>1</G>
                <B>2</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="-11" z="-1" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="-11" z="-1" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="-11" z="-2" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="-11" z="-2" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>120625254136441320</EntityId>
              <Min x="0" y="-10" z="-3" />
              <IntegrityPercent>0.5</IntegrityPercent>
              <BuildPercent>0.5</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <Owner>144115188075855897</Owner>
              <ShareMode>Faction</ShareMode>
              <CustomName>Text panel 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>123001803652556531</EntityId>
              <Min x="-1" y="-10" z="-3" />
              <IntegrityPercent>0.5</IntegrityPercent>
              <BuildPercent>0.5</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <Owner>144115188075855897</Owner>
              <ShareMode>Faction</ShareMode>
              <CustomName>Text panel 6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>136826288703189923</EntityId>
              <Min x="1" y="-10" z="-3" />
              <IntegrityPercent>0.5</IntegrityPercent>
              <BuildPercent>0.5</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <Owner>144115188075855897</Owner>
              <ShareMode>Faction</ShareMode>
              <CustomName>Text panel 5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallHydrogenThrust</SubtypeName>
              <EntityId>90573313710672196</EntityId>
              <Min x="0" y="-2" z="-3" />
              <IntegrityPercent>0.4647482</IntegrityPercent>
              <BuildPercent>0.9999996</BuildPercent>
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <CustomName>Hydrogen Thrusters 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorStator">
              <SubtypeName>SmallStator</SubtypeName>
              <EntityId>125720797178626380</EntityId>
              <Min x="0" y="-5" z="-4" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <CustomName>Rotor</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <MasterToSlaveTransform xsi:nil="true" />
              <weldSpeed>95</weldSpeed>
              <forceWeld>false</forceWeld>
              <TopBlockId>86399647190938372</TopBlockId>
              <IsWelded>false</IsWelded>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <Friction>1</Friction>
              <TargetVelocity>0.04861164</TargetVelocity>
              <MinAngle xsi:nil="true" />
              <MaxAngle xsi:nil="true" />
              <CurrentAngle>5.02226639</CurrentAngle>
              <LimitsActive>false</LimitsActive>
              <DummyDisplacement>0.065</DummyDisplacement>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>96956537344002409</EntityId>
              <Min x="1" y="-22" z="-2" />
              <IntegrityPercent>0.6666667</IntegrityPercent>
              <BuildPercent>0.6666667</BuildPercent>
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855897</Owner>
              <ShareMode>Faction</ShareMode>
              <CustomName>Text panel 9</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>128030597836725589</EntityId>
              <Min x="-1" y="-20" z="-2" />
              <IntegrityPercent>0.6666667</IntegrityPercent>
              <BuildPercent>0.6666667</BuildPercent>
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855897</Owner>
              <ShareMode>Faction</ShareMode>
              <CustomName>Text panel 10</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>106044263984939650</EntityId>
              <Min x="1" y="-12" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>2.141093</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Reactor 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>2.141093</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                      <SubtypeName>Uranium</SubtypeName>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.125</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>97175342474193957</EntityId>
              <Min x="-1" y="-12" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>2.141093</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Reactor 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>2.141093</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                      <SubtypeName>Uranium</SubtypeName>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.125</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>74281971550074752</EntityId>
              <Min x="1" y="-13" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>2.141093</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Reactor 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>2.141093</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                      <SubtypeName>Uranium</SubtypeName>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.125</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>98446249259663217</EntityId>
              <Min x="-1" y="-13" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>2.141093</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Reactor 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>2.141093</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                      <SubtypeName>Uranium</SubtypeName>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.125</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>84994077459003693</EntityId>
              <Min x="0" y="-12" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>2.141093</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Reactor 5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>2.141093</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                      <SubtypeName>Uranium</SubtypeName>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.125</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>136743360044654096</EntityId>
              <Min x="0" y="-13" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>125686715779170564</EntityId>
              <Min x="0" y="-13" z="-2" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>131980042301045563</EntityId>
              <Min x="1" y="-13" z="-2" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>73630203751755918</EntityId>
              <Min x="-1" y="-13" z="-2" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>104285436002617866</EntityId>
              <Min x="1" y="-12" z="-2" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>126785512941846170</EntityId>
              <Min x="-1" y="-12" z="-2" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>109487345728182779</EntityId>
              <Min x="0" y="-12" z="-2" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorRotor">
              <SubtypeName>SmallRotor</SubtypeName>
              <EntityId>130931435584976138</EntityId>
              <Min x="0" y="-10" z="-2" />
              <IntegrityPercent>0.25</IntegrityPercent>
              <BuildPercent>0.25</BuildPercent>
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <ParentEntityId>0</ParentEntityId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <EntityId>112182452442985916</EntityId>
              <Min x="2" y="-13" z="-2" />
              <IntegrityPercent>0.6</IntegrityPercent>
              <BuildPercent>0.6</BuildPercent>
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <EntityId>118289114450045193</EntityId>
              <Min x="-2" y="-13" z="-2" />
              <IntegrityPercent>0.6</IntegrityPercent>
              <BuildPercent>0.6</BuildPercent>
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="-11" z="-2" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="-11" z="-2" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>79167912626629344</EntityId>
              <Min x="0" y="-11" z="-1" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <CustomName>Gyroscope</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>79021847067043618</EntityId>
              <Min x="-1" y="-6" z="-2" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <CustomName>Programmable block 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>  
/*   
/// Whip's Artificial Horizon Script v25 /// - rev: 10/20/16   
_______________________________________________________________________             
///DESCRIPTION///     
  
    This code creates an Artificial Horizon indicator that takes into account your pitch and roll.   
    Also displayed on the screen is a vector indicator of velocity, speed display, and bearing display.   
    The colors of the display grid are configurable in the code.   
  
_______________________________________________________________________             
///SETUP///     
  
    1.) Make a program block and put this code in it   
    2.) Make a timer with actions   
        - "Trigger Now" itself   
        - "Start" itself   
        - "Run with default argument" the program from step 1   
    3.) Start the timer   
    4.) Find the control seat, cockpit, remote control, or passenger seat that you wish to    
        use as your horizon reference and add the name tag "Forward" somewhere in its name   
    5.) Find the Text Panel or LCD Panel that you want to display the Artificial Horizon on and add the tag   
        "Horizon" somewhere in the name of the block   
    6.) Fly around and enjoy :)   
  
_______________________________________________________________________             
///WHIP'S NOTES///   
  
    I vastly improved the code's number -&gt; pixel conversion system.   
    If you notice any bugs, be sure to comment on the workshop page.   
  
    Coded by Whiplash141   
*/  
  
//-------------------------------------------------   
//CONFIGURABLE VARAIABLES   
//-------------------------------------------------   
    const string controlSeatNameTag = "Forward";  
    const string readoutScreenNameTag = "Horizon";  
    const double maximumVelocity = 100; //supports up to 999 m/s max speed   
    const int updatesPerSecond = 10;  
    const bool enableOrientationIndicator = true; //specifies if the orientation axes are drawn with the artificial horizon   
    const bool useVelocityMagnitude = false;  
    bool enableColorBlindMode = false; //this will change all colors to the colorblind default constants automatically  
  
//-------------------------------------------------   
//COLOR DEFAULTS: You can change these; see the below section for allowed colors   
//-------------------------------------------------   
    string backgroundColor = black;  
    string horizonLineColor = darkGray;  
    string belowHorizonColor = green;  
    string aboveHorizonColor = blue;  
    string textColor = red;  
    string numberColor = yellow;  
    string velocityIndicatorColor = yellow;  
    string spaceOrientationColor = blue;  
    string planetaryOrientationColor = red;  
  
//===================================================   
//DO NOT TOUCH ANYTHING BELOW THIS   
//===================================================   
  
//-------------------------------------------------   
//COLOR CONSTANTS: Do not change!!!   
//Credit to alex-thatradarguy for the idea of using xbox symbols  
//http://steamcommunity.com/sharedfiles/filedetails/?id=627416824   
  
    const string green = "\uE001"; //No touchey   
    const string blue = "\uE002"; //No touchey   
    const string red = "\uE003"; //No touchey   
    const string yellow = "\uE004"; //No touchey   
    const string white = "\uE00E"; //No touchey   
    const string lightGray = "\uE00D"; //No touchey   
    const string mediumGray = "\uE017"; //No touchey   
    const string darkGray = "\uE00F"; //No touchey   
    const string black = " \u2026"; //No touchey (The space is important)  
//-------------------------------------------------   
  
    const int horizontalMidpoint = 26; //DO NOT TOUCH  
    const int verticalMidpoint = 24; //DO NOT TOUCH  
    const int horizontalGridSize = horizontalMidpoint * 2 - 1;  
    const int verticalGridSize = verticalMidpoint * 2 - 1;  
    const int planeSymbolWidth = 10; //measured from center to wingtip   
  
    int velocityRow = 0;  
    int velocityColumn = 0;  
  
    const double timeCycleMax = 1 / (double)updatesPerSecond;  
    const double rad2deg = 180 / Math.PI;  
    const double deg2rad = Math.PI / 180;  
    const double horizontalVelocityIncrement = maximumVelocity / (double)horizontalMidpoint;  
    const double verticalVelocityIncrement = maximumVelocity / (double)verticalMidpoint;  
    const double pitchIncrement = 90 / (double)verticalMidpoint;  
    double timeCurrentCycle = 0;  
    double shipSpeed = 0;  
    double shipAcceleration = 0;  
    double rollAngle = 0;  
    double pitchAngle = 0;  
    double bearingAngle = 0;  
    double altitude = 0;  
    double lastSpeed = 0;  
  
    bool isUpsideDown = false;  
    bool inGravity = false;  
    bool isBackwards = false;  
  
    string headingAndVelocityPixelString = "";  
    string altitudePixelString = "";  
  
    Dictionary&lt;Vector2I, string&gt; characterGrid = new Dictionary&lt;Vector2I, string&gt;();  
  
    Vector3D absoluteNorthVec = new Vector3D(0.342063708833718, -0.704407897782847, -0.621934025954579); //this was determined via Keen's code  
  
    IMyShipController reference = null;  
      
Program()  
{  
    if(enableColorBlindMode)  
    {  
        //these define the colorblind color constants  
        backgroundColor = black;  
        horizonLineColor = lightGray;  
        belowHorizonColor = mediumGray;  
        aboveHorizonColor = black;  
        textColor = yellow;  
        numberColor = yellow;  
        velocityIndicatorColor = blue;  
        spaceOrientationColor = green;  
        planetaryOrientationColor = red;  
    }  
}  
  
void Main()  
{  
    timeCurrentCycle += Runtime.TimeSinceLastRun.TotalSeconds;  
    timeSymbol += Runtime.TimeSinceLastRun.TotalSeconds;  
  
    if (timeCurrentCycle &gt;= timeCycleMax)  
    {  
        Echo("WMI Artificial Horizon is online... " + RunningSymbol());  
  
        bool isProperlySetup = CheckBlocks();  
  
        if (isProperlySetup)  
        {  
            GetVelocity();  
            GetRollPitchAndHeading();  
            GetNumberPixelString();  
            DrawGrid();  
        }  
  
        timeCurrentCycle = 0;  
        characterGrid.Clear();  
    }  
  
}  
  
bool CheckBlocks()  
{  
    var shipControllers = new List&lt;IMyTerminalBlock&gt;();  
    GridTerminalSystem.SearchBlocksOfName(controlSeatNameTag, shipControllers, block =&gt; block is IMyShipController);  
    if (shipControllers.Count == 0)  
    {  
        Echo("Error: No ship controllers with name " + controlSeatNameTag + " detected");  
        return false;  
    }  
    else  
    {  
        reference = shipControllers[0] as IMyShipController;  
        return true;  
    }  
}  
  
void GetVelocity() //This method gets the relative position of the velocity vector on the screen   
{  
    var velocityVec = reference.GetShipVelocities().LinearVelocity;  
    shipSpeed = velocityVec.Length(); //raw speed of ship  
    shipAcceleration = (shipSpeed - lastSpeed) / timeCycleMax;  
    lastSpeed = shipSpeed;  
  
    if (!useVelocityMagnitude &amp;&amp; velocityVec.Length() &gt; 0.1)  
    {  
        velocityVec = Vector3D.Normalize(velocityVec) * maximumVelocity;  
    }  
  
    var rightVelocity = VectorProjection(velocityVec, reference.WorldMatrix.Right).Length() * VectorCompareDirection(velocityVec, reference.WorldMatrix.Right);  
    var upVelocity = VectorProjection(velocityVec, reference.WorldMatrix.Up).Length() * VectorCompareDirection(velocityVec, reference.WorldMatrix.Up);  
    var forwardVelocity = VectorProjection(velocityVec, reference.WorldMatrix.Forward).Length() * VectorCompareDirection(velocityVec, reference.WorldMatrix.Forward);  
  
    if (rightVelocity &lt; 0)  
    {  
        velocityColumn = horizontalMidpoint - (int)Math.Round(-rightVelocity / horizontalVelocityIncrement);  
    }  
    else  
    {  
        velocityColumn = horizontalMidpoint + (int)Math.Round(rightVelocity / horizontalVelocityIncrement);  
    }  
  
    if (upVelocity &lt; 0)  
    {  
        velocityRow = verticalMidpoint + (int)Math.Round(-upVelocity / verticalVelocityIncrement);  
    }  
    else  
    {  
        velocityRow = verticalMidpoint - (int)Math.Round(upVelocity / verticalVelocityIncrement);  
    }  
  
    if (forwardVelocity &lt; 0)  
    {  
        isBackwards = true;  
    }  
    else  
    {  
        isBackwards = false;  
    }  
  
    if (!isBackwards) //draws prograde velocity    
    {  
        /*   
        Looks like:   
              o   
              o   
            o o o   
        o o o   o o o   
            o o o   
        */  
  
        AddToGrid(new Vector2I(velocityRow + 1, velocityColumn), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow + 1, velocityColumn + 1), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow + 1, velocityColumn - 1), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow - 1, velocityColumn), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow - 1, velocityColumn + 1), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow - 1, velocityColumn - 1), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow, velocityColumn + 1), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow, velocityColumn - 1), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow - 2, velocityColumn), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow - 3, velocityColumn), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow, velocityColumn + 2), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow, velocityColumn + 3), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow, velocityColumn - 2), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow, velocityColumn - 3), velocityIndicatorColor);  
  
    }  
    else //draws retrograde velocity   
    {  
        /*   
        Looks like:   
           o       o   
             o   o   
               o   
             o   o   
           o       o   
        */  
  
        AddToGrid(new Vector2I(velocityRow, velocityColumn), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow - 1, velocityColumn + 1), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow - 1, velocityColumn - 1), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow + 1, velocityColumn + 1), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow + 1, velocityColumn - 1), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow - 2, velocityColumn + 2), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow - 2, velocityColumn - 2), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow + 2, velocityColumn + 2), velocityIndicatorColor);  
        AddToGrid(new Vector2I(velocityRow + 2, velocityColumn - 2), velocityIndicatorColor);  
    }  
  
    Echo("Ship Velocity: " + Math.Round(shipSpeed, 2).ToString());  
}  
  
void DrawOrientationIndicator()  
{  
    if (!inGravity)  
    {  
        for (int j = 1; j &lt;= horizontalGridSize; j++)  
        {  
            AddToGrid(new Vector2I(verticalMidpoint, j), spaceOrientationColor); //draws a horizontal line   
        }  
  
        for (int j = 1; j &lt;= verticalGridSize; j++)  
        {  
            AddToGrid(new Vector2I(j, horizontalMidpoint), spaceOrientationColor); //draws a vertical line   
        }  
    }  
    else //draws a nose orientation indicator that looks like  --- W ---   
    {  
        AddToGrid(new Vector2I(verticalMidpoint, horizontalMidpoint), planetaryOrientationColor);  
        AddToGrid(new Vector2I(verticalMidpoint + 1, horizontalMidpoint + 1), planetaryOrientationColor);  
        AddToGrid(new Vector2I(verticalMidpoint + 1, horizontalMidpoint - 1), planetaryOrientationColor);  
        AddToGrid(new Vector2I(verticalMidpoint, horizontalMidpoint - 2), planetaryOrientationColor);  
        AddToGrid(new Vector2I(verticalMidpoint, horizontalMidpoint + 2), planetaryOrientationColor);  
        AddToGrid(new Vector2I(verticalMidpoint - 1, horizontalMidpoint - 3), planetaryOrientationColor);  
        AddToGrid(new Vector2I(verticalMidpoint - 1, horizontalMidpoint + 3), planetaryOrientationColor);  
  
        for (int j = horizontalMidpoint - planeSymbolWidth; j &lt; horizontalMidpoint - 4; j++)  
        {  
            AddToGrid(new Vector2I(verticalMidpoint, j), planetaryOrientationColor);  
        }  
  
        for (int j = horizontalMidpoint + 5; j &lt;= horizontalMidpoint + planeSymbolWidth; j++)  
        {  
            AddToGrid(new Vector2I(verticalMidpoint, j), planetaryOrientationColor);  
        }  
    }  
}  
  
void GetRollPitchAndHeading()  
{  
    /// Get Needed Vectors ///   
    Vector3D shipForwardVec = reference.WorldMatrix.Forward;  
    Vector3D shipLeftVec = reference.WorldMatrix.Left;  
    Vector3D shipDownVec = reference.WorldMatrix.Down;  
    Vector3D gravityVec = reference.GetNaturalGravity();  
    Vector3D planetRelativeLeftVec = shipForwardVec.Cross(gravityVec);  
      
    reference.TryGetPlanetElevation(MyPlanetElevation.Surface, out altitude);  
  
    if (gravityVec.Length() == 0)  
    {  
        Echo("No natural gravity field detected");  
        inGravity = false;  
        DrawOrientationIndicator();  
        return;  
    }  
    else  
    {  
        inGravity = true;  
        if (enableOrientationIndicator)  
        {  
            DrawOrientationIndicator();  
        }  
    }  
  
    isUpsideDown = false;  
  
    /// Compute Pitch and Roll ///   
    if (!VectorIsSameDirection(shipDownVec, gravityVec))  
    {  
        isUpsideDown = true;  
    }  
  
    rollAngle = VectorAngleBetween(shipLeftVec, planetRelativeLeftVec);  
  
    rollAngle *= VectorCompareDirection(VectorProjection(shipLeftVec, gravityVec), gravityVec); //ccw is positive   
  
    if (rollAngle &gt; 90 || rollAngle &lt; -90)  
    {  
        rollAngle = 180 - rollAngle; //accounts for upsidedown   
    }  
  
    pitchAngle = VectorAngleBetween(shipForwardVec, gravityVec); //angle from nose direction to gravity   
    pitchAngle -= 90; //as 90 degrees is level with ground   
  
    Echo("Roll angle: " + Math.Round(rollAngle, 2).ToString() + "\nPitch angle: " + Math.Round(pitchAngle, 2).ToString());  
    GetHorizonLine(); //gets horizon line   
  
    /// Compute Bearing ///   
    //get east vector    
    Vector3D relativeEastVec = gravityVec.Cross(absoluteNorthVec);  
  
    //get relative north vector    
    Vector3D relativeNorthVec = relativeEastVec.Cross(gravityVec);  
  
    //project forward vector onto a plane comprised of the north and east vectors    
    Vector3D forwardProjNorthVec = VectorProjection(shipForwardVec, relativeNorthVec);  
    Vector3D forwardProjEastVec = VectorProjection(shipForwardVec, relativeEastVec);  
    Vector3D forwardProjPlaneVec = forwardProjEastVec + forwardProjNorthVec;  
  
    //find angle from abs north to projected forward vector measured clockwise    
    bearingAngle = Math.Acos(forwardProjPlaneVec.Dot(relativeNorthVec) / forwardProjPlaneVec.Length() / relativeNorthVec.Length()) * rad2deg;  
    if (VectorIsSameDirection(shipForwardVec, relativeEastVec) == false)  
    {  
        bearingAngle = 360 - bearingAngle; //because of how the angle is measured    
    }  
  
    Echo("Bearing: " + Math.Round(bearingAngle, 2).ToString());  
}  
  
void GetHorizonLine()  
{  
    int horizontalOffset = (int)Math.Round(pitchAngle / pitchIncrement * Math.Sin(rollAngle * deg2rad)); //offset of every point in the horizontal direction   
    int verticalOffset = (int)Math.Round(pitchAngle / pitchIncrement * Math.Cos(rollAngle * deg2rad)); //offset of every point in the vertical direction   
  
    double constant = 1;  
    if (isUpsideDown)  
    {  
        verticalOffset *= -1;  
        constant = -1;  
  
    }  
  
    int adjustedMidpoint = verticalMidpoint - horizontalOffset; //offsets our midpoint horizontally due to pitch and roll   
  
    for (int i = 1; i &lt;= horizontalGridSize; i++) //rows   
    {  
        int thisHeight = 0;  
  
        if (i &lt; verticalMidpoint)  
        {  
            thisHeight = adjustedMidpoint - (int)Math.Round((adjustedMidpoint - i) * Math.Tan(constant * rollAngle * deg2rad));  
        }  
        else  
        {  
            thisHeight = adjustedMidpoint + (int)Math.Round((i - adjustedMidpoint) * Math.Tan(constant * rollAngle * deg2rad));  
        }  
  
        thisHeight += verticalOffset; //offset our computed height by this value   
  
        AddToGrid(new Vector2I(thisHeight, i), horizonLineColor);  
  
        string aboveColor = aboveHorizonColor; string belowColor = belowHorizonColor;  
        if (isUpsideDown)  
        {  
            aboveColor = belowHorizonColor; belowColor = aboveHorizonColor;  
        }  
  
        for (int j = 1; j &lt;= verticalGridSize; j++)  
        {  
            if (j &lt; thisHeight)  
            {  
                AddToGrid(new Vector2I(j, i), aboveColor);  
            }  
            else if (j &gt; thisHeight)  
            {  
                AddToGrid(new Vector2I(j, i), belowColor);  
            }  
        }  
    }  
}  
  
void AddToGrid(Vector2I place, string color)  
{  
    string value;  
    bool exists = characterGrid.TryGetValue(place, out value);  
    if (exists)  
    {  
        return;  
    }  
    else  
    {  
        characterGrid.Add(place, color);  
    }  
}  
  
void DrawGrid() //draws graphical grid   
{  
    string grid = headingAndVelocityPixelString + "\n\n     "; //5 spaces to center   
  
    for (int row = 1; row &lt;= verticalGridSize; row++)  
    {  
        for (int column = 1; column &lt;= horizontalGridSize; column++)  
        {  
            string character = backgroundColor;  
  
            Vector2I thisGridPosition = new Vector2I(row, column);  
  
            string thisCharacter;  
            bool containsPosition = characterGrid.TryGetValue(thisGridPosition, out thisCharacter);  
            if (containsPosition)  
            {  
                character = thisCharacter;  
            }  
  
            grid += character; //adds our current character   
        }  
  
        if (row != verticalGridSize)  
            grid += "\n     ";  
    }  
  
    grid += "\n\n" + altitudePixelString;  
  
    WriteToTextPanel(readoutScreenNameTag, grid);  
}  
  
void GetNumberPixelString() //gets a graphical string from velocity and heading   
{  
    //Velocity Splitting   
  
    string velocityString = string.Format("{0:000}", shipSpeed);  
    string altitudeString = string.Format("{0:00000}", altitude);  
    string headingOrAccelString = "";  
    if (inGravity)  
        headingOrAccelString = string.Format("{0:000}", bearingAngle);  
    else  
        headingOrAccelString = string.Format("{0:000}", shipAcceleration);  
  
    DecomposeNumber velocityStruct;  
    DecomposeNumber headingOrAccelStruct;  
    DecomposeNumber altitudeStruct;  
      
    StringRowDecomposition velocityWordStruct = GetPixelsFromNumber("spd");  
    StringRowDecomposition altitudeWordStruct = GetPixelsFromNumber("alt");  
    StringRowDecomposition headingOrAccelWordStruct;  
    if (inGravity)  
        headingOrAccelWordStruct = GetPixelsFromNumber("hdg");  
    else  
        headingOrAccelWordStruct = GetPixelsFromNumber("acc");  
      
      
    StringRowDecomposition space;  
    space.Row1 = backgroundColor; space.Row2 = backgroundColor; space.Row3 = backgroundColor; space.Row4 = backgroundColor; space.Row5 = backgroundColor;  
   
    velocityStruct.Hundreds = GetPixelsFromNumber(velocityString.Substring(0, 1));  
    velocityStruct.Tens = GetPixelsFromNumber(velocityString.Substring(1, 1));  
    velocityStruct.Ones = GetPixelsFromNumber(velocityString.Substring(2, 1));  
  
    headingOrAccelStruct.Hundreds = GetPixelsFromNumber(headingOrAccelString.Substring(0, 1));  
    headingOrAccelStruct.Tens = GetPixelsFromNumber(headingOrAccelString.Substring(1, 1));  
    headingOrAccelStruct.Ones = GetPixelsFromNumber(headingOrAccelString.Substring(2, 1));  
      
    altitudeStruct.TenThousands = GetPixelsFromNumber(altitudeString.Substring(0, 1));  
    altitudeStruct.Thousands = GetPixelsFromNumber(altitudeString.Substring(1, 1));  
    altitudeStruct.Hundreds = GetPixelsFromNumber(altitudeString.Substring(2, 1));  
    altitudeStruct.Tens = GetPixelsFromNumber(altitudeString.Substring(3, 1));  
    altitudeStruct.Ones = GetPixelsFromNumber(altitudeString.Substring(4, 1));  
      
    List&lt;StringRowDecomposition&gt; headingAndVelocityCharacterList = new List&lt;StringRowDecomposition&gt;()  
    {  
        velocityWordStruct, velocityStruct.Hundreds, velocityStruct.Tens, velocityStruct.Ones, space, headingOrAccelWordStruct, headingOrAccelStruct.Hundreds, headingOrAccelStruct.Tens, headingOrAccelStruct.Ones  
    };  
      
    List&lt;StringRowDecomposition&gt; altitudeCharacterList = new List&lt;StringRowDecomposition&gt;();  
    if (inGravity)  
    {  
  
        altitudeCharacterList = new List&lt;StringRowDecomposition&gt;()  
        {  
            altitudeWordStruct, altitudeStruct.TenThousands, altitudeStruct.Thousands, altitudeStruct.Hundreds, altitudeStruct.Tens, altitudeStruct.Ones  
        };  
    }  
    else  
    {        
        altitudeCharacterList = new List&lt;StringRowDecomposition&gt;()  
        {  
            altitudeWordStruct, GetPixelsFromNumber("no grav")  
        };  
    }  
      
    headingAndVelocityPixelString = ConstructPixelString(headingAndVelocityCharacterList);  
    altitudePixelString = ConstructPixelString(altitudeCharacterList);                   
}  
  
string ConstructPixelString(List&lt;StringRowDecomposition&gt; pixelCharacters)  
{  
    string pixelString = "  ";  
    foreach (StringRowDecomposition thisStruct in pixelCharacters)  
        pixelString += thisStruct.Row1;  
      
    pixelString += "\n  ";  
      
    foreach (StringRowDecomposition thisStruct in pixelCharacters)  
        pixelString += thisStruct.Row2;  
      
    pixelString += "\n  ";  
      
    foreach (StringRowDecomposition thisStruct in pixelCharacters)  
        pixelString += thisStruct.Row3;  
          
    pixelString += "\n  ";  
      
    foreach (StringRowDecomposition thisStruct in pixelCharacters)  
        pixelString += thisStruct.Row4;  
      
    pixelString += "\n  ";  
      
    foreach (StringRowDecomposition thisStruct in pixelCharacters)  
        pixelString += thisStruct.Row5;  
  
    return pixelString;  
}  
  
struct StringRowDecomposition  
{  
    public string Row1;  
    public string Row2;  
    public string Row3;  
    public string Row4;  
    public string Row5;  
}  
  
struct DecomposeNumber  
{  
    public StringRowDecomposition Ones;  
    public StringRowDecomposition Tens;  
    public StringRowDecomposition Hundreds;  
    public StringRowDecomposition Thousands;  
    public StringRowDecomposition TenThousands;  
}  
  
  
const string largeSpace = "                              ";  
StringRowDecomposition GetPixelsFromNumber(string num) //gets graphical representation from a double   
{  
    StringRowDecomposition numberGraphicRows;  
    numberGraphicRows.Row1 = "";  
    numberGraphicRows.Row2 = "";  
    numberGraphicRows.Row3 = "";  
    numberGraphicRows.Row4 = "";  
    numberGraphicRows.Row5 = "";  
  
    switch (num)  
    {  
        case "0":  
            numberGraphicRows.Row1 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row2 = numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row3 = numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row4 = numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row5 = numberColor + numberColor + numberColor + backgroundColor;  
            break;  
  
        case "1":  
            numberGraphicRows.Row1 = backgroundColor + numberColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row2 = backgroundColor + numberColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row3 = backgroundColor + numberColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row4 = backgroundColor + numberColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row5 = backgroundColor + numberColor + backgroundColor + backgroundColor;  
            break;  
  
        case "2":  
            numberGraphicRows.Row1 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row2 = backgroundColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row3 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row4 = numberColor + backgroundColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row5 = numberColor + numberColor + numberColor + backgroundColor;  
            break;  
  
        case "3":  
            numberGraphicRows.Row1 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row2 = backgroundColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row3 = backgroundColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row4 = backgroundColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row5 = numberColor + numberColor + numberColor + backgroundColor;  
            break;  
  
        case "4":  
            numberGraphicRows.Row1 = numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row2 = numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row3 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row4 = backgroundColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row5 = backgroundColor + backgroundColor + numberColor + backgroundColor;                                                                                                                                                                            //w.H-i\p  
            break;  
  
        case "5":  
            numberGraphicRows.Row1 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row2 = numberColor + backgroundColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row3 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row4 = backgroundColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row5 = numberColor + numberColor + numberColor + backgroundColor;  
            break;  
  
        case "6":  
            numberGraphicRows.Row1 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row2 = numberColor + backgroundColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row3 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row4 = numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row5 = numberColor + numberColor + numberColor + backgroundColor;  
            break;  
  
        case "7":  
            numberGraphicRows.Row1 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row2 = backgroundColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row3 = backgroundColor + numberColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row4 = backgroundColor + numberColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row5 = backgroundColor + numberColor + backgroundColor + backgroundColor;  
            break;  
  
        case "8":  
            numberGraphicRows.Row1 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row2 = numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row3 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row4 = numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row5 = numberColor + numberColor + numberColor + backgroundColor;  
            break;  
  
        case "9":  
            numberGraphicRows.Row1 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row2 = numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row3 = numberColor + numberColor + numberColor + backgroundColor;  
            numberGraphicRows.Row4 = backgroundColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row5 = numberColor + numberColor + numberColor + backgroundColor;  
            break;  
  
        case "spd":  
            numberGraphicRows.Row1 = backgroundColor + textColor + textColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row2 = textColor + backgroundColor + backgroundColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor;  
            numberGraphicRows.Row3 = textColor + textColor + textColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row4 = backgroundColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor;  
            numberGraphicRows.Row5 = textColor + textColor + backgroundColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor;  
            break;  
  
        case "hdg":  
            numberGraphicRows.Row1 = textColor + backgroundColor + textColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row2 = textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor + textColor + backgroundColor;  
            numberGraphicRows.Row3 = textColor + textColor + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row4 = textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor;  
            numberGraphicRows.Row5 = textColor + backgroundColor + textColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor;  
            break;  
  
        case "alt":  
            numberGraphicRows.Row1 = largeSpace + backgroundColor + textColor + backgroundColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + textColor + textColor + textColor + backgroundColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row2 = largeSpace + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor + textColor + backgroundColor + backgroundColor + textColor + backgroundColor;  
            numberGraphicRows.Row3 = largeSpace + textColor + textColor + textColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row4 = largeSpace + textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor + textColor + backgroundColor + backgroundColor + textColor + backgroundColor;  
            numberGraphicRows.Row5 = largeSpace + textColor + backgroundColor + textColor + backgroundColor + textColor + textColor + textColor + backgroundColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor;  
            break;  
              
        case "no grav":  
            numberGraphicRows.Row1 = numberColor + numberColor + backgroundColor + backgroundColor + backgroundColor + numberColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor + numberColor + numberColor + backgroundColor + backgroundColor + numberColor + numberColor + backgroundColor + backgroundColor + backgroundColor + numberColor + backgroundColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row2 = numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + backgroundColor + numberColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row3 = numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + backgroundColor + numberColor + backgroundColor + numberColor + numberColor + backgroundColor + numberColor + numberColor + backgroundColor + backgroundColor + numberColor + numberColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor;  
            numberGraphicRows.Row4 = numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + backgroundColor + numberColor + backgroundColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + numberColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row5 = numberColor + backgroundColor + numberColor + backgroundColor + backgroundColor + numberColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor + numberColor + numberColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + numberColor + backgroundColor + backgroundColor + backgroundColor;  
            break;  
              
        case "acc":  
            numberGraphicRows.Row1 = backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row2 = textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + textColor + backgroundColor;  
            numberGraphicRows.Row3 = textColor + textColor + textColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor + backgroundColor;  
            numberGraphicRows.Row4 = textColor + backgroundColor + textColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + textColor + backgroundColor + backgroundColor + backgroundColor + textColor + backgroundColor;  
            numberGraphicRows.Row5 = textColor + backgroundColor + textColor + backgroundColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + textColor + textColor + backgroundColor + backgroundColor + backgroundColor;  
            break;  
  
        default:  
            numberGraphicRows.Row1 = numberColor + numberColor + numberColor;  
            numberGraphicRows.Row2 = numberColor + backgroundColor + numberColor;  
            numberGraphicRows.Row3 = numberColor + backgroundColor + numberColor;  
            numberGraphicRows.Row4 = numberColor + backgroundColor + numberColor;  
            numberGraphicRows.Row5 = numberColor + numberColor + numberColor;  
            break;  
    }  
    return numberGraphicRows;  
}  
  
void WriteToTextPanel(string textPanelName, string textToWrite, bool append = false)  
{  
    var listScreens = new List&lt;IMyTerminalBlock&gt;();  
    GridTerminalSystem.SearchBlocksOfName(textPanelName, listScreens, block =&gt; block is IMyTextPanel);  
    if (listScreens.Count == 0)  
    {  
        Echo("Error: No text panel with name tag '" + textPanelName + "' was found");  
        return;  
    }  
    else  
    {  
        for (int i = 0; i &lt; listScreens.Count; i++)  
        {  
            var thisScreen = listScreens[i] as IMyTextPanel;  
            if (thisScreen != null)  
            {  
                thisScreen.WritePublicText(textToWrite, append);  
                thisScreen.ShowTextureOnScreen();  
                thisScreen.ShowPublicTextOnScreen();  
                thisScreen.SetValue("FontSize", 0.3f); //for large grid   
            }  
        }  
    }  
}  
  
int VectorCompareDirection(Vector3D a, Vector3D b) //returns -1 if vectors return negative dot product   
{  
    double check = a.Dot(b);  
    if (check &lt; 0)  
        return -1;  
    else  
        return 1;  
}  
  
double VectorAngleBetween(Vector3D a, Vector3D b) //returns degrees    
{  
    return Math.Acos(a.Dot(b) / a.Length() / b.Length()) * 180 / Math.PI;  
}  
  
Vector3D VectorProjection(Vector3D a, Vector3D b) //projects a onto b   
{  
    Vector3D projection = a.Dot(b) / b.LengthSquared() * b;  
    return projection;  
}  
  
bool VectorIsSameDirection(Vector3D a, Vector3D b) //returns true if vectors produce positive dot product   
{  
    double check = a.Dot(b);  
    if (check &lt; 0)  
        return false;  
    else  
        return true;  
}  
  
//Whip's Running Symbol Method v3   
double timeSymbol = 0;  
string strRunningSymbol = "";  
  
string RunningSymbol() //makes a cool spinning bar symbol :)   
{  
    if (timeSymbol &lt; .2d)  
        strRunningSymbol = "|";  
    else if (timeSymbol &lt; .4d)  
        strRunningSymbol = "/";  
    else if (timeSymbol &lt; .6d)  
        strRunningSymbol = "--";  
    else if (timeSymbol &lt; .8d)  
        strRunningSymbol = "\\";  
    else  
    {  
        timeSymbol = 0;  
        strRunningSymbol = "|";  
    }  
  
    return strRunningSymbol;  
}  
  
/*            
///WHAT'S CHANGED///   
    
- Fixed incorrect display of pitch  
- Fixed some variable name typos  
- This code can now display altitude (only in DEV branch!)  
- Removed character limit bypass  
*/</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="-6" z="-3" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallArmorSide</SubtypeName>
              <EntityId>99597130208949806</EntityId>
              <Min x="0" y="-4" z="-3" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ConveyorConnector">
              <SubtypeName>ConveyorTubeSmallCurved</SubtypeName>
              <EntityId>85294088779596102</EntityId>
              <Min x="0" y="-3" z="-3" />
              <IntegrityPercent>0.5</IntegrityPercent>
              <BuildPercent>0.5</BuildPercent>
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="-6" z="-3" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="-6" z="-3" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-6" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-6" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="-6" z="-2" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="-6" z="-2" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="-19" z="-2" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_OreDetector">
              <SubtypeName>SmallBlockOreDetector</SubtypeName>
              <EntityId>136682982595068824</EntityId>
              <Min x="-2" y="-5" z="-2" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <CustomName>Ore Detector 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <DetectionRadius>50</DetectionRadius>
              <BroadcastUsingAntennas>true</BroadcastUsingAntennas>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RadioAntenna">
              <SubtypeName>SmallBlockRadioAntenna</SubtypeName>
              <EntityId>111630080345996175</EntityId>
              <Min x="2" y="-5" z="-2" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <CustomName>Morja</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <BroadcastRadius>500</BroadcastRadius>
              <ShowShipName>false</ShowShipName>
              <EnableBroadcasting>true</EnableBroadcasting>
              <AttachedPB>0</AttachedPB>
              <IgnoreAllied>false</IgnoreAllied>
              <IgnoreOther>true</IgnoreOther>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-17" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-17" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-18" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-18" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="-19" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="-19" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="-18" z="0" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="-18" z="0" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>93492059097867181</EntityId>
              <Min x="-2" y="-10" z="-2" />
              <IntegrityPercent>0.5500001</IntegrityPercent>
              <BuildPercent>0.5500001</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <ShareMode>All</ShareMode>
              <CustomName>Button Panel 5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary />
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>133661452428167883</EntityId>
              <Min x="2" y="-10" z="-2" />
              <IntegrityPercent>0.5500001</IntegrityPercent>
              <BuildPercent>0.5500001</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <ShareMode>All</ShareMode>
              <CustomName>Button Panel 6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary />
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>98483710629632465</EntityId>
              <Min x="-2" y="-9" z="-2" />
              <IntegrityPercent>0.5500001</IntegrityPercent>
              <BuildPercent>0.5500001</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <ShareMode>All</ShareMode>
              <CustomName>Button Panel 7</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary />
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>87528166487610643</EntityId>
              <Min x="2" y="-9" z="-2" />
              <IntegrityPercent>0.5500001</IntegrityPercent>
              <BuildPercent>0.5500001</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <ShareMode>All</ShareMode>
              <CustomName>Button Panel 8</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary />
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="-8" z="-2" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="-8" z="-2" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="2" y="-7" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorBlock</SubtypeName>
              <Min x="-2" y="-7" z="-1" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="-7" z="-2" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="-7" z="-2" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="-5" z="-3" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="-5" z="-3" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>114657507141101305</EntityId>
              <Min x="2" y="-2" z="-1" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <Owner>144115188075855899</Owner>
              <CustomName>Text panel 15</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages>
                <string>Danger</string>
              </SelectedImages>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>120577613090738793</EntityId>
              <Min x="-2" y="-2" z="-1" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <Owner>144115188075855899</Owner>
              <CustomName>Text panel 14</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages>
                <string>Danger</string>
              </SelectedImages>
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>1</FontSize>
              <PublicDescription />
              <PublicTitle>Public title</PublicTitle>
              <ShowText>NONE</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>74155224604236583</EntityId>
              <Min x="-3" y="-4" z="-1" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
              <Owner>144115188075855899</Owner>
              <CustomName>Button Panel 7</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Force weld</Action>
                      <BlockEntityId>125720797178626380</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary>
                  <item>
                    <Key xsi:type="xsd:int">0</Key>
                    <Value xsi:type="xsd:string">Rotor - Safety lock override On/Off</Value>
                  </item>
                </dictionary>
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="0.0150211584" y="-0.06361255" z="0.0173848569" />
          <AngularVelocity x="0.00118441938" y="0.000281459565" z="0.00214792555" />
          <ConveyorLines>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="-12" z="-2" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="0" y="-13" z="-2" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="-13" z="-1" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="0" y="-13" z="-2" />
              <EndDirection>Left</EndDirection>
              <Sections>
                <Section Direction="Forward" Length="1" />
                <Section Direction="Right" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="1" y="-13" z="-1" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="0" y="-13" z="-2" />
              <EndDirection>Right</EndDirection>
              <Sections>
                <Section Direction="Forward" Length="1" />
                <Section Direction="Left" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="-13" z="-1" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="0" y="-13" z="-2" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="-12" z="-1" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="0" y="-12" z="-2" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="-12" z="-2" />
              <StartDirection>Up</StartDirection>
              <EndPosition x="0" y="-11" z="-2" />
              <EndDirection>Down</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-1" y="-12" z="-1" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="0" y="-12" z="-2" />
              <EndDirection>Left</EndDirection>
              <Sections>
                <Section Direction="Forward" Length="1" />
                <Section Direction="Right" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="1" y="-12" z="-1" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="0" y="-12" z="-2" />
              <EndDirection>Right</EndDirection>
              <Sections>
                <Section Direction="Forward" Length="1" />
                <Section Direction="Left" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="-18" z="-1" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="0" y="-19" z="-1" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="-14" z="-1" />
              <StartDirection>Up</StartDirection>
              <EndPosition x="0" y="-13" z="-1" />
              <EndDirection>Down</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="-19" z="-1" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="1" y="-19" z="-1" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="-19" z="-1" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-1" y="-19" z="-1" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="-3" z="-2" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="0" y="-2" z="-3" />
              <EndDirection>Down</EndDirection>
              <Sections>
                <Section Direction="Forward" Length="1" />
                <Section Direction="Up" Length="1" />
              </Sections>
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
          </ConveyorLines>
          <BlockGroups>
            <MyObjectBuilder_BlockGroup>
              <Name>MAIN CONTROLER</Name>
              <Blocks>
                <Vector3I>
                  <X>0</X>
                  <Y>-6</Y>
                  <Z>-1</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
          </BlockGroups>
          <DisplayName>"Morja" Land Speedboat (Vanilla)</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>74015621095355589</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="0.042236328125" y="-2.177490234375" z="-2.017578125" />
            <Forward x="0.8865557" y="0.0831267461" z="-0.455091983" />
            <Up x="0.209710613" y="-0.9490582" z="0.235178947" />
            <Orientation>
              <X>-0.5200017</X>
              <Y>0.0453009456</Y>
              <Z>0.8391231</Z>
              <W>-0.153031126</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorRotor">
              <SubtypeName>SmallRotor</SubtypeName>
              <EntityId>86399647190938372</EntityId>
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <ParentEntityId>74924387920210937</ParentEntityId>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="1" z="0" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <EntityId>100674451037102228</EntityId>
              <Min x="1" y="1" z="0" />
              <IntegrityPercent>0.16</IntegrityPercent>
              <BuildPercent>0.16</BuildPercent>
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <EntityId>85877076905833793</EntityId>
              <Min x="1" y="1" z="-1" />
              <IntegrityPercent>0.04</IntegrityPercent>
              <BuildPercent>0.04</BuildPercent>
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <EntityId>88533982126336808</EntityId>
              <Min x="-1" y="1" z="0" />
              <IntegrityPercent>0.24</IntegrityPercent>
              <BuildPercent>0.24</BuildPercent>
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope2Tip</SubtypeName>
              <EntityId>87508075068075806</EntityId>
              <Min x="-1" y="1" z="-1" />
              <IntegrityPercent>0.16</IntegrityPercent>
              <BuildPercent>0.16</BuildPercent>
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorRotor">
              <SubtypeName>SmallRotor</SubtypeName>
              <EntityId>110461720886005324</EntityId>
              <Min x="0" y="1" z="-1" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.166666672" y="-0.68" z="-0.3" />
              <ParentEntityId>0</ParentEntityId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.03745082" y="-0.05342076" z="-0.1184468" />
          <AngularVelocity x="-0.116531804" y="0.261568546" z="-0.115637243" />
          <DisplayName>Small Grid 6073</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>75417845779549686</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-1.1728515625" y="0.01416015625" z="-0.81591796875" />
            <Forward x="-0.175139278" y="0.9541736" z="-0.242649883" />
            <Up x="0.117146678" y="0.264904648" z="0.9571323" />
            <Orientation>
              <X>0.6062167</X>
              <Y>0.105718173</Y>
              <Z>0.006996591</Z>
              <W>0.78821063</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel1x1</SubtypeName>
              <EntityId>94030564780222425</EntityId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.00394258834" y="-0.00180970726" z="0.00216553733" />
          <AngularVelocity x="-0.3889308" y="-0.9195113" z="-3.361989" />
          <DisplayName>Small Grid 3850</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>118495213790069954</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="0.76904296875" y="0.35888671875" z="-1.1484375" />
            <Forward x="-0.748655" y="-0.6095787" z="0.260633349" />
            <Up x="0.117169559" y="0.26528573" z="0.957024" />
            <Orientation>
              <X>0.292755783</X>
              <Y>0.737977445</Y>
              <Z>0.530708134</Z>
              <W>0.296702266</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel1x1</SubtypeName>
              <EntityId>122818229125165285</EntityId>
              <ColorMaskHSV x="0.1" y="-0.61" z="0.01" />
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="0.002855014" y="0.000194467138" z="0.00206162781" />
          <AngularVelocity x="-0.654936552" y="-1.51096773" z="-5.511751" />
          <DisplayName>Small Grid 4772</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>96814479993307366</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-1.952392578125" y="-0.727294921875" z="-3.126953125" />
            <Forward x="-0.828047931" y="0.55818975" z="-0.0525397062" />
            <Up x="0.1172525" y="0.2640496" z="0.9573554" />
            <Orientation>
              <X>0.5549031</X>
              <Y>0.407201022</Y>
              <Z>0.245066717</Z>
              <W>0.6827973</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel1x1</SubtypeName>
              <EntityId>100226004247688927</EntityId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.00514301658" y="-0.00332065346" z="0.00273555983" />
          <AngularVelocity x="-0.173884034" y="-0.4837048" z="-1.79593945" />
          <DisplayName>Small Grid 647</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>97284137899711998</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="0.960205078125" y="-0.208984375" z="-3.62646484375" />
            <Forward x="-0.9877877" y="0.130701751" z="0.08480665" />
            <Up x="0.11717394" y="0.26442346" z="0.9572618" />
            <Orientation>
              <X>0.480383724</X>
              <Y>0.5582426</Y>
              <Z>0.370161742</Z>
              <W>0.56619513</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel1x1</SubtypeName>
              <EntityId>134737386072524743</EntityId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.00209372118" y="-0.0008965321" z="0.00316735357" />
          <AngularVelocity x="-0.119920075" y="-0.309527636" z="-1.1401062" />
          <DisplayName>Small Grid 3569</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>100388847087891554</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-2.26611328125" y="-1.4287109375" z="-5.68408203125" />
            <Forward x="-0.9310737" y="0.364560276" z="0.0140347481" />
            <Up x="-0.117443025" y="-0.263078928" z="-0.957599044" />
            <Orientation>
              <X>0.482623935</X>
              <Y>-0.5235376</Y>
              <Z>0.6313586</Z>
              <W>-0.307195216</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel1x1</SubtypeName>
              <EntityId>74101985351596083</EntityId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.00269782962" y="-0.002771371" z="0.00230118819" />
          <AngularVelocity x="-0.06040815" y="-0.0450065" z="-0.125525117" />
          <DisplayName>Small Grid 4536</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>121686635278416932</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="0.64599609375" y="-0.908935546875" z="-6.18408203125" />
            <Forward x="0.8123754" y="0.5291457" z="-0.245052516" />
            <Up x="-0.117418081" y="-0.263192654" z="-0.9575709" />
            <Orientation>
              <X>-0.334271431</X>
              <Y>-0.5154962</Y>
              <Z>0.721012533</Z>
              <W>0.320417255</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel1x1</SubtypeName>
              <EntityId>80292538573804460</EntityId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="0.0101100905" y="-0.06066241" z="0.01792178" />
          <AngularVelocity x="0.000781519338" y="-0.000224717078" z="0.000393201481" />
          <DisplayName>Small Grid 9249</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>88900273269613993</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-0.07421875" y="-1.52197265625" z="-8.015625" />
            <Forward x="-0.404315" y="0.893378" z="-0.1959718" />
            <Up x="-0.117418073" y="-0.263192832" z="-0.957571" />
            <Orientation>
              <X>0.200106025</X>
              <Y>-0.6016409</Y>
              <Z>0.7691255</Z>
              <W>-0.08019879</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel1x1</SubtypeName>
              <EntityId>141042860178530302</EntityId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="0.0106857084" y="-0.0614098758" z="0.0178087074" />
          <AngularVelocity x="0.0007837858" y="-0.0002208252" z="0.000407009618" />
          <DisplayName>Small Grid 5881</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>91367377309273590</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-2.015625" y="-1.868896484375" z="-7.6826171875" />
            <Forward x="0.773219943" y="-0.629328847" z="0.07794757" />
            <Up x="-0.117474765" y="-0.262945175" z="-0.957632065" />
            <Orientation>
              <X>-0.700723648</X>
              <Y>-0.218998164</Y>
              <Z>0.3747786</Z>
              <W>0.566186547</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel1x1</SubtypeName>
              <EntityId>104982180291365831</EntityId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="0.00156323612" y="-0.00188620575" z="0.00182459876" />
          <AngularVelocity x="0.000202432275" y="0.08783096" z="0.356716633" />
          <DisplayName>Small Grid 3172</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>138418502645306154</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-1.76513671875" y="-2.308349609375" z="-9.68115234375" />
            <Forward x="0.9175575" y="-0.397589028" z="-0.00329755247" />
            <Up x="-0.117440879" y="-0.263088584" z="-0.9575967" />
            <Orientation>
              <X>-0.6402447</X>
              <Y>-0.297384977</Y>
              <Z>0.470776856</Z>
              <W>0.5291672</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel1x1</SubtypeName>
              <EntityId>115187202775216918</EntityId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.00187991" y="-0.002308704" z="0.00251697376" />
          <AngularVelocity x="-0.05891648" y="-0.04817246" z="-0.1398921" />
          <DisplayName>Small Grid 5080</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>73388301684174364</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-0.79443359375" y="-2.135009765625" z="-9.84765625" />
            <Forward x="-0.600350738" y="-0.7492835" z="0.279559433" />
            <Up x="-0.117418244" y="-0.263192683" z="-0.9575713" />
            <Orientation>
              <X>-0.763842642</X>
              <Y>0.237327069</Y>
              <Z>-0.219410047</Z>
              <W>0.5586408</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel1x1</SubtypeName>
              <EntityId>132093863831041557</EntityId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="0.0118587809" y="-0.0601586848" z="0.0171381123" />
          <AngularVelocity x="0.0006734915" y="-0.000273177982" z="0.000360425329" />
          <DisplayName>Small Grid 4103</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>100346876142254380</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-1.512939453125" y="-2.755859375" z="-11.67724609375" />
            <Forward x="-0.4145463" y="0.889754" z="-0.1910204" />
            <Up x="-0.1180664" y="-0.2607163" z="-0.958168447" />
            <Orientation>
              <X>0.204547957</X>
              <Y>-0.6022042</Y>
              <Z>0.767149568</Z>
              <W>-0.08361668</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel1x1</SubtypeName>
              <EntityId>136668266435614394</EntityId>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.00213683071" y="-0.0007714033" z="0.00241252035" />
          <AngularVelocity x="0.211500823" y="0.5120218" z="1.88080025" />
          <DisplayName>Small Grid 5479</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
      </CubeGrids>
    </Prefab>
  </Prefabs>
</Definitions>
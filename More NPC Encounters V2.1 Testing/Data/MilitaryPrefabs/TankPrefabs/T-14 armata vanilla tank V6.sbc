<?xml version="1.0"?>
<Definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Prefabs>
    <Prefab xsi:type="MyObjectBuilder_PrefabDefinition">
      <Id Type="MyObjectBuilder_PrefabDefinition" Subtype="T-14 armata vanilla tank V6" />
      <CubeGrids>
        <CubeGrid>
          <SubtypeName />
          <EntityId>130838628775741491</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="0" y="0" z="0" />
            <Forward x="0.514324" y="-0.09353585" z="-0.8524798" />
            <Up x="0.678956747" y="0.6516796" z="0.3381293" />
            <Orientation>
              <X>0.07027995</X>
              <Y>-0.2623372</Y>
              <Z>-0.411364734</Z>
              <W>0.8700684</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>79607290366139136</EntityId>
              <Min x="-1" y="16" z="29" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key xmlns:q1="http://microsoft.com/wsdl/types/" xsi:type="q1:guid">74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value xsi:type="xsd:string">groupNameTag = MART
elevationRotorNameTag = Elevation
azimuthRotorNameTag = Azimuth
mouseSpeedModifier = 0.25
cockpitRelativeMouseControl = False
fireWeaponsOnCrouch = True
</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>PBgunnerTcontrol</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Program>      // Title       : MArmOS (Mechanical Arm Operating System)         
   // Author      : Timotei~         
 /* Description : Marmos is a framework allowing to control many shape of mechanical arm by         
                           simplifying them into a cartesian coordinate system.         
*/         
         
    //***********************************************************************//         
  //*****************  Table of content  *******************************//         
//***********************************************************************//         
/*         
    | SECTION___________________LINE         
    |         
    | Parameters                            ~20         
    | Component Declaration         ~35         
    | ArmConfiguration                  ~50         
    | Main                                       ~90         
    | Documentation                      ~150         
    | MArmOS's entrails                ~250         
         
*/         
             
             
    //***********************************************************************//             
  //***************************  Parameters  ***************************//             
//***********************************************************************//             
             
static Single d     = 0.0005F;       // No need to chage this             
static Single SMOOTLIMITS     = 6F;       // How smoot part's limits should be             
static Single MOUSE_SENSITIVITY_X = -0.06F;             
static Single MOUSE_SENSITIVITY_Y = -0.06F;             
static Single BG    = 2.5F;     // Big Grid block size             
static Single SG    = 0.5F;     // Small Grid block size             
static bool  DEBUG = true;             
static String DebugScreenName = "ArmPanel";           
             
             
             
             
    //***********************************************************************//             
  //*************  Component Declaration  **************************//             
//***********************************************************************//             
// You can declare your Parts here.             
             
             
// example             
ArmController MyArmController;             
             
             
             
             
             
    //***********************************************************************//             
  //*********************  ArmConfiguration  **************************//             
//***********************************************************************//             
public void ArmConfiguration(){             
    // You can define your Parts here             
             
    //Example             
    var Prefix = "";          
    var Motor1 = new Joint( RotorName: Prefix+"Motor1"                                                                   );    

          
    var Motor2 = new Joint( RotorName: Prefix+"Motor2"                                                                 );              
        
           
          
          
                 
    var MyArm = new ArmPart(                 
        "Z"                 
        , Motor1                 
        , new SolidPart( 4*SG, 0, -3*SG ) 

        );                        
           
          
    MyArmController = new ArmController(             
        Arm:MyArm             
        , ShipControllerKeyword:    "AGunnerRC"             
        , Yaw:                   Motor1             
        , Pitch:                  Motor2             
        , Smoot:                40            
        , Speed:                3F             
        , RelativeX:           true             
        , RelativeY:           true            
        , RelativeZ:           true             
    );             
             
}             
             
             
             
     //***********************************************************************//             
   //**************************  MArmOS Main  ********************************//             
 //***********************************************************************//             
 public void MArmOS_Main(string argument) {             
             
    // MArmOS call this function at every execution             
    // You can put your code here             
             
             
             
             
    // Example             
    MyArmController.Update( argument );             
             
             
             
             
             
             
}             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
     
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    
 
   
 
/*   
 
   
 
8888888b.                                                             888             888    d8b   
 
888  "Y88b                                                            888             888    Y8P   
 
888    888                                                            888             888   
 
888    888  .d88b.   .d8888b 888  888 88888b.d88b.   .d88b.  88888b.  888888  8888b.  888888 888  .d88b.  88888b.   
 
888    888 d88""88b d88P"    888  888 888 "888 "88b d8P  Y8b 888 "88b 888        "88b 888    888 d88""88b 888 "88b   
 
888    888 888  888 888      888  888 888  888  888 88888888 888  888 888    .d888888 888    888 888  888 888  888   
 
888  .d88P Y88..88P Y88b.    Y88b 888 888  888  888 Y8b.     888  888 Y88b.  888  888 Y88b.  888 Y88..88P 888  888   
 
8888888P"   "Y88P"   "Y8888P  "Y88888 888  888  888  "Y8888  888  888  "Y888 "Y888888  "Y888 888  "Y88P"  888  888   
 
   
 
*/   
 
   
 
   
 
    //***********************************************************************//     DOCUMENTATION    DOCUMENTATION    DOCUMENTATION   
 
  //*********************  Documentation  ****************************//          DOCUMENTATION    DOCUMENTATION    DOCUMENTATION   
 
//***********************************************************************//       DOCUMENTATION    DOCUMENTATION    DOCUMENTATION   
 
   
 
  /*   
 
   
 
     ////                     List of all classes:                    ////   
 
   
 
    [] means optionnal   
 
   
 
    ////  ArmController  ////   
 
        Constructor:   
 
            new ArmController(   
 
                Part                Arm,   
 
                String              [Name],                 // Alow to give commands to a specific Controller via argument or textpanel. default = ""   
 
                String              [ShipControllerKeyword], // default = ""   
 
                IMyTextPanel        [TextPanelInput],       // default = null   
 
                Single              [Smootness],            // default = 10   
 
                Single              [Speed],                // default = 1   
 
                Joint               [Pitch],                // default = null   
 
                Joint               [Yaw],                  // default = null   
 
                Joint               [Roll],                 // default = null   
 
                IMyTimerBlock       [TargetReachedTimer]    // default = null   
 
            )   
 
   
 
   
 
    ////  Joint  ////   
 
        Constructor:   
 
            new Joint(   
 
                String              RotorName,   
 
                int                   [Direction],              // Direction of rotation  1 or -1   
 
                Single             [Offset],          // Angle in deg°   
 
                String             [Axis],                 // Axis of rotation, default = "Z", will be overriden if used on a ArmPArt.   
 
                bool                [Override]              // MArmOS won't control this joint if true. default = false   
 
            )   
 
   
 
   
 
    ////  SolidPart  ////   
 
        Constructor:   
 
            new Part(   
 
                Single    X,   
 
                Single    Y,   
 
                Single    Z   
 
            )   
 
            or   
 
            new Part(   
 
                Vector3   Vector   
 
            )   
 
            note: units are in meters, not in blocks. Constants hva been created to help:  BG=2.5F   SG=0.5F   
 
   
 
   
 
    ////  PistonPart  ////   
 
        Constructor:   
 
            new PistonPart(   
 
                String                  PistonName,   
 
                String                  Direction         // e.g. "X"   
 
                bool                    [Override]        // default = false   
 
            )   
 
   
 
   
 
    ////  ArmPart  ////   
 
        Constructor:   
 
            new ArmPart(   
 
                String     Axis,     //e.g. "Z"   
 
                Joint       Joint1,   
 
                Part        Arm,   
 
                Joint       [Joint2]              // default = null   
 
                bool        [ShareJoint2]         // default = false   
 
            )   
 
   
 
  */   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
/*   
 
   
 
888b     d888        d8888                        .d88888b.   .d8888b.   
 
8888b   d8888       d88888                       d88P" "Y88b d88P  Y88b   
 
88888b.d88888      d88P888                       888     888 Y88b.   
 
888Y88888P888     d88P 888 888d888 88888b.d88b.  888     888  "Y888b.   
 
888 Y888P 888    d88P  888 888P"   888 "888 "88b 888     888     "Y88b.   
 
888  Y8P  888   d88P   888 888     888  888  888 888     888       "888   
 
888   "   888  d8888888888 888     888  888  888 Y88b. .d88P Y88b  d88P   
 
888       888 d88P     888 888     888  888  888  "Y88888P"   "Y8888P"   
 
   
 
*/   
 
   
 
    //***********************************************************************//       MArmOS       MArmOS       MArmOS   
 
  //*********************  MArmOS's entrails  ************************//        MArmOS       MArmOS       MArmOS   
 
//***********************************************************************//       MArmOS       MArmOS       MArmOS   
 
   
 
   
 
   
 
static System.Action&lt;String&gt; mEcho;          // A pointer to the Echo method   
 
static IMyGridTerminalSystem MyGTS;   // A pointer to the grid terminal system   
 
static IMyProgrammableBlock MyMe;          // A pointer to the Programmable block   
 
//int Clock = 0;   
 
   
 
static void MyEcho( String Text ){   
 
    mEcho( Text );   
 
    try{   
 
        IMyTextPanel debug = (IMyTextPanel)MyGTS.GetBlockWithName( DebugScreenName );   
 
        debug.WritePublicText( Text+"\n", true );   
 
    } catch( Exception ){}   
 
}   
 
   
 
public Program() {   
 
    // Set variables   
 
    var dummy =   BG;   
 
    dummy =       SG;   
 
    mEcho =      Echo;   
 
    MyGTS =       GridTerminalSystem;   
 
    MyMe =        Me;   
 
   
 
    try {   
 
        // Call the configuration of the arm   
 
        ArmConfiguration();   
 
    } catch( Exception ){}   
 
}   
 
   
 
   
 
public void Main(string argument) {   
 
    try {   
 
        // Check the arm configuration every couple thick   
 
        //if ( (Clock++) == 240 ){   
 
            //ArmConfiguration(); // reload the arm   
 
            //Clock = 0;   
 
        //}   
 
        // Call the MArmOS_Main function   
 
   
 
        try{   
 
            IMyTextPanel debug = (IMyTextPanel)MyGTS.GetBlockWithName( DebugScreenName );   
 
            debug.WritePublicText( "", false );   
 
        } catch( Exception ){}   
 
   
 
        MArmOS_Main( argument );   
 
    }   
 
    catch( Exception ){   
 
        Echo("Problem detected, check your configuration");   
 
        // Set variables   
 
        var dummy =   BG;   
 
        dummy =       SG;   
 
        MyGTS =       GridTerminalSystem;   
 
        MyMe =        Me;   
 
   
 
        try{   
 
            ArmConfiguration(); // reload the arm   
 
        } catch( Exception ){}   
 
    }   
 
   
 
}   
 
   
 
   
 
   
 
   
 
   
 
    //***********************************************************************// CLASS     CLASS     CLASS     CLASS   
 
  //*********************  Classes Definition  *************************//      CLASS     CLASS     CLASS     CLASS   
 
//***********************************************************************//     CLASS     CLASS     CLASS     CLASS   
 
   
 
  /*   
 
     List of all classes:   
 
      - ArmController   
 
      - Part   
 
      - Joint   
 
      - SolidPart   
 
      - PartAddition   
 
      - PistonPart   
 
      - ArmPart   
 
  */   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
/*   
 
   
 
       d8888                        .d8888b.                    888                     888   
 
      d88888                       d88P  Y88b                   888                     888   
 
     d88P888                       888    888                   888                     888   
 
    d88P 888 888d888 88888b.d88b.  888         .d88b.  88888b.  888888 888d888  .d88b.  888  .d88b.  888d888   
 
   d88P  888 888P"   888 "888 "88b 888        d88""88b 888 "88b 888    888P"   d88""88b 888 d8P  Y8b 888P"   
 
  d88P   888 888     888  888  888 888    888 888  888 888  888 888    888     888  888 888 88888888 888   
 
 d8888888888 888     888  888  888 Y88b  d88P Y88..88P 888  888 Y88b.  888     Y88..88P 888 Y8b.     888   
 
d88P     888 888     888  888  888  "Y8888P"   "Y88P"  888  888  "Y888 888      "Y88P"  888  "Y8888  888   
 
   
 
*/   
 
   
 
//////// ---------------------------------------------  ArmController ////////        ArmController        ArmController   
 
   
 
public class ArmController {   
 
   
 
    // Parameters   
 
    public Part             Arm;   
 
    public String           Name;   
 
    public Single           Speed;   
 
    public Single           Smoot;   
 
    public Single           Tolerence;   
 
    public bool             RelativeX;   
 
    public bool             RelativeY;   
 
    public bool             RelativeZ;   
 
   
 
    // Components   
 
    public Joint            Pitch;   
 
    public Joint            Yaw;   
 
    public Joint            Roll;   
 
    public IMyTimerBlock    TargetReachedTimer = null;   
 
    public string           ShipControllerKeyword;   
 
    public bool             TrackInputs = true;   
 
    public IMyTextPanel     Panel = null;   
 
   
 
    // Variables   
 
    Vector3                 TargetPos;   
 
    bool                    TrackTarget;   
 
    Vector3                 TargetOri;   
 
    bool                    TrackTargetOri;   
 
    Vector3                 VirtualPos;   
 
    Vector3                 TargetVelocity;   
 
    Vector3                 SmootTargetVelocity;   
 
    Vector3                 InputVec;   
 
    Vector3                 Rot;   
 
    Vector3                 Drift;   
 
   
 
    public void Update( String argument = "" ){   
 
   
 
        TargetVelocity = new Vector3();   
 
        Vector3 Pos = this.Arm.GetVector();   
 
        Vector3 Ori = this.GetRot();   
 
        Vector3 PreRot = new Vector3();   
 
        Vector3 Diff;   
 
        InputVec = new Vector3();   
 
   
 
        MyEcho("Pos="+Pos.ToString("0.0"));   
 
   
 
        // Get the TextPanel's inputs   
 
        if ( Panel != null ){   
 
            try{   
 
                String Text = Panel.GetPublicText();   
 
                Parse( Text );   
 
            } catch( Exception ){   
 
                MyEcho( "Error: The text panel can't be found" );   
 
            }   
 
        }   
 
        // Get the Argument's inputs   
 
        if ( argument != "" )  {   
 
            Parse( argument );   
 
        }   
 
        this.TargetVelocity += this.InputVec;  // Appy the unput velocity to the target velocity   
 
   
 
   
 
        // ------------------&lt;&lt;&lt;   G E T I N G   I N P U T S   &gt;&gt;&gt;-----------------------   
 
        // Get the controllers inputs if TrackInput is true   
 
        if ( TrackInputs ){   
 
            this.InputVec = new Vector3();   
 
   
 
            // Get the list of all Desired controllers   
 
            List&lt;IMyTerminalBlock&gt; Controllers = new List&lt;IMyTerminalBlock&gt;();   
 
            MyGTS.SearchBlocksOfName(this.ShipControllerKeyword, Controllers);   
 
   
 
            // Get the inputs from all desired controllers   
 
            foreach ( IMyTerminalBlock Controller in Controllers ) {   
 
                try{   
 
                    if ( ((IMyShipController)Controller).IsUnderControl ){   
 
                        this.InputVec += GetLinearInputs( (IMyShipController)Controller );  // &lt;&lt; L I N E A R   I N P U T S &gt;&gt;   
 
                        PreRot += GetRotationInputs( (IMyShipController)Controller );    // &lt;&lt; A N G U L A R   I N P U T S &gt;&gt;   
 
                    }   
 
                } catch (Exception){}   
 
            }   
 
            // Normalyse the linear velocity target   
 
            if ( this.InputVec.Length() &gt; 0.001F )   
 
                this.InputVec *= this.Speed/this.InputVec.Length();   
 
            this.TargetVelocity += this.InputVec;   
 
   
 
            // Apply the velocity to the effector's joints   
 
            Rot += (PreRot-Rot)/Smoot;  // Soften the rotational input to avoid jerkyness     // &lt;&lt; R O L L   I N P U T &gt;&gt;   
 
            if (this.Yaw != null)     this.Yaw.SetRotationSpeed( Rot.X*MOUSE_SENSITIVITY_X );   
 
            if (this.Pitch != null)    this.Pitch.SetRotationSpeed( Rot.Y*MOUSE_SENSITIVITY_Y );   
 
            if (this.Roll != null)      this.Roll.SetRotationSpeed( Rot.Z );   
 
        }   
 
   
 
        // Relativise the inputs   
 
         if ( this.RelativeX || this.RelativeY || this.RelativeZ ){   
 
            var Mat = Matrix.CreateTranslation( this.TargetVelocity );   
 
            var Orient = Arm.GetOrient(0);  ///////  TODO more flexible plz   
 
            Mat = Mat*Orient;   
 
            if ( RelativeX )    this.TargetVelocity.X = Mat.Translation.X;   
 
            if ( RelativeY )    this.TargetVelocity.Y = Mat.Translation.Y;   
 
            if ( RelativeZ )    this.TargetVelocity.Z = Mat.Translation.Z;   
 
        }   
 
   
 
        // Move to get to the targeted position   
 
   
 
   
 
   
 
        if ( this.TrackTarget ){   
 
            this.InputVec = this.TargetPos-Pos;   
 
            Single L = this.InputVec.Length();   
 
   
 
            if ( L &lt; Tolerence ){   
 
                this.TrackTarget = false;   
 
            } else {   
 
                this.InputVec *= this.Speed/(Single)Math.Max(this.Speed,L);   
 
                MyEcho( "Moving Toward: "+this.TargetPos.ToString( "0.00" ) );   
 
                this.TargetVelocity += this.InputVec;   
 
            }   
 
   
 
        }   
 
        if ( this.TrackTargetOri ){   
 
   
 
            Vector3 OO = new Vector3( AngleProxy( Ori.X, this.TargetOri.X )   
 
                                    , AngleProxy( Ori.Y, this.TargetOri.Y )   
 
                                    , AngleProxy( Ori.Z, this.TargetOri.Z ) );   
 
            if ( OO.Length() &lt; 0.05 ){   
 
                this.TrackTargetOri = false;   
 
            } else {   
 
                MyEcho( "Orient Toward: "+this.TargetOri.ToString( "0.00" ) );   
 
                if (this.Yaw != null)     this.Yaw.AddRotationSpeed( OO.X*0.5F );   
 
                if (this.Pitch != null)    this.Pitch.AddRotationSpeed( OO.Y*0.5F );   
 
                if (this.Roll != null)      this.Roll.AddRotationSpeed( OO.Z*0.5F );   
 
            }   
 
        }   
 
   
 
   
 
   
 
   
 
        MyEcho("VirtualPos="+VirtualPos.ToString("0.0"));   
 
   
 
        // Soften the target velocity to avoid jerkyness   
 
        this.SmootTargetVelocity += ( this.TargetVelocity-SmootTargetVelocity )/this.Smoot;   
 
   
 
   
 
   
 
        // ------------------&lt;&lt;&lt;   C A L C U L A T I N G   M O V E M E N T S   &gt;&gt;&gt;-----------------------   
 
        MyEcho("TargetVelocity="+TargetVelocity.ToString("0.0"));   
 
   
 
        this.VirtualPos += this.SmootTargetVelocity/60;   
 
   
 
        Diff = VirtualPos-Pos;   
 
        if( Diff.Length() &gt; this.Speed/4){   
 
            Diff *= this.Speed/4/Diff.Length();   
 
            this.VirtualPos = Pos+Diff;   
 
        }   
 
   
 
        // Apply correction if drifting   
 
        this.TargetVelocity += (Diff)*1F;   
 
   
 
        if ( this.TargetVelocity.Length() &lt; 0.02F ) this.TargetVelocity = new Vector3();   
 
   
 
        // Determine the supposed position to get   
 
        if ( this.TargetVelocity.Length() &gt; 0.05F || PreRot.Length() &gt; 0.05F ){   
 
            MyEcho("Input: true");   
 
        } else {   
 
   
 
            MyEcho("Input: false");   
 
            //this.VirtualPos = Pos;   
 
            //Diff = new Vector3();   
 
            this.TargetVelocity *= 0.99F;   
 
            this.Drift *= 0.99F;   
 
        }   
 
   
 
   
 
   
 
        // Move the arm   
 
        if ( this.Drift.Length() &gt; 0.0004F || this.SmootTargetVelocity.Length() &gt; 0.0004 || PreRot.Length() &gt; 0.001 ){   
 
            MyEcho("Moving: ON");   
 
            this.Drift += this.SmootTargetVelocity;   
 
            var Dl = this.Drift.Length();   
 
            Arm.Move( this.Drift/Dl*(this.SmootTargetVelocity.Length()+Dl)/2 );   
 
            this.Drift -= Arm.GetDeltaVector()/d;   
 
            if ( Drift.Length() &gt; Speed*2 )   
 
   
 
                Drift *= Speed*2/Drift.Length();   
 
        } else {   
 
            MyEcho("Moving: OFF");   
 
            this.SmootTargetVelocity *= 0.9F;   
 
            this.Drift = new Vector3();   
 
        }   
 
    }   
 
   
 
   
 
    public Vector3 GetRot( Single dt = 0 ) {   
 
   
 
        var Out = new Vector3();   
 
   
 
        if (this.Yaw != null)     Out.X = this.Yaw.GetAngle(dt);   
 
        if (this.Pitch != null)    Out.Y = this.Pitch.GetAngle(dt);   
 
        if (this.Roll != null)      Out.Z = this.Roll.GetAngle(dt);   
 
   
 
        return Out;   
 
    }   
 
   
 
   
 
   
 
   
 
    ////  AngleProxy  ////   
 
    // Give the smallest difference between two angles   
 
    public static Single AngleProxy( Single A1, Single A2 )   
 
    { //Return the relative Proxymity between two Angles   
 
        A1 = A2-A1;   
 
        A1 = Mod( A1+(Single)Math.PI, (Single)2*(Single)Math.PI )-(Single)Math.PI;   
 
        return A1; }   
 
    //// ----------------------------- ////   
 
   
 
    ////  Mod  ////   
 
    public static Single Mod( Single A, Single N ){   
 
        return A-(Single)Math.Floor(A/N)*N;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
   
 
    // ------------------&lt;&lt;&lt;   P A R S I N G   A R G U M E N T   &gt;&gt;&gt;-----------------------   
 
    // Function used to parse the content of a string   
 
    public void Parse( String Argument ){   
 
   
 
        string Word;   
 
        String[] Lines = Argument.Split( '\n' );   
 
        foreach ( String Line in Lines ){   
 
            String[] Commands = Line.Split( ';' );   
 
            foreach ( String Command in Commands ){   
 
                String[] Words = Command.Split( ' ' );   
 
                int i = 0;   
 
   
 
                if ( this.Name != "" ) i++;   
 
   
 
                if ( (this.Name == "") || (Words[0] == this.Name) ){   
 
                    switch(Words[i++]){   
 
   
 
   
 
                        // Synopsis: Smoot Number   
 
                        case "Smoot":   
 
                            this.Smoot = (Single)Math.Max(1,Convert.ToSingle(Words[i++]));   
 
                        break;   
 
                        // Synopsis: Tolerence Number   
 
                        case "Tolerence":   case "-T":   
 
                            this.Tolerence = (Single)Math.Max(1,Convert.ToSingle(Words[i++]));   
 
                        break;   
 
   
 
                        // Synopsis: Override   
 
                        case "Override":  case "-O":   
 
                            Word = Words[i++];   
 
                            if ( Word == "On" ){   
 
                                try{   
 
                                    string PartName = Reform( Words, i );   
 
                                    if (Part.PartList.ContainsKey(PartName))   
 
                                        Part.PartList[PartName].Override = true;   
 
                                } catch( Exception ){   
 
                                    MyEcho( "Parsing error in 'Override'" );   
 
                                }   
 
                            } else if ( Word == "Off" || Word == "0" ) {   
 
                                try{   
 
                                    string PartName = Reform( Words, i );   
 
                                    if (Part.PartList.ContainsKey(PartName))   
 
                                        Part.PartList[PartName].Override = false;   
 
                                } catch( Exception ){   
 
                                    MyEcho( "Parsing error in 'Override'" );   
 
                                }   
 
                            } else if ( Word == "Toggle" || Word == "-1" ) {   
 
                                try{   
 
                                    string PartName = Reform( Words, i );   
 
                                    if (Part.PartList.ContainsKey(PartName))   
 
                                        Part.PartList[PartName].Override = !Part.PartList[PartName].Override;   
 
                                } catch( Exception ){   
 
                                    MyEcho( "Parsing error in 'Override'" );   
 
                                }   
 
                            }else {   
 
                                MyEcho( "The override need a status keyword ( On, Off or Toggle)" );   
 
                            }   
 
                        break;   
 
   
 
   
 
                        // Synopsis: TrackInputs   
 
                        case "TrackInputs":  case "-TI":   
 
                            Word = Words[i++];   
 
                            if ( Word == "On" ){   
 
                                this.TrackInputs = true;   
 
                            } else if ( Word == "Off" || Word == "0" ) {   
 
                                this.TrackInputs = false;   
 
                            } else if ( Word == "Toggle" || Word == "-1" ) {   
 
                                this.TrackInputs = !this.TrackInputs;   
 
                            }else {   
 
                                MyEcho( "The TrackInputs need a status keyword ( On, Off or Toggle)" );   
 
                            }   
 
                        break;   
 
   
 
   
 
   
 
                        // Synopsis: PrintPosition TextPanelName   
 
                        case "PrintPosition":  case "-PP":   
 
                            try{   
 
                                String PanelName = Reform( Words, i );   
 
                                IMyTextPanel Panel = (IMyTextPanel)MyGTS.GetBlockWithName( PanelName );   
 
                                if ( Panel == null ) {   
 
                                    MyEcho( PanelName+" not found");   
 
                                } else {   
 
                                    Vector3 Pos = (Vector3)this.Arm;   
 
                                    Panel.WritePublicText( "\nMoveTo "+Pos.X.ToString("0.00"), true );   
 
                                    Panel.WritePublicText( " "+Pos.Y.ToString("0.00"), true );   
 
                                    Panel.WritePublicText( " "+Pos.Z.ToString("0.00"), true );   
 
                                    if ( this.Yaw != null )   
 
                                        Panel.WritePublicText( " "+((Single)this.Yaw).ToString("0.00"), true );   
 
                                    if ( this.Pitch != null )   
 
                                        Panel.WritePublicText( " "+((Single)this.Pitch).ToString("0.00"), true );   
 
                                    if ( this.Roll != null )   
 
                                        Panel.WritePublicText( " "+((Single)this.Roll).ToString("0.00"), true );   
 
                                }   
 
                            } catch(Exception){   
 
                                MyEcho( "Parsing error in 'PrintPosition'" );   
 
                            }   
 
                        break;   
 
   
 
                        // Synopsis: ClearPanel TextPanelName   
 
                        case "ClearPanel":  case "-CP":   
 
                            try{   
 
                                String PanelName = Reform( Words, i );   
 
                                IMyTextPanel Panel = (IMyTextPanel)MyGTS.GetBlockWithName( PanelName );   
 
                                if ( Panel == null ) {   
 
                                    MyEcho( PanelName+" not found");   
 
                                } else {   
 
                                    Panel.WritePublicText( "", false );   
 
                                }   
 
                            } catch(Exception){   
 
                                MyEcho( "Parsing error in 'ClearPanel'" );   
 
                            }   
 
                        break;   
 
   
 
   
 
                        // Synopsis: Move X Y Z   
 
                        case "Move":  case "-M":   
 
                            try{   
 
                                this.TargetPos = new Vector3();   
 
                                this.InputVec.X = Convert.ToSingle(Words[i++]);   
 
                                this.InputVec.Y = Convert.ToSingle(Words[i++]);   
 
                                this.InputVec.Z = Convert.ToSingle(Words[i++]);   
 
                            } catch(Exception){   
 
                                MyEcho( "Parsing error in 'Move'" );   
 
                            }   
 
                        break;   
 
   
 
                        // Synopsis: MoveTo X Y Z [Yaw] [Pitch] [Roll]   
 
                        case "MoveTo":  case "-MT":   
 
                            this.TrackTarget = true;   
 
                            this.TargetPos = new Vector3();   
 
                            this.InputVec =  new Vector3();   
 
                            try{   
 
                                this.TargetPos.X = Convert.ToSingle( Words[i++] );   
 
                                this.TargetPos.Y = Convert.ToSingle( Words[i++] );   
 
                                this.TargetPos.Z = Convert.ToSingle( Words[i++] );   
 
                                this.TrackTargetOri = true;   
 
                                this.TargetOri = new Vector3();   
 
                                try{   
 
                                    this.TargetOri.X = Convert.ToSingle(Words[i++]);   
 
                                } catch (Exception){ this.TrackTargetOri = false; }   
 
                                try{   
 
                                    this.TargetOri.Y = Convert.ToSingle(Words[i++]);   
 
                                } catch (Exception){ }   
 
                                try{   
 
                                    this.TargetOri.Z = Convert.ToSingle(Words[i++]);   
 
                                } catch (Exception){ }   
 
   
 
                            } catch(Exception){   
 
                                MyEcho( "Parsing error in 'MoveTo'" );   
 
                            }   
 
                        break;   
 
   
 
                        // Synopsis: Speed Number   
 
                        case "Speed":  case "-S":   
 
                            this.Speed = Convert.ToSingle(Words[i++]);   
 
                            var l = this.TargetVelocity.Length();   
 
                            if ( l &gt; 0.01 ){   
 
                                if ( this.TargetVelocity.X != 0 )   
 
                                   this.TargetVelocity.X = this.TargetVelocity.X/l*this.Speed;   
 
                                if ( this.TargetVelocity.Y != 0 )   
 
                                   this.TargetVelocity.Y = this.TargetVelocity.X/l*this.Speed;   
 
                                if ( this.TargetVelocity.Z != 0 )   
 
                                   this.TargetVelocity.Z = this.TargetVelocity.X/l*this.Speed;   
 
                            }   
 
                        break;   
 
   
 
                        // Synopsis: SetTargetReachedTimer Timername   
 
                        case "SetTargetReachedTimer":  case "-STRT":   
 
                            try{   
 
                                String TimerName = Reform( Words, i );   
 
                                this.TargetReachedTimer = (IMyTimerBlock)MyGTS.GetBlockWithName( TimerName );   
 
                                if ( this.TargetReachedTimer == null )   
 
                                    MyEcho( TimerName+" not found");   
 
                            } catch(Exception){   
 
                                MyEcho( "Parsing error in 'SetTargetReachedTimer'" );   
 
                            }   
 
                        break;   
 
   
 
                    }   
 
                }   
 
            }   
 
        }   
 
    }   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
    public static Vector3 GetLinearInputs( IMyShipController Controller ){   
 
        Vector3 VecIn;   
 
        Vector3 VecOut;   
 
        VecIn = Controller.MoveIndicator;   
 
        VecOut.X = -VecIn.Z;   
 
        VecOut.Y = -VecIn.X;   
 
        VecOut.Z = VecIn.Y;   
 
        return VecOut;   
 
    }   
 
   
 
   
 
    public static Vector3 GetRotationInputs( IMyShipController Controller ){   
 
        Vector2 VecIn;   
 
        Vector3 VecOut;   
 
        VecIn = Controller.RotationIndicator;   
 
        VecOut.X = VecIn.Y;   
 
        VecOut.Y = -VecIn.X;   
 
        VecOut.Z = Controller.RollIndicator;   
 
        return VecOut;   
 
    }   
 
   
 
   
 
   
 
   
 
   
 
   
 
    // Function used to reassemble the end of a string[] to get an string   
 
    public static String Reform( String[] Words, int i ){   
 
        String Word = "";   
 
        do {   
 
            Word += Words[i];   
 
            i++;   
 
        } while ( i&lt; Words.Length &amp;&amp; (Word += " ") != null );   
 
        return Word;   
 
    }   
 
   
 
   
 
   
 
   
 
    // Constructor   
 
    public ArmController(   
 
                              Part          Arm,   
 
                              String        Name = "",   
 
                              String        ShipControllerKeyword = "",   
 
                              IMyTextPanel  TextPanelInput = null,   
 
                              Single        Smoot = 10,   
 
                              Single        Speed = 1,   
 
                              Joint          Pitch = null,   
 
                              Joint          Yaw = null,   
 
                              Joint          Roll = null,   
 
                              bool          RelativeX = false,   
 
                              bool          RelativeY = false,   
 
                              bool          RelativeZ = false,   
 
                              IMyTimerBlock TargetReachedTimer = null,   
 
                              Single        Tolerence = 0.1F   
 
                        ){   
 
        this.Arm =                  Arm;   
 
        this.Name =                 Name;   
 
        this.ShipControllerKeyword = ShipControllerKeyword;   
 
        if ( this.ShipControllerKeyword != "" ){   
 
            this.TrackInputs = true;   
 
        }   
 
        this.Tolerence = Tolerence;   
 
   
 
        this.Panel =                        TextPanelInput;   
 
        this.Smoot =                        Smoot;   
 
        this.Speed =                        Speed;   
 
        this.Pitch =                          Pitch;   
 
        this.Yaw =                           Yaw;   
 
        this.Roll =                             Roll;   
 
        this.RelativeX =                    RelativeX;   
 
        this.RelativeY =                    RelativeY;   
 
        this.RelativeZ =                    RelativeZ;   
 
        this.TargetReachedTimer =  TargetReachedTimer;   
 
        this.TargetPos =                    new Vector3();   
 
        this.TrackTarget =                  false;   
 
        this.TargetOri =                    new Vector3();   
 
        this.TrackTargetOri =               false;   
 
        this.VirtualPos =                   (Vector3)Arm;   
 
        this.SmootTargetVelocity =  new Vector3();   
 
        this.Rot =                               new Vector3();   
 
        this.Drift =                              new Vector3();   
 
    }   
 
}   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
/*   
 
   
 
8888888b.                   888   
 
888   Y88b                  888   
 
888    888                  888   
 
888   d88P  8888b.  888d888 888888   
 
8888888P"      "88b 888P"   888   
 
888        .d888888 888     888   
 
888        888  888 888     Y88b.   
 
888        "Y888888 888      "Y888   
 
   
 
*/   
 
   
 
//////// ---------------------------------------------  PART ////////       PART       PART       PART       PART   
 
public class Part{   
 
   
 
  // Interface:   
 
      // Implication of Vector3   
 
      // Override of .ToString()   
 
   
 
  // Utilitary:   
 
      // Addition Management   
 
      // SQ   
 
      // FindAngle   
 
      // AngleProxy   
 
      // Mod   
 
      // AxisToU   
 
      // RelativePlane   
 
   
 
  // Interraction:   
 
      // GetVector                      [VIRTUAL]   
 
      // GetDeltaVector   
 
      // GetPose                      [VIRTUAL]   
 
      // GetDeltaPose   
 
      // GetOrient                      [VIRTUAL]   
 
      // Move                      [VIRTUAL]   
 
   
 
   
 
   
 
   
 
   
 
    // Declaration of variables:   
 
   
 
    public static Dictionary&lt;String, Part&gt; PartList = new Dictionary&lt;String, Part&gt;();   
 
    // A list of most parts to reffer to them by parsing input.   
 
   
 
    public Matrix Pose = new Matrix();                      // The current pose of the Part   
 
    public String  Axis;   
 
    public Vector3 U = new Vector3(0,0,1);              //Unitary Axis, Default is "Z"   
 
    public bool Override = false;   
 
   
 
    // INTERFACE:   
 
   
 
    //// Implication of Vector3 ////   
 
    public static implicit operator Vector3( Part a )   
 
    { return a.GetVector(); }   
 
    //// ----------------------------- ////   
 
   
 
     //// Implication of Matrix////   
 
    public static implicit operator Matrix( Part a )   
 
    { return a.GetPose(); }   
 
    //// ----------------------------- ////   
 
   
 
    //// Override of .ToString ////   
 
    public override String ToString()   
 
    { return ((Matrix)this).ToString(); }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
   
 
   
 
   
 
    // UTILITARY:   
 
   
 
    //// Addition Management ////   
 
    // Create a PartAddition Part to track additionned Parts   
 
    public static Part operator +(Part left, Part right)   
 
    { return new PartAddition( left, right ); }   
 
    //// ----------------------------- ////   
 
   
 
    //// SQ ////   
 
    // Easy access Square   
 
    public static Single SQ(Single X)   
 
    { return X*X; }   
 
    //// ----------------------------- ////   
 
   
 
    //// FindAngle ////   
 
    // Use the cosinus trick to find an angle within a triangle   
 
    public Single FindAngle( Single a, Single b, Single c )   
 
    { return (Single)Math.Acos( (SQ(b)+SQ(c)-SQ(a))/(2*b*c) ); }   
 
    //// ----------------------------- ////   
 
   
 
    ////  AngleProxy  ////   
 
    // Give the smallest difference between two angles   
 
    public static Single AngleProxy( Single A1, Single A2 )   
 
    { //Return the relative Proxymity between two Angles   
 
        A1 = A2-A1;   
 
        A1 = Mod( A1+(Single)Math.PI, (Single)2*(Single)Math.PI )-(Single)Math.PI;   
 
        return A1; }   
 
    //// ----------------------------- ////   
 
   
 
    ////  Mod  ////   
 
    // Modulo   
 
    public static Single Mod( Single A, Single N )   
 
    { return A-(Single)Math.Floor(A/N)*N; }   
 
    //// ----------------------------- ////   
 
   
 
    //// AxisToU ////   
 
    // Convert an axis into a Unitary vector   
 
    public static Vector3 AxisToU( String Axis )   
 
    {   
 
        switch (Axis){   
 
            case "X": return new Vector3( 1, 0, 0 );   
 
            case "Y": return new Vector3( 0, 1, 0 );   
 
            case "Z": return new Vector3( 0, 0, 1 );   
 
            case "-X": return new Vector3( -1, 0, 0 );   
 
            case "-Y": return new Vector3( 0, -1, 0 );   
 
            case "-Z": return new Vector3( 0, 0, -1 );   
 
            default: return new Vector3( 0, 0, 1 );   
 
        }   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
    ////  RelativePlane  ////   
 
    // Realivise a vector3 into a plane   
 
    public static Vector2 RelativePlane( Vector3 Vec, String Axis ){   
 
        switch (Axis){   
 
            case "X": return new Vector2( -Vec.Z, Vec.Y );   
 
            case "Y": return new Vector2( Vec.X, -Vec.Z );   
 
            case "Z": return new Vector2( Vec.X, Vec.Y );   
 
            case "-X": return new Vector2( Vec.Z, Vec.Y );   
 
            case "-Y": return new Vector2( Vec.X, Vec.Z );   
 
            case "-Z": return new Vector2( Vec.X, -Vec.Y );   
 
            default: return new Vector2( Vec.Y, Vec.Z );   
 
        }   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
   
 
    // INTERRACTION:   
 
   
 
    ////  GetVector  ////   
 
    // Extract the translation vector from the current or future pose of the Part   
 
    public virtual Vector3 GetVector( Single dT = 0 ){   
 
        return GetPose( dT ).Translation;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
    ////  GetDeltaVector  ////   
 
    // Get the current delta of the Part's translation vector. note: delta = velocity*d   
 
    public Vector3 GetDeltaVector( )   
 
    {   return this.GetVector( 1 )-this.GetVector( 0 ); }   
 
    //// ----------------------------- ////   
 
   
 
   
 
    ////  GetPose  ////   
 
    // Get the current or future Pose of the Part   
 
    public virtual Matrix GetPose( Single dT = 0 ){   
 
        this.Pose = new Matrix();   
 
        return this.Pose;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
    ////  GetDeltaPose  ////   
 
    // Get the current delta of the Part's Pose. note: delta = velocity*d   
 
    public Matrix GetDeltaPose( ){   
 
        Matrix Inverto;   
 
        Matrix Pose = this.GetPose( 0 );   
 
        Matrix.Invert( ref Pose, out Inverto );   
 
        return this.GetPose( 1 )*Inverto;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
    ////  GetOrient  ////   
 
    // Get the current or future Orientation of the Part   
 
    public virtual Matrix GetOrient( Single dT = 0 ){   
 
        var Pose = this.GetPose(dT);   
 
        Pose.Translation = new Vector3();   
 
        return Pose;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
   
 
    ////  Move  ////   
 
    public virtual Vector3 Move( Vector3 TargetdV ){   
 
        return TargetdV;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
}   
 
//////// ----------------------------------------------------- ////////   
 
   
 
   
 
   
 
   
 
   
 
/*   
 
   
 
888888          d8b          888   
 
  "88b          Y8P          888   
 
   888                       888   
 
   888  .d88b.  888 88888b.  888888   
 
   888 d88""88b 888 888 "88b 888   
 
   888 888  888 888 888  888 888   
 
   88P Y88..88P 888 888  888 Y88b.   
 
   888  "Y88P"  888 888  888  "Y888   
 
 .d88P   
 
.d88P"   
 
888P"   
 
   
 
*/   
 
//////// ---------------------------------------------  JOINT ////////          JOINT         JOINT   
 
public class Joint : Part{   
 
   
 
   
 
  // Interface:   
 
      // Implication of Single   
 
   
 
  // Interraction:   
 
      // GetAngle   
 
      // GetVector                    [OVERRIDE]   
 
      // GetPose                    [OVERRIDE]   
 
      // GetOrient                    [OVERRIDE]   
 
      // Get_Velocity                    [OVERRIDE]   
 
      // AddRotationSpeed   
 
      // SetRotationSpeed   
 
   
 
   
 
   
 
    public IMyMotorStator    Mot;   
 
    public Single               VirtualSpeed;   
 
    public int                  Direction;   
 
    public Single               Offset;   
 
    public Joint                Slave;   
 
    public Hydraulic    HA;   
 
   
 
   
 
   
 
   
 
   
 
    // INTERFACE:   
 
   
 
    //// Implication of Single ////   
 
    public static implicit operator Single( Joint a )   
 
    {   return a.GetAngle();    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
   
 
    // INTERACTION:   
 
   
 
    //// GetAngle ////   
 
    //Get the current or future angle of an Joint   
 
    public virtual Single GetAngle( Single dT = 0 )   
 
    {   
 
        Single Vel = this.Get_Velocity()*d*dT;   
 
        return this.Mot.Angle*this.Direction+this.Offset+Vel;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
    ////  GetVector  ////   
 
    // Extract the translation vector from the current or future pose of the Part   
 
    public override Vector3 GetVector( Single dT = 0 ){   
 
        return new Vector3();   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
    ////  GetPose  ////   
 
    //Get the current or future angle of an Joint   
 
    public override Matrix GetPose( Single dT = 0 ){   
 
        switch (this.Axis)   
 
        {   
 
            case "X": return Matrix.CreateRotationX( this.GetAngle( dT )  );   
 
            case "Y": return Matrix.CreateRotationY( this.GetAngle( dT )  );   
 
            case "Z": return Matrix.CreateRotationZ( this.GetAngle( dT )  );   
 
            case "-X": return Matrix.CreateRotationX( -this.GetAngle( dT )  );   
 
            case "-Y": return Matrix.CreateRotationY( -this.GetAngle( dT )  );   
 
            case "-Z": return Matrix.CreateRotationZ( -this.GetAngle( dT )  );   
 
            default: return Matrix.CreateRotationZ( this.GetAngle( dT )  );   
 
        }   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
    ////  GetOrient  ////   
 
    // Get the current or future Orientation of the Part   
 
    public override Matrix GetOrient( Single dT = 0 ){   
 
        return this.GetPose(dT);   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
    //// Get_Velocity ////   
 
    //To get the current velocity of a Joint   
 
    public virtual Single Get_Velocity(  ){   
 
   
 
       Single Vel;   
 
       if ( this.Mot.Enabled )   
 
       {   
 
           Vel = this.Mot.Velocity*(Single)Math.PI/30; // from rpm to rad/s   
 
           //Vel = (Single)Math.Max(-30,Math.Min(30,Vel));   
 
           if ( this.Mot.Angle &gt;= this.Mot.UpperLimit )   
 
                Vel = (Single)Math.Min( Vel, 0 );   
 
            else if ( this.Mot.Angle &lt;= this.Mot.LowerLimit )   
 
                Vel = (Single)Math.Max( Vel, 0 );   
 
            Vel *= this.Direction;   
 
   
 
        } else Vel = 0;   
 
        return Vel;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
    //// AddRotationSpeed ////   
 
    // Add delta to the velocity of the rotor. Recieve a angular delta in d(rad)/d(s).   
 
    // this is so we can apply velocityes to the same rotor from multiple Parts.   
 
    public void AddRotationSpeed( Single dV = 0 )   
 
    {   
 
   
 
        if ( DEBUG ) MyEcho( VirtualSpeed.ToString() );   
 
   
 
        SetRotationSpeed( VirtualSpeed*(Single)Math.PI/30*this.Direction+dV );   
 
   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
   
 
    //// SetRotationSpeed ////   
 
    // Set the velocity of the rotor. Recieve a angular delta in d*rad.   
 
    public virtual void SetRotationSpeed( Single dV = 0 )   
 
    {   
 
   
 
   
 
        Single Vel = 0;   
 
   
 
        if ( !this.Mot.Enabled ) {   
 
   
 
            this.Mot.SetValue("Velocity", 0F );   
 
            VirtualSpeed = 0;   
 
   
 
        } else if( !this.Override ) {   
 
            // Get the desired acceleration   
 
   
 
   
 
            VirtualSpeed = dV/(Single)Math.PI*30*this.Direction;   
 
   
 
            Vel = VirtualSpeed;   
 
   
 
            // Limit the acceleration to avoid Clang's wrath   
 
            //Vel = (Single)Math.Max(-5,Math.Min(5,Vel));   
 
   
 
   
 
            // Smooting the limits by limiting speed near them   
 
            Single Maxim = 1;   
 
            Single Minim = 1;   
 
            Single Smoot = SMOOTLIMITS/2;   
 
   
 
   
 
            if ( this.Mot.UpperLimit != 361F )   
 
                Maxim = (Single)Math.Min( Smoot, this.Mot.UpperLimit-0.01F-this.Mot.Angle )/Smoot;   
 
            if ( this.Mot.LowerLimit != -361F )   
 
                Minim = (Single)Math.Min( Smoot, this.Mot.Angle-this.Mot.LowerLimit-0.01F )/Smoot ;   
 
   
 
            Vel = (Single)Math.Min( 60*Maxim, Vel );   
 
            Vel = (Single)Math.Max( -60*Minim, Vel );   
 
   
 
            // Applying the velocity to the rotor   
 
            if ( Math.Abs(Vel) &lt; 60)   
 
                this.Mot.SetValue("Velocity", Vel );   
 
        }   
 
   
 
        MyEcho("Vel: "+Vel.ToString("0.00"));   
 
        Vel *= (Single)Math.PI/30*this.Direction;   
 
        if ( this.Slave != null ) this.Slave.SetRotationSpeed( Vel );   
 
        if ( this.HA != null ) this.HA.Move( Vel*d );   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
   
 
   
 
    public class Hydraulic{   
 
   
 
        Part    Actuator;   
 
        int     Direction;   
 
        Single  L1_2p2_2;   
 
        Single  L1mL2m2;   
 
   
 
        public void Move( Single dTheta ){   
 
   
 
            Single D = ((Vector3)this.Actuator).X;   
 
            Single Theta = (Single)Math.Acos( (SQ(D)-this.L1_2p2_2)/L1mL2m2 );   
 
            Single dD = (Single)Math.Sqrt( this.L1_2p2_2 + this.L1mL2m2 * Math.Cos( Theta+dTheta ) );   
 
            dD -= D;   
 
            this.Actuator.Move( new Vector3( dD/d*this.Direction, 0, 0 ) );   
 
        }   
 
   
 
        public Hydraulic(  Part Actuator = null,   
 
                           int Direction = 1,   
 
                           Single Length1 = 1,   
 
                           Single Length2 = 1  ){   
 
            this.Actuator = Actuator;   
 
            this.Direction = Direction;   
 
            this.L1_2p2_2 = SQ( Length1 )+SQ( Length2 );   
 
            this.L1mL2m2 = 2*Length1*Length2;   
 
        }   
 
    }   
 
   
 
   
 
   
 
   
 
   
 
   
 
    // CONSTRUCTORS   
 
   
 
    //// Constructor ////   
 
    public Joint(   String              RotorName,   
 
                    int                 Direction = 1,   
 
                    Single              Offset = 0,   
 
                    String              Axis = "Z",   
 
                    bool                Override = false,   
 
                    Joint               Slave = null,   
 
                    Hydraulic   HA = null )   
 
    {   
 
        if (!PartList.ContainsKey(RotorName))   
 
            PartList.Add( RotorName, this );   
 
   
 
        this.Mot = (IMyMotorStator)MyGTS.GetBlockWithName( RotorName );   
 
        if ( Mot == null )   
 
            MyEcho( "The rotor \"" + RotorName + "\" can't be found" );   
 
   
 
        this.VirtualSpeed = 0;   
 
        this.Direction = -Direction;   
 
        this.Offset = Offset/180*(Single)Math.PI;   
 
        this.Axis = Axis;   
 
        this.U = AxisToU( Axis );   
 
        this.Override = Override;   
 
        this.Slave = Slave;   
 
   
 
        this.HA = HA;   
 
   
 
   
 
   
 
   
 
   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
}   
 
//////// ----------------------------------------------------- ////////   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
/*   
 
   
 
8888888b.                   888           d8888      888      888 d8b 888    d8b   
 
888   Y88b                  888          d88888      888      888 Y8P 888    Y8P   
 
888    888                  888         d88P888      888      888     888   
 
888   d88P  8888b.  888d888 888888     d88P 888  .d88888  .d88888 888 888888 888  .d88b.  88888b.   
 
8888888P"      "88b 888P"   888       d88P  888 d88" 888 d88" 888 888 888    888 d88""88b 888 "88b   
 
888        .d888888 888     888      d88P   888 888  888 888  888 888 888    888 888  888 888  888   
 
888        888  888 888     Y88b.   d8888888888 Y88b 888 Y88b 888 888 Y88b.  888 Y88..88P 888  888   
 
888        "Y888888 888      "Y888 d88P     888  "Y88888  "Y88888 888  "Y888 888  "Y88P"  888  888   
 
   
 
*/   
 
//////// ---------------------------------------------  PARTADDITION ////////     PARTADDITION      PARTADDITION   
 
public class PartAddition : Part{   
 
   
 
   
 
      // Interraction:   
 
          // GetPose                   [OVERRIDE]   
 
          // GetOrient                   [OVERRIDE]   
 
          // GetVector                  [OVERRIDE]   
 
          // Move                   [OVERRIDE]   
 
   
 
      // Constructors:   
 
          // Constructor              [OVERRIDE]   
 
   
 
   
 
    // Declaration of variables:   
 
    public Part Add1;   
 
    public Part Add2;   
 
   
 
   
 
   
 
    // INTERRACTION:   
 
   
 
    ////  GetPose  ////   
 
    public override Matrix GetPose( Single dT = 0 ){   
 
        var Pose = Add2.GetPose(dT)*Add1.GetPose(dT);   
 
        return Pose;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
    ////  GetOrient  ////   
 
    // Get the current or future Orientation of the Part   
 
    public override Matrix GetOrient( Single dT = 0 ){   
 
        return this.Add2.GetOrient(dT)*this.Add1.GetOrient(dT);   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
    ////  GetVector  ////   
 
    // Extract the translation vector from the current or future pose of the Part   
 
    public override Vector3 GetVector( Single dT = 0 ){   
 
        Matrix Mat = Matrix.CreateTranslation(Add2.GetVector(dT));   
 
        var Pose = Mat*Add1.GetPose(dT);   
 
        return Pose.Translation;   
 
        //return Add1.GetVector(dT)+Add2.GetVector(dT);   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
    ////  Move  ////   
 
    // Will try to move the first Part before the second   
 
    public override Vector3 Move( Vector3 TargetdV ){   
 
   
 
        var Orient = this.Add1.GetOrient(0);   
 
   
 
   
 
        var TargetdVMat = Matrix.CreateTranslation( TargetdV );   
 
        TargetdV = this.Add2.Move( ( TargetdVMat*Matrix.Invert(Orient) ).Translation );   
 
   
 
        TargetdVMat = Matrix.CreateTranslation( TargetdV )*Orient;   
 
   
 
        return this.Add1.Move( TargetdVMat.Translation );   
 
   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
   
 
    // CONSTRUCTORS:   
 
   
 
    //// Constructor ////   
 
    public PartAddition( Part Add1, Part Add2) {   
 
        this.Add1 = Add1;   
 
        this.Add2 = Add2;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
}   
 
//////// ----------------------------------------------------- ////////   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
/*   
 
   
 
.d8888b.           888 d8b      888 8888888b.                   888   
 
d88P  Y88b          888 Y8P      888 888   Y88b                  888   
 
Y88b.               888          888 888    888                  888   
 
"Y888b.    .d88b.  888 888  .d88888 888   d88P  8888b.  888d888 888888   
 
   "Y88b. d88""88b 888 888 d88" 888 8888888P"      "88b 888P"   888   
 
     "888 888  888 888 888 888  888 888        .d888888 888     888   
 
Y88b  d88P Y88..88P 888 888 Y88b 888 888        888  888 888     Y88b.   
 
"Y8888P"   "Y88P"  888 888  "Y88888 888        "Y888888 888      "Y888   
 
   
 
*/   
 
//////// ---------------------------------------------  SolidPart ////////     SOLIDPART     SOLIDPART   
 
public class SolidPart : Part{   
 
   
 
   
 
  // Interraction:   
 
      // GetPose                   [OVERRIDE]   
 
      // GetOrient                   [OVERRIDE]   
 
      // GetVector                  [OVERRIDE]   
 
      // Move                   [OVERRIDE]   
 
   
 
  // Constructors:   
 
      // Constructor 1   
 
      // Constructor 2   
 
   
 
   
 
    /*      Layout:   
 
   
 
            +Z   
 
            |   
 
            |   
 
            0-------- +Y   
 
             \   
 
              \   
 
               +X   
 
    */   
 
   
 
   
 
    // Declaration of variables:   
 
    Matrix       Mat;   
 
   
 
   
 
   
 
    // INTERRACTION:   
 
   
 
    ////  GetPose  ////   
 
    public override Matrix GetPose( Single dT = 0 ){   
 
        return this.Mat;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
     ////  GetOrient  ////   
 
    // Get the current or future Orientation of the Part   
 
    public override Matrix GetOrient( Single dT = 0 ){   
 
        return Matrix.CreateTranslation( new Vector3() );   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
    ////  Move  ////   
 
    public override Vector3 Move( Vector3 TargetdV )   
 
    {   
 
       return TargetdV;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
    ////  GetVector  ////   
 
    // Extract the translation vector from the current or future pose of the Part   
 
    public override Vector3 GetVector( Single dT = 0 ){   
 
        return Mat.Translation;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
    // CONSTRUCTORS:   
 
   
 
    //// Constructor 1 ////   
 
    public SolidPart( Vector3 Vec )   
 
    {   
 
        this.Mat = Matrix.CreateTranslation(Vec);   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
    //// Constructor 2 ////   
 
    public SolidPart( Single X, Single Y, Single Z )   
 
    {   
 
        this.Mat = Matrix.CreateTranslation( X, Y, Z );   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
}   
 
//////// ----------------------------------------------------- ////////   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
/*   
 
   
 
8888888b.  d8b          888                      8888888b.                   888   
 
888   Y88b Y8P          888                      888   Y88b                  888   
 
888    888              888                      888    888                  888   
 
888   d88P 888 .d8888b  888888  .d88b.  88888b.  888   d88P  8888b.  888d888 888888   
 
8888888P"  888 88K      888    d88""88b 888 "88b 8888888P"      "88b 888P"   888   
 
888        888 "Y8888b. 888    888  888 888  888 888        .d888888 888     888   
 
888        888      X88 Y88b.  Y88..88P 888  888 888        888  888 888     Y88b.   
 
888        888  88888P'  "Y888  "Y88P"  888  888 888        "Y888888 888      "Y888   
 
   
 
*/   
 
//////// ---------------------------------------------  PistonPart ////////     PistonPart        PistonPart   
 
public class PistonPart : Part{   
 
   
 
   
 
  // Interraction:   
 
      // GetPose                   [OVERRIDE]   
 
      // GetOrient                   [OVERRIDE]   
 
      // GetVector                  [OVERRIDE]   
 
      // GetLenght   
 
      // Move                   [OVERRIDE]   
 
   
 
  // Constructors:   
 
      // Constructor   
 
   
 
   
 
        /*  Layout:   
 
   
 
                           Piston-----|   
 
   
 
        */   
 
   
 
   
 
   
 
   
 
    // Declaration of variables:   
 
    public IMyPistonBase   Piston;   
 
    public PistonPart           Slave;  
 
   
 
    // INTERRACTION:   
 
   
 
    ////  GetPose  ////   
 
    public override Matrix GetPose( Single dT = 0 )   
 
    {   
 
        this.Pose = Matrix.CreateTranslation( this.U*this.GetLenght( dT ) ) ;   
 
        return this.Pose;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
      ////  GetOrient  ////   
 
    // Get the current or future Orientation of the Part   
 
    public override Matrix GetOrient( Single dT = 0 ){   
 
        return Matrix.CreateTranslation( new Vector3() );   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
    ////  GetVector  ////   
 
    // Extract the translation vector from the current or future pose of the Part   
 
    public override Vector3 GetVector( Single dT = 0 ){   
 
        return this.U*this.GetLenght( dT );   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
    ////  GetLenght  ////   
 
    // Get the current or future piston's extention.   
 
    public Single GetLenght( Single dT )   
 
    {   
 
        Single Vel = this.Piston.Velocity*dT*d;   
 
        if ( this.Piston.Enabled ){   
 
            if ( this.Piston.CurrentPosition &gt;= this.Piston.MaxLimit )   
 
                Vel = (Single)Math.Min( Vel, 0 );   
 
            else if ( this.Piston.CurrentPosition &lt;= this.Piston.MinLimit )   
 
                Vel = (Single)Math.Max( Vel, 0 );   
 
        } else Vel = 0;   
 
   
 
   
 
        return (this.Piston.CurrentPosition+Vel);   
 
    }   
 
   
 
   
 
   
 
   
 
   
 
   
 
    ////  Move  ////   
 
    public override Vector3 Move( Vector3 TargetdV ){   
 
        if ( !this.Override )   
 
        {   
 
  
 
            if (Slave != null )  
 
                Slave.Move( TargetdV );  
 
  
 
            if ( DEBUG ) MyEcho( "PTdV = "+TargetdV.ToString("0.0") );   
 
            Single Vel = ((Single)Vector3.Dot( TargetdV, this.U ));   
 
   
 
            //Vel = (Single)Math.Max( this.Piston.Velocity-2, Math.Min( this.Piston.Velocity+2,Vel ));   
 
   
 
            Single Smoot = SMOOTLIMITS;   
 
            Single Maxim = (Single)Math.Min( Smoot,   
 
                                         this.Piston.MaxLimit-this.Piston.CurrentPosition )/Smoot;   
 
            Single Minim = (Single)Math.Min( Smoot,   
 
                                        this.Piston.CurrentPosition-this.Piston.MinLimit )/Smoot;   
 
   
 
            Vel = (Single)Math.Min( 10*Maxim, Vel ) ;   
 
            Vel = (Single)Math.Max( -10*Minim, Vel );   
 
   
 
            if ( Vel &lt; 10 &amp;&amp; Vel &gt; -10 ){   
 
                 this.Piston.SetValue("Velocity",  Vel );   
 
                 return TargetdV-Vel*this.U;   
 
            }   
 
        }   
 
   
 
        return TargetdV;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
    // CONSTRUCTOR:   
 
   
 
    //// Constructor 1 ////   
 
    public PistonPart(   
 
                        String      PistonName,   
 
                        String      Axis = "X",   
 
                        bool         Override = false,  
 
                        PistonPart Slave = null  
 
                ) {   
 
   
 
        this.Slave = Slave;  
 
        this.U = AxisToU( Axis );   
 
        if (!PartList.ContainsKey(PistonName))   
 
            PartList.Add( PistonName, this );   
 
        this.Piston = (IMyPistonBase)MyGTS.GetBlockWithName( PistonName );   
 
        this.Override = Override;   
 
   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
}   
 
//////// ----------------------------------------------------- ////////   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
   
 
/*   
 
   
 
d8888                       8888888b.                   888   
 
d88888                       888   Y88b                  888   
 
d88P888                       888    888                  888   
 
d88P 888 888d888 88888b.d88b.  888   d88P  8888b.  888d888 888888   
 
d88P  888 888P"   888 "888 "88b 8888888P"      "88b 888P"   888   
 
d88P   888 888     888  888  888 888        .d888888 888     888   
 
d8888888888 888     888  888  888 888        888  888 888     Y88b.   
 
d88P     888 888     888  888  888 888        "Y888888 888      "Y888   
 
   
 
*/   
 
/////// ---------------------------------------------  ArmPart ////////     ArmPart    ArmPart   
 
public class ArmPart : Part {   
 
   
 
   
 
   
 
   
 
      // Interraction:   
 
          // GetPose                   [OVERRIDE]   
 
          // GetOrient                   [OVERRIDE]   
 
          // GetVector                  [OVERRIDE]   
 
          // Move                   [OVERRIDE]   
 
   
 
    // Constructors:   
 
        // Constructor   
 
   
 
   
 
    /*      Layout:   
 
                             Joint2   
 
                             /   
 
                          /   
 
                       /   
 
                  Joint1   
 
    */   
 
   
 
   
 
   
 
   
 
    // Declaration of variables:   
 
    public Joint    Joint1;   
 
    public Part     Link;   
 
    public Joint    Joint2;   
 
    public bool     ShareJoint2;   
 
   
 
    // INTERRACTION:   
 
   
 
    ////  GetPose  ////   
 
    public override Matrix GetPose( Single dT = 0 ){   
 
   
 
        this.Pose = this.Joint1.GetPose( dT );   
 
        this.Pose = this.Link.GetPose( dT )*this.Pose;   
 
        if ( this.Joint2 != null &amp;&amp; !this.ShareJoint2 )   
 
            this.Pose = this.Joint2.GetPose( dT )*this.Pose;   
 
   
 
        return this.Pose;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
     ////  GetOrient  ////   
 
    // Get the current or future Orientation of the Part   
 
    public override Matrix GetOrient( Single dT = 0 ){   
 
        if ( this.Joint2 != null &amp;&amp; !this.ShareJoint2 )   
 
            return this.Joint2.GetOrient(dT)*this.Link.GetOrient(dT)*this.Joint1.GetOrient(dT);   
 
   
 
       return this.Link.GetOrient(dT)*this.Joint1.GetOrient(dT);   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
    ////  GetVector  ////   
 
    public override Vector3 GetVector( Single dT = 0 ){   
 
        var Mat = Matrix.CreateTranslation( this.Link.GetVector(dT) );   
 
        return (Mat*this.Joint1.GetPose( dT )).Translation;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
   
 
    ////  Move  ////   
 
    public override Vector3 Move( Vector3 TargetdV ){   
 
        var Mem = new Vector3( TargetdV.X, TargetdV.Y, TargetdV.Z );   
 
        Matrix Orient;   
 
        Vector3 Vec3;   
 
        try{   
 
            Orient = this.Joint1.GetPose( 0 );   
 
            Vec3 = (this.Link.GetPose(0)*Orient).Translation;   
 
   
 
            if ( DEBUG ) MyEcho( "ATdV="+TargetdV.ToString("0.0") );   
 
   
 
            Matrix TargetdVMat = Matrix.CreateTranslation( TargetdV );   
 
   
 
   
 
            // move the Link   
 
            TargetdV = this.Link.Move( ( TargetdVMat*Matrix.Invert(Orient) ).Translation );   
 
            TargetdV = (Matrix.CreateTranslation( TargetdV )*Orient).Translation;   
 
   
 
   
 
            //TargetdV -= this.GetDeltaVector( )/d;   
 
            Vector2 RTargetdV = RelativePlane( TargetdV*d, this.Axis );   
 
            if ( DEBUG ) MyEcho( "ARTdV=("+(RTargetdV.X/d).ToString("0.0")+", "+(RTargetdV.Y/d).ToString("0.0") );   
 
   
 
   
 
            //Get the current position   
 
            Vector2 Vec = RelativePlane( Vec3, this.Axis );   
 
   
 
   
 
            if ( SQ( Vec.X )+SQ( Vec.Y )  &gt; 0.1F ){   
 
   
 
                //Find the needed rotation to get to the RTargetdV   
 
                Single A = (Single)Math.Atan2( Vec.Y, Vec.X );   
 
                Single dA = AngleProxy( A, (Single)Math.Atan2( Vec.Y+RTargetdV.Y, Vec.X+RTargetdV.X ) );   
 
   
 
                //Apply the correct velocities to Joints   
 
                this.Joint1.SetRotationSpeed( dA/d );   
 
   
 
            } else {   
 
                this.Joint1.SetRotationSpeed( 0 );   
 
            }   
 
   
 
            if ( this.Joint2 != null ){   
 
                if ( this.ShareJoint2 ) {   
 
                    this.Joint2.AddRotationSpeed( -this.Joint1.Get_Velocity() );   
 
                } else {   
 
                    this.Joint2.SetRotationSpeed( -this.Joint1.Get_Velocity() );   
 
                }   
 
            }   
 
   
 
        }   
 
        catch( Exception ){   
 
            MyEcho( "Execution error in 'ArmPart'" );   
 
        }   
 
   
 
   
 
        return Mem-this.GetDeltaVector( )/d;   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
   
 
   
 
   
 
    // CONSTRUCTORS:   
 
   
 
    ////  Constructor ////   
 
    public ArmPart(   
 
                                    String     Axis = "Y",   
 
                                    Joint       Joint1 = null,   
 
                                    Part        Link = null,   
 
                                    Joint       Joint2 = null,   
 
                                    bool        ShareJoint2 = false   
 
                                ){   
 
   
 
   
 
        this.Axis = Axis;   
 
        this.U =    AxisToU( Axis );   
 
        this.Joint1 = Joint1;   
 
        this.Joint1.U = this.U;   
 
        this.Joint1.Axis = this.Axis;   
 
        this.Link = Link;   
 
        this.Joint2 = Joint2;   
 
        if ( this.Joint2 != null ){   
 
            this.Joint2.U = this.U;   
 
            this.Joint2.Axis = this.Axis;   
 
            this.ShareJoint2 = ShareJoint2;   
 
        }   
 
   
 
    }   
 
    //// ----------------------------- ////   
 
   
 
   
 
   
 
}   
 
//////// ----------------------------------------------------- ////////   
 
   
 
  
             
           
</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="15" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="15" z="28" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="0" y="15" z="27" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="15" z="26" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="15" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="15" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="15" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RemoteControl">
              <SubtypeName>SmallBlockRemoteControl</SubtypeName>
              <EntityId>134809250655922913</EntityId>
              <Min x="1" y="16" z="23" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>ADriverRC</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>IncreasePower</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>WH</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>DecreasePower</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>WH</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>IncreaseFriction</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>WH</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>DecreaseFriction</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>WH</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>IncreaseSpeed Limit</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>WH</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>DecreaseSpeed Limit</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>WH</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>IncreaseStrength</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>WH</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>7</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>DecreaseStrength</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>WH</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>8</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>HandBrake</Action>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>9</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>121078403986178892</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>10</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>135215859001486927</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>11</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>106423252184474097</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>12</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>102001633772276021</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>13</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>128094499541524201</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>14</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>127683033931705197</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>15</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>cams</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>16</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>77282074576838537</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>17</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Reverse</Action>
                      <BlockEntityId>139790424989858249</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>18</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>DGSwitch</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>19</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>DriverTswitch</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>20</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemWeapon">
                      <DefinitionId Type="MyObjectBuilder_SmallMissileLauncher" Subtype="" />
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>21</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>82500237894190083</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>22</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>23</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>117164751787721412</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>24</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>117164751787721412</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>25</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>86173741901259915</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>26</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>141660041004804603</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>27</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetMissiles</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>28</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetSmallShips</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>29</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetLargeShips</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>30</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetStations</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>31</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetCharacters</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>32</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetNeutrals</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>33</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>GY</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>34</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Override</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>GY</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>35</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>134809250655922913</BlockEntityId>
                      <GroupName>Redlights</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>36</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Recharge</Action>
                      <BlockEntityId>105442813718612794</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>37</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>SemiAuto</Action>
                      <BlockEntityId>105442813718612794</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>38</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>87078162589871980</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>39</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>EnableBroadCast</Action>
                      <BlockEntityId>87078162589871980</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <HorizonIndicatorEnabled>false</HorizonIndicatorEnabled>
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </BuildToolbar>
              <PreviousControlledEntityId xsi:nil="true" />
              <AutoPilotEnabled>true</AutoPilotEnabled>
              <FlightMode>2</FlightMode>
              <BindedCamera>0</BindedCamera>
              <CurrentWaypointIndex>0</CurrentWaypointIndex>
              <Waypoints>
                <MyObjectBuilder_AutopilotWaypoint>
                  <Coords>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                  </Coords>
                  <Name>Player</Name>
                  <Actions />
                  <Indexes />
                </MyObjectBuilder_AutopilotWaypoint>
              </Waypoints>
              <Direction>0</Direction>
              <DockingModeEnabled>false</DockingModeEnabled>
              <CollisionAvoidance>false</CollisionAvoidance>
              <Coords />
              <Names />
              <WaypointThresholdDistance>0</WaypointThresholdDistance>
              <IsMainRemoteControl>false</IsMainRemoteControl>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="15" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>93548772380981476</EntityId>
              <Min x="-1" y="16" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>TBMain</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>RunWithDefaultArgument</Action>
                      <BlockEntityId>110204644591605313</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>RunWithDefaultArgument</Action>
                      <BlockEntityId>120031970399359242</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>RunWithDefaultArgument</Action>
                      <BlockEntityId>120063691719553838</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>RunWithDefaultArgument</Action>
                      <BlockEntityId>79607290366139136</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>RunWithDefaultArgument</Action>
                      <BlockEntityId>95723850970509876</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value />
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>125573163972926590</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>RunWithDefaultArgument</Action>
                      <BlockEntityId>77282074576838537</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>7</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Start</Action>
                      <BlockEntityId>93548772380981476</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>8</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>93548772380981476</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <JustTriggered>true</JustTriggered>
              <Delay>1100</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="15" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="15" z="28" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="15" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="15" z="28" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="15" z="26" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>SmallBlockBatteryBlock</SubtypeName>
              <EntityId>105442813718612794</EntityId>
              <Min x="-1" y="16" z="18" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Battery</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>1.08</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>true</OnlyDischargeEnabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="16" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3mirrored</SubtypeName>
              <EntityId>95498099872128872</EntityId>
              <Min x="2" y="15" z="26" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelL3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>137551092529758861</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="15" z="27" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="28" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-5" y="17" z="16" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="15" z="26" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="15" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3mirrored</SubtypeName>
              <EntityId>82950336953769068</EntityId>
              <Min x="2" y="15" z="29" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelL2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>130062896149199036</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3mirrored</SubtypeName>
              <EntityId>115293637871892469</EntityId>
              <Min x="2" y="15" z="17" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelL6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>135929737721163487</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>72451216032610739</EntityId>
              <Min x="-3" y="15" z="23" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelR4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>139752160770565177</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-4" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>126380570286662963</EntityId>
              <Min x="0" y="15" z="17" />
              <ColorMaskHSV x="0.572222233" y="0.15" z="-0.25" />
              <CustomName>Atmospheric Thrusters</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="15" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3mirrored</SubtypeName>
              <EntityId>113948345872495427</EntityId>
              <Min x="2" y="15" z="23" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelL4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>76152069192391830</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-2" y="15" z="27" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="17" z="16" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="16" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="16" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="-2" y="15" z="33" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="17" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="26" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-4" y="17" z="16" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="28" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="17" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="16" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="5" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="17" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="17" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="16" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="17" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="16" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="16" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="16" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="26" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="16" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="16" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="16" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="15" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="15" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="15" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="15" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="15" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="15" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="15" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallBlockSmallAtmosphericThrust</SubtypeName>
              <EntityId>77420218526302581</EntityId>
              <Min x="0" y="15" z="31" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.572222233" y="0.15" z="-0.25" />
              <CustomName>Atmospheric Thrusters 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="15" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="15" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="15" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="15" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="15" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="15" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="15" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="15" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="15" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="27" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="15" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RemoteControl">
              <SubtypeName>SmallBlockRemoteControl</SubtypeName>
              <EntityId>97773494818884925</EntityId>
              <Min x="0" y="16" z="32" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.572222233" y="0.15" z="-0.25" />
              <CustomName>Remote Control 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <ControlWheels>false</ControlWheels>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </BuildToolbar>
              <PreviousControlledEntityId xsi:nil="true" />
              <AutoPilotEnabled>false</AutoPilotEnabled>
              <FlightMode>2</FlightMode>
              <BindedCamera>0</BindedCamera>
              <CurrentWaypointIndex>-1</CurrentWaypointIndex>
              <Waypoints />
              <Direction>0</Direction>
              <DockingModeEnabled>false</DockingModeEnabled>
              <CollisionAvoidance>false</CollisionAvoidance>
              <Coords />
              <Names />
              <AutopilotSpeedLimit>20.28037</AutopilotSpeedLimit>
              <WaypointThresholdDistance>0</WaypointThresholdDistance>
              <IsMainRemoteControl>true</IsMainRemoteControl>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="26" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="16" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="16" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="16" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="15" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="5" y="17" z="16" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="27" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="26" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="15" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="16" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="16" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="27" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="28" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="27" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="28" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="16" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="16" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="16" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="16" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="16" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="16" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="16" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="16" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="27" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="28" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="16" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="16" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="16" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="16" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="16" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="2" y="15" z="33" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="15" z="33" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="-1" y="15" z="33" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="1" y="15" z="33" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="3" y="15" z="33" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="17" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="16" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="16" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-3" y="16" z="16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="17" z="16" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="17" z="16" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="17" z="16" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="16" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>110204644591605313</EntityId>
              <Min x="1" y="16" z="29" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>PBautoTcontrol</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>/* 
/// Whip's Turret Slaver v49 /// - revision: 11/17/17  
-------------------------------------------------------------------------------- 
================README================== 
-------------------------------------------------------------------------------- 
It is recommended that you read all the instructions before attempting  
to use this code! This will make troubleshooting any issues much easier &lt;3 
 
---------------------------------------------------------------- 
/// Script Setup /// 
---------------------------------------------------------------- 
    1) Place this script in a program block 
    2) Make a timer with the following actions: 
        - "Start" itself 
        - "Trigger Now itself 
        - "Run with default argument" this program 
    3) Start the timer 
    4) Set up turret groups (see below sections) 
 
    DON'T FORGET TO SET YOUR ROTOR LIMITS! 
 
    (Optional): You can adjust the variables at the top of the code 
    if you dislike my default settings. I've found these values to 
    be sufficient for vanilla weapons :) 
 
---------------------------------------------------------------- 
/// Turret Group Names /// 
---------------------------------------------------------------- 
    Turret groups must be named like the following: 
 
        "Turret Group &lt;ID&gt;" 
 
    Where &lt;ID&gt; is the unique identification tag of the turret. 
 
    Example Turret Group Names: 
        - Turret Group 1 
        - Turret Group WhiplashIsAwesome 
        - Turret Group SamIsACow 
        - Turret Group 1A 
 
---------------------------------------------------------------- 
/// Turret Group Components /// 
---------------------------------------------------------------- 
    EACH turret group must have: 
    - One designator turret with "Designator" in its name 
    - One azimuthal (horizontal) rotor with "Azimuth" in its name 
    - One or Two elevation (vertical) rotor(s) with "Elevation" in its name 
    - At least one weapon ot tool (any name you desire) 
        can be a rocket launcher, gatling gun, camera, welder, grinder, or spotlight  
 
    (Names dont matter beyond what is required) 
 
---------------------------------------------------------------- 
/// Code Arguments (Optional) /// 
---------------------------------------------------------------- 
    Run the program ONCE with the following arguments if you desire 
 
    reset_targeting : Resets targeting of all non-designator turrets 
 
 
---------------------------------------------------------------- 
/// Whip's Notes /// 
---------------------------------------------------------------- 
Post any questions, suggestions, or issues you have on the workshop page :D 
 
Code by Whiplash141 
*/ 
 
//============================================================= 
//You can change these variables if you really want to. 
//You do not need to if you just want to use the vanilla script. 
//============================================================= 
 
//Base name tag of turret groups 
const string rotorTurretGroupNameTag = "Turret Group"; 
const string aiTurretGroupNameTag = "Slaved Group"; 
 
//These are the required block name tags in a turret group 
const string elevationRotorName = "Elevation"; //name of elevation (vertical) rotor for specific turret 
const string azimuthRotorName = "Azimuth"; //name of azimuth (horizontal) rotor for specific turret 
const string designatorName = "Designator"; //name of the designator turret for specific group 
 
//Angle that the turret will fire on if target is within this angle from the front of it 
const double toleranceAngle = 5; 
 
//Velocity of the projectiles that this code will fire 
const double defaultProjectileSpeed = 400;  
 
//Controls the speed of rotation; you probably shouldn't touch this 
const double rotationSpeedScalingFactor = 50; 
 
//this is the distance that the turret will focus on IFF manually controlling the turret 
double convergenceRange = 400; 
 
//////////////////////////////////////////////////// 
//================================================= 
//No touchey anything below here 
//================================================= 
//////////////////////////////////////////////////// 
 
double timeElapsed = 0; 
double timeSinceLastRun = 0; 
 
IMyMotorStator elevationRotor; 
List&lt;IMyMotorStator&gt; additionalElevationRotors = new List&lt;IMyMotorStator&gt;(); 
IMyMotorStator azimuthRotor; 
IMyLargeTurretBase designator; 
List&lt;IMyTerminalBlock&gt; allWeaponsAndTools = new List&lt;IMyTerminalBlock&gt;(); 
List&lt;IMyTerminalBlock&gt; primaryWeaponsAndTools = new List&lt;IMyTerminalBlock&gt;(); 
List&lt;IMyTerminalBlock&gt; additionalWeaponsAndTools = new List&lt;IMyTerminalBlock&gt;(); 
List&lt;IMyTerminalBlock&gt; slavedTurrets = new List&lt;IMyTerminalBlock&gt;(); 
 
const double rad2deg = 180 / Math.PI; 
 
const double updatesPerSecond = 10; 
const double timeMax = 1 / updatesPerSecond; 
double toleranceDotProduct = Math.Cos(toleranceAngle * Math.PI / 180); 
 
string[] targetStatus = new string[] { "targeting", "idle" }; 
 
Vector3D lastGridPosition = Vector3D.Zero; 
Vector3D gridVelocity = Vector3D.Zero; 
 
Program() 
{ 
    Runtime.UpdateFrequency = UpdateFrequency.Update1; 
} 
 
void Main(string arg, UpdateType updateType) 
{ 
    switch (arg.ToLower()) 
    { 
        case "reset_targeting": 
            ResetTurretTargeting(); 
            break; 
 
        default: 
            break; 
    } 
 
    if ((updateType &amp; UpdateType.Update1) != 0) 
    { 
        timeSinceLastRun = 1.0 / 60.0; 
        timeElapsed += timeSinceLastRun; 
 
        var currentGridPosition = Me.CubeGrid.GetPosition(); 
        gridVelocity = (currentGridPosition - lastGridPosition) * 60.0; 
        lastGridPosition = currentGridPosition; 
    } 
 
    //convergenceRange = WeaponSweep(); //run weapon sweeep method 
 
    if (timeElapsed &gt;= timeMax) 
    { 
        Echo("WMI Turret Control\nSystems Online... " + RunningSymbol()); 
 
        List&lt;IMyBlockGroup&gt; groups = new List&lt;IMyBlockGroup&gt;(); 
        List&lt;IMyBlockGroup&gt; rotorTurretGroups = new List&lt;IMyBlockGroup&gt;(); 
        List&lt;IMyBlockGroup&gt; aiTurretGroups = new List&lt;IMyBlockGroup&gt;(); 
 
        GridTerminalSystem.GetBlockGroups(groups); 
 
        foreach (IMyBlockGroup thisGroup in groups) 
        { 
            if (thisGroup.Name.ToLower().Contains(aiTurretGroupNameTag.ToLower())) 
            { 
                aiTurretGroups.Add(thisGroup); 
            } 
            else if (thisGroup.Name.ToLower().Contains(rotorTurretGroupNameTag.ToLower())) 
            { 
                rotorTurretGroups.Add(thisGroup); 
            } 
        } 
 
        if (rotorTurretGroups.Count == 0 &amp;&amp; aiTurretGroups.Count == 0) 
        { 
            Echo("\nRotor Turret List:"); 
            Echo("No rotor turret groups found"); 
            Echo("\nAI Turret Group List:"); 
            Echo("No AI turret groups found"); 
            return; 
        } 
 
        //Ai turret group handling 
        #region ai_turrets 
        Echo("\nAI Turret Group List:"); 
        if (aiTurretGroups.Count == 0) 
        { 
            Echo("No AI turret groups found"); 
        } 
 
        foreach (IMyBlockGroup thisGroup in aiTurretGroups) 
        { 
            Echo($"------------------------\nGroup: '{thisGroup.Name}'"); 
            var blockList = new List&lt;IMyTerminalBlock&gt;(); 
            thisGroup.GetBlocks(blockList); 
            bool isSetup = GrabBlocksAI(blockList); 
 
            if (!isSetup) 
            { 
                ShootWeapons(slavedTurrets, false); //force shooting off 
                continue; 
            } 
            //implied else 
 
            //guide on target 
            if (designator.IsUnderControl || designator.HasTarget) 
            { 
                SlavedTurretControl(); 
                Echo($"Turret is {targetStatus[0]}"); 
            } 
            else 
            { 
                ShootWeapons(slavedTurrets, false); //force shooting off 
                Echo($"Turret is {targetStatus[1]}"); 
            } 
        } 
        #endregion 
 
        //Rotor turret group handling 
        #region rotor_turrets 
        Echo("\nRotor Turret List:"); 
        if (rotorTurretGroups.Count == 0) 
        { 
            Echo("No rotor turret groups found"); 
        } 
 
        foreach (IMyBlockGroup thisGroup in rotorTurretGroups) 
        { 
            Echo($"------------------------\nGroup: '{thisGroup.Name}'"); 
 
            bool setupError = GrabBlocks(thisGroup); 
 
            if (setupError) 
            { 
                StopRotorMovement(); 
                continue; 
            } 
            //implied else 
 
            //guide on target 
            if (designator.IsUnderControl || designator.HasTarget) 
            { 
                RotorControl(thisGroup); 
                Echo($"Turret is {targetStatus[0]}"); 
            } 
            else 
            { 
                StopRotorMovement(); 
                ShootWeapons(allWeaponsAndTools, false); 
                ReturnToEquillibrium(); 
                Echo($"Turret is {targetStatus[1]}"); 
            } 
        } 
        #endregion 
 
        //reset time count 
        timeElapsed = 0; 
        rotorTurretGroups.Clear(); 
    } 
} 
 
void ResetTurretTargeting() 
{ 
    var allTurrets = new List&lt;IMyLargeTurretBase&gt;(); 
    GridTerminalSystem.GetBlocksOfType(allTurrets); 
    foreach (IMyLargeTurretBase thisTurret in allTurrets) 
    { 
        thisTurret.ResetTargetingToDefault(); 
        thisTurret.ApplyAction("Shoot_Off"); 
        thisTurret.EnableIdleRotation = true; 
        thisTurret.SetValue("Range", float.MaxValue); 
    } 
} 
 
Vector3D GetAverageWeaponPosition(List&lt;IMyTerminalBlock&gt; weapons) 
{ 
    Vector3D positionSum = Vector3D.Zero; 
 
    if (weapons.Count == 0) 
        return positionSum; 
 
    foreach (var block in weapons) 
    { 
        positionSum += block.GetPosition(); 
    } 
 
    return positionSum / weapons.Count; 
} 
 
Vector3D GetTargetPoint(Vector3D shooterPosition, IMyLargeTurretBase designator, double projectileVelocity = defaultProjectileSpeed) 
{ 
    //get designator position 
    Vector3D designatorPos = designator.GetPosition(); 
 
    //get vector where designator is pointing 
    double designatorAzimuth = designator.Azimuth; 
    double designatorElevation = designator.Elevation; 
 
    Vector3D targetVec = Vector3D.Zero; 
    if (designator.IsUnderControl) 
    { 
        targetVec = designatorPos + VectorAzimuthElevation(designator) * convergenceRange; 
    } 
    else if (designator.HasTarget) //if designator has target 
    { 
        var targetInfo = designator.GetTargetedEntity(); 
        targetVec = CalculateProjectileIntercept(projectileVelocity, gridVelocity, shooterPosition, targetInfo.Velocity, targetInfo.Position); 
    } 
 
    return targetVec; 
} 
 
// Whip's CalculateProjectileIntercept method v2 - 8/2/17 // 
Vector3D CalculateProjectileIntercept(double projectileSpeed, Vector3D shooterVelocity, Vector3D shooterPosition, Vector3D targetVelocity, Vector3D targetPos) 
{ 
    var directHeading = targetPos - shooterPosition; 
    var directHeadingNorm = Vector3D.Normalize(directHeading); 
 
    var relativeVelocity = targetVelocity - shooterVelocity; 
 
    var parallelVelocity = relativeVelocity.Dot(directHeadingNorm) * directHeadingNorm; 
    var normalVelocity = relativeVelocity - parallelVelocity; 
 
    var diff = projectileSpeed * projectileSpeed - normalVelocity.LengthSquared(); 
    if (diff &lt; 0) 
    { 
        return targetPos; 
    } 
 
    return Math.Sqrt(diff) * directHeadingNorm + normalVelocity + shooterPosition; 
} 
 
double GetProjectileVelocity(IMyTerminalBlock block) 
{ 
    if (block is IMyLargeGatlingTurret || block is IMySmallGatlingGun) 
        return 400; 
    else if (block is IMyLargeInteriorTurret) 
        return 300; 
    else if (block is IMyLargeMissileTurret || block is IMySmallMissileLauncher) 
        return 200; 
    else 
        return defaultProjectileSpeed; 
} 
 
bool GrabBlocks(IMyBlockGroup thisGroup) 
{ 
    var blocks = new List&lt;IMyTerminalBlock&gt;(); 
    thisGroup.GetBlocks(blocks); 
 
    elevationRotor = null; 
    additionalElevationRotors.Clear(); 
    azimuthRotor = null; 
    designator = null; 
    allWeaponsAndTools.Clear(); 
    primaryWeaponsAndTools.Clear(); 
    additionalWeaponsAndTools.Clear(); 
 
    foreach (IMyTerminalBlock thisBlock in blocks) 
    { 
        if (IsWeaponOrTool(thisBlock)) 
            allWeaponsAndTools.Add(thisBlock); 
 
        if (thisBlock is IMyMotorStator) 
        { 
            if (thisBlock.CustomName.ToLower().Contains(elevationRotorName.ToLower())) 
            { 
                if (elevationRotor == null) //grabs parent elevation rotor first 
                { 
                    var thisRotor = thisBlock as IMyMotorStator; 
 
                    if (thisRotor.IsAttached &amp;&amp; thisRotor.IsFunctional) //checks if elevation rotor is attached 
                    { 
                        thisGroup.GetBlocks(primaryWeaponsAndTools, block =&gt; block.CubeGrid == thisRotor.TopGrid &amp;&amp; IsWeaponOrTool(block)); 
                    } 
                    if (primaryWeaponsAndTools.Count != 0) 
                        elevationRotor = thisRotor; 
                    else 
                        additionalElevationRotors.Add(thisRotor); 
                } 
                else //then grabs any other elevation rotors it finds 
                    additionalElevationRotors.Add(thisBlock as IMyMotorStator); 
            } 
            else if (thisBlock.CustomName.ToLower().Contains(azimuthRotorName.ToLower())) 
            { 
                azimuthRotor = thisBlock as IMyMotorStator; 
            } 
        } 
        else if (thisBlock is IMyLargeTurretBase &amp;&amp; thisBlock.CustomName.ToLower().Contains(designatorName.ToLower())) //grabs ship controller 
        { 
            designator = thisBlock as IMyLargeTurretBase; 
        } 
    } 
 
    if (elevationRotor != null &amp;&amp; elevationRotor.IsAttached) //grabs weapons on elevation turret's rotor head grid 
    { 
        thisGroup.GetBlocks(primaryWeaponsAndTools, block =&gt; block.CubeGrid == elevationRotor.TopGrid &amp;&amp; IsWeaponOrTool(block)); 
    } 
 
    bool noErrors = true; 
    if (designator == null &amp;&amp; azimuthRotor != null) //first null check for designator 
    { 
        //grabs closest designator to the turret base 
        designator = GetClosestTargetingTurret(designatorName, azimuthRotor); 
    } 
 
    if (designator == null) //second null check (if STILL null) 
    { 
        Echo($"Error: No designator turret found for group '{thisGroup.Name}'"); 
        noErrors = false; 
    } 
 
    if (primaryWeaponsAndTools.Count == 0) 
    { 
        Echo("Error: No weapons or tools"); 
        noErrors = false; 
    } 
 
    if (azimuthRotor == null) 
    { 
        Echo("Error: No azimuth rotor"); 
        noErrors = false; 
    } 
 
    if (elevationRotor == null) 
    { 
        Echo("Error: No elevation rotor"); 
        noErrors = false; 
    } 
     
    var num = elevationRotor == null ? 0 : 1; 
    Echo($"Elevation rotors: {additionalElevationRotors.Count + num}"); 
 
    return !noErrors; 
} 
 
bool IsWeaponOrTool(IMyTerminalBlock block) 
{ 
    if (block is IMyUserControllableGun &amp;&amp; !(block is IMyLargeTurretBase)) 
    { 
        return true; 
    } 
    else if (block is IMyShipToolBase) 
    { 
        return true; 
    } 
    else if (block is IMyLightingBlock) 
    { 
        return true; 
    } 
    else if (block is IMyCameraBlock) 
    { 
        return true; 
    } 
    else 
    { 
        return false; 
    } 
} 
 
void RotorControl(IMyBlockGroup thisGroup) 
{ 
    //get orientation of reference 
    IMyTerminalBlock turretReference = primaryWeaponsAndTools[0]; 
 
    Vector3D turretFrontVec = turretReference.WorldMatrix.Forward; 
    Vector3D absUpVec = azimuthRotor.WorldMatrix.Up; 
    Vector3D turretSideVec = elevationRotor.WorldMatrix.Up; 
    Vector3D turretFrontCrossSide = turretFrontVec.Cross(turretSideVec); 
 
    //check elevation rotor orientation w.r.t. reference 
    Vector3D turretUpVec; 
    Vector3D turretLeftVec; 
    if (absUpVec.Dot(turretFrontCrossSide) &gt;= 0) 
    { 
        turretUpVec = turretFrontCrossSide; 
        turretLeftVec = turretSideVec; 
    } 
    else 
    { 
        turretUpVec = -1 * turretFrontCrossSide; 
        turretLeftVec = -1 * turretSideVec; 
    } 
 
    var shooterPosition = GetAverageWeaponPosition(allWeaponsAndTools); 
    var targetPointVec = GetTargetPoint(shooterPosition, designator, GetProjectileVelocity(allWeaponsAndTools[0])); 
 
    //get vector to target point 
    Vector3D referenceToTargetVec = targetPointVec - shooterPosition; 
 
    var baseUp = absUpVec; 
    var baseLeft = baseUp.Cross(turretFrontVec); 
    var baseForward = baseLeft.Cross(baseUp); 
 
    double desiredAzimuthAngle, desiredElevationAngle, currentAzimuthAngle, currentElevationAngle, azimuthAngle, elevationAngle; 
 
    GetRotationAngles(referenceToTargetVec, baseForward, baseLeft, baseUp, out desiredAzimuthAngle, out desiredElevationAngle); 
    GetRotationAngles(turretFrontVec, baseForward, baseLeft, baseUp, out currentAzimuthAngle, out currentElevationAngle); 
 
    azimuthAngle = desiredAzimuthAngle - currentAzimuthAngle; 
    elevationAngle = desiredElevationAngle - currentElevationAngle; 
 
    if (absUpVec.Dot(turretFrontCrossSide) &gt;= 0) 
    { 
        elevationAngle *= -1; 
    } 
 
    double azimuthSpeed = rotationSpeedScalingFactor * azimuthAngle; //derivitave term is useless as rotors dampen by default 
    double elevationSpeed = rotationSpeedScalingFactor * elevationAngle; 
 
    //control rotors  
    azimuthRotor.SetValue("Velocity", -(float)azimuthSpeed); //negative because we want to cancel the positive angle via our movements 
    elevationRotor.SetValue("Velocity", -(float)elevationSpeed); 
 
    //calculate deviation angle 
    double deviationAngle = VectorAngleBetween(turretFrontVec, referenceToTargetVec); 
    WeaponControl(deviationAngle, designator, primaryWeaponsAndTools); 
 
    //Check opposite elevation rotor 
    if (additionalElevationRotors.Count != 0) 
    { 
        foreach (var additionalElevationRotor in additionalElevationRotors) //Determine how to move opposite elevation rotor (if any) 
        { 
            if (!additionalElevationRotor.IsAttached) //checks if opposite elevation rotor is attached 
            { 
                Echo($"Warning: No rotor head for additional elevation\nrotor named '{additionalElevationRotor.CustomName}'\nSkipping this rotor..."); 
                continue; 
            } 
 
            thisGroup.GetBlocks(additionalWeaponsAndTools, block =&gt; block.CubeGrid == additionalElevationRotor.TopGrid &amp;&amp; IsWeaponOrTool(block)); 
 
            if (additionalWeaponsAndTools.Count == 0) 
            { 
                Echo($"Warning: No weapons or tools for additional elevation\nrotor named '{additionalElevationRotor.CustomName}'\nSkipping this rotor..."); 
                continue; 
            } 
 
            var oppositeFrontVec = additionalWeaponsAndTools[0].WorldMatrix.Forward; 
 
            float multiplier = Math.Sign(additionalElevationRotor.WorldMatrix.Up.Dot(elevationRotor.WorldMatrix.Up)); 
 
            var diff = (float)VectorAngleBetween(oppositeFrontVec, turretFrontVec) * Math.Sign(oppositeFrontVec.Dot(turretFrontCrossSide)) * 100; 
            additionalElevationRotor.SetValue("Velocity", (float)elevationSpeed + diff); 
 
            WeaponControl(deviationAngle, designator, additionalWeaponsAndTools); //use same deviation angle b/c im assuming that it will be close 
        } 
    } 
} 
 
bool GrabBlocksAI(List&lt;IMyTerminalBlock&gt; blocks) 
{ 
    designator = null; 
    slavedTurrets.Clear(); 
 
    foreach (IMyTerminalBlock thisBlock in blocks) 
    { 
        if (thisBlock is IMyLargeTurretBase) 
        { 
            if (thisBlock.CustomName.Contains(designatorName)) 
            { 
                designator = thisBlock as IMyLargeTurretBase; //grabs designator turret 
            } 
            else 
            { 
                var turret = thisBlock as IMyLargeTurretBase; 
                turret.SetValue("Range", 1f); 
 
                if (turret.EnableIdleRotation) 
                    turret.EnableIdleRotation = false; 
 
                slavedTurrets.Add(turret); 
            } 
        } 
    } 
 
    bool setupError = false; 
    if (slavedTurrets.Count == 0) 
    { 
        Echo($"Error: No slaved AI turrets found"); 
        setupError = true; 
    } 
 
    if (designator == null &amp;&amp; slavedTurrets.Count &gt; 0) //first null check 
    { 
        //grabs closest designator to the slaved turret group 
        designator = GetClosestTargetingTurret(designatorName, slavedTurrets[0]); 
    } 
 
    if (designator == null) //second null check (If STILL null) 
    { 
        Echo($"Error: No designator turret found"); 
        setupError = true; 
    } 
 
    return !setupError; 
} 
 
void SlavedTurretControl() 
{ 
    //control AI turrets (if any) 
    //aim all slaved turrets at target point 
    foreach (IMyLargeTurretBase thisTurret in slavedTurrets) 
    { 
        var targetPointVec = GetTargetPoint(thisTurret.GetPosition(), designator, GetProjectileVelocity(thisTurret)); 
         
        //This shit broke yo 
        thisTurret.SetTarget(targetPointVec); 
        var turretMatrix = thisTurret.WorldMatrix; 
        Vector3D turretDirection = VectorAzimuthElevation(thisTurret); 
        var normalizedTargetDirection = Vector3D.Normalize(targetPointVec - turretMatrix.Translation); 
         
        /* 
        double azimuth = 0; double elevation = 0; 
        GetRotationAngles(normalizedTargetDirection, turretMatrix.Forward, turretMatrix.Left, turretMatrix.Up, out azimuth, out elevation); 
        thisTurret.Azimuth = (float)azimuth; 
        thisTurret.Elevation = (float)elevation; 
        SyncTurretAngles(thisTurret); 
        */ 
         
 
        if (turretDirection.Dot(normalizedTargetDirection) &gt;= toleranceDotProduct) 
        { 
            if (designator.IsShooting || (designator.HasTarget &amp;&amp; !designator.IsUnderControl)) 
            { 
                thisTurret.ApplyAction("Shoot_On"); 
                thisTurret.ApplyAction("ShootOnce"); //Had to add this or the guns wont shoot... 
            } 
            else 
                thisTurret.ApplyAction("Shoot_Off"); 
        } 
        else 
        { 
            thisTurret.ApplyAction("Shoot_Off"); 
        } 
    } 
} 
 
void ReturnToEquillibrium() 
{ 
    if (azimuthRotor != null &amp;&amp; azimuthRotor.LowerLimitRad &gt; -MathHelper.TwoPi &amp;&amp; azimuthRotor.UpperLimitRad &lt; MathHelper.TwoPi) 
    { 
        double avgAzimuth = (azimuthRotor.LowerLimitRad + azimuthRotor.UpperLimitRad) / 2; 
        double azimuthVelocity = (avgAzimuth - azimuthRotor.Angle) * rotationSpeedScalingFactor / 10; 
        azimuthRotor.TargetVelocityRPM = (float)azimuthVelocity; 
    } 
    else if (azimuthRotor != null) 
    { 
        azimuthRotor.TargetVelocityRPM = 0f; 
    } 
 
    if (elevationRotor != null &amp;&amp; elevationRotor.LowerLimitRad &gt; -MathHelper.TwoPi &amp;&amp; elevationRotor.UpperLimitRad &lt; MathHelper.TwoPi) 
    { 
        double avgElevation = (elevationRotor.LowerLimitRad + elevationRotor.UpperLimitRad) / 2; 
        double elevationVelocity = (avgElevation - elevationRotor.Angle) * rotationSpeedScalingFactor / 10; 
        elevationRotor.TargetVelocityRPM = (float)elevationVelocity; 
    } 
    else if (elevationRotor != null) 
    { 
        elevationRotor.TargetVelocityRPM = 0f; 
    } 
 
    double avgOppositeElevation; 
    double additionalElevationVelocity; 
 
    foreach (var additionalElevationRotor in additionalElevationRotors) 
    { 
        if (additionalElevationRotor.LowerLimitRad &gt; -MathHelper.TwoPi &amp;&amp; additionalElevationRotor.UpperLimitRad &lt; MathHelper.TwoPi) 
        { 
            avgOppositeElevation = (additionalElevationRotor.LowerLimitRad + additionalElevationRotor.UpperLimitRad) / 2; 
            additionalElevationVelocity = (avgOppositeElevation - additionalElevationRotor.Angle) * rotationSpeedScalingFactor / 10; 
            additionalElevationRotor.TargetVelocityRPM = (float)additionalElevationVelocity; 
        } 
        else 
        { 
            additionalElevationRotor.TargetVelocityRPM = 0f; 
        } 
    } 
} 
 
void SyncTurretAngles(IMyLargeTurretBase turret) 
{ 
    turret.SyncAzimuth(); 
    turret.SyncElevation(); 
    turret.SyncEnableIdleRotation(); 
} 
 
void WeaponControl(double deviation, IMyLargeTurretBase designator, List&lt;IMyTerminalBlock&gt; weaponsAndTools) 
{ 
    if (designator.IsUnderControl &amp;&amp; designator.IsShooting) 
        ShootWeapons(weaponsAndTools, true); 
    else if (deviation * rad2deg &lt; toleranceAngle &amp;&amp; designator.HasTarget) //fires if in tolerance angle 
        ShootWeapons(weaponsAndTools, true); 
    else //doesnt fire if not in tolerance angle or designator isnt controlled 
        ShootWeapons(weaponsAndTools, false); 
} 
 
void ShootWeapons(List&lt;IMyTerminalBlock&gt; weaponList, bool shouldFire) 
{ 
    if (shouldFire) 
    { 
        for (int i = 0; i &lt; weaponList.Count; i++) 
        { 
            var weaponToShoot = weaponList[i] as IMyUserControllableGun; 
 
            weaponToShoot?.ApplyAction("Shoot_On"); 
            weaponToShoot?.ApplyAction("ShootOnce"); 
        } 
    } 
    else 
    { 
        for (int i = 0; i &lt; weaponList.Count; i++) 
        { 
            var weaponToShoot = weaponList[i] as IMyUserControllableGun; 
 
            weaponToShoot?.ApplyAction("Shoot_Off"); 
        } 
    } 
} 
 
void StopRotorMovement() 
{ 
    azimuthRotor?.SetValue("Velocity", 0f); 
    elevationRotor?.SetValue("Velocity", 0f); 
 
    foreach (var additionalElevationRotor in additionalElevationRotors) 
    { 
        additionalElevationRotor.TargetVelocityRPM = 0f; 
    } 
 
    for (int i = 0; i &lt; allWeaponsAndTools.Count; i++) 
    { 
        var thisWeapon = allWeaponsAndTools[0] as IMyUserControllableGun; 
        thisWeapon?.ApplyAction("Shoot_Off"); 
    } 
} 
 
//Whip's Vector from Elevation and Azimuth 
Vector3D VectorAzimuthElevation(IMyLargeTurretBase designator) 
{ 
    double el = designator.Elevation; 
    double az = designator.Azimuth; 
 
    //CreateFromAzimuthAndElevation(az, el, out localTargetVector) 
 
    el = el % (2 * Math.PI); 
    az = az % (2 * Math.PI); 
 
    if (az != Math.Abs(az)) 
    { 
        az = 2 * Math.PI + az; 
    } 
 
    int x_mult = 1; 
 
    if (az &gt; Math.PI / 2 &amp;&amp; az &lt; Math.PI) 
    { 
        az = Math.PI - (az % Math.PI); 
        x_mult = -1; 
    } 
    else if (az &gt; Math.PI &amp;&amp; az &lt; Math.PI * 3 / 2) 
    { 
        az = 2 * Math.PI - (az % Math.PI); 
        x_mult = -1; 
    } 
 
    double x; double y; double z; 
 
    if (el == Math.PI / 2) 
    { 
        x = 0; 
        y = 0; 
        z = 1; 
    } 
    else if (az == Math.PI / 2) 
    { 
        x = 0; 
        y = 1; 
        z = y * Math.Tan(el); 
    } 
    else 
    { 
        x = 1 * x_mult; 
        y = Math.Tan(az); 
        double v_xy = Math.Sqrt(1 + y * y); 
        z = v_xy * Math.Tan(el); 
    } 
 
    var worldMatrix = designator.WorldMatrix; 
    return Vector3D.Normalize(worldMatrix.Forward * x + worldMatrix.Left * y + worldMatrix.Up * z); 
    //return new Vector3D(x, y, z); 
} 
 
//Whip's Get Rotation Angles Method v6 - 8/28/17 
//Modified yaw sign 
void GetRotationAngles(Vector3D v_target, Vector3D v_front, Vector3D v_left, Vector3D v_up, out double yaw, out double pitch) 
{ 
    //Dependencies: VectorProjection() | VectorAngleBetween() 
    var projectTargetUp = VectorProjection(v_target, v_up); 
    var projTargetFrontLeft = v_target - projectTargetUp; 
 
    yaw = VectorAngleBetween(v_front, projTargetFrontLeft); 
    pitch = VectorAngleBetween(v_target, projTargetFrontLeft); 
 
    //---Make sure our pitch does not exceed 90 degrees 
    if (pitch &gt; MathHelper.PiOver2) 
    { 
        pitch -= MathHelper.PiOver2; 
    } 
 
    //---Check if yaw angle is left or right   
    yaw = Math.Sign(v_left.Dot(v_target)) * yaw; 
 
    //---Check if pitch angle is up or down     
    pitch = Math.Sign(v_up.Dot(v_target)) * pitch; 
 
    //---Check if target vector is pointing opposite the front vector 
    if (Math.Abs(yaw) &lt;= 1E-6 &amp;&amp; v_target.Dot(v_front) &lt; 0) 
    { 
        yaw = Math.PI; 
    } 
} 
 
Vector3D VectorProjection(Vector3D a, Vector3D b) 
{ 
    if (Vector3D.IsZero(b)) 
        return Vector3D.Zero; 
 
    return a.Dot(b) / b.LengthSquared() * b; 
} 
 
double VectorAngleBetween(Vector3D a, Vector3D b) //returns radians  
{ 
    if (Vector3D.IsZero(a) || Vector3D.IsZero(b)) 
        return 0; 
    else 
        return Math.Acos(MathHelper.Clamp(a.Dot(b) / Math.Sqrt(a.LengthSquared() * b.LengthSquared()), -1, 1)); 
} 
 
//Whip's Get Closest Targeted Turret v1 - 6/12/17 
IMyLargeTurretBase GetClosestTargetingTurret(string name, IMyTerminalBlock reference = null) 
{ 
    var allBlocks = new List&lt;IMyLargeTurretBase&gt;(); 
 
    if (name == "") 
        GridTerminalSystem.GetBlocksOfType(allBlocks); 
    else 
        GridTerminalSystem.GetBlocksOfType(allBlocks, block =&gt; block.CustomName.Contains(name)); 
 
    if (allBlocks.Count == 0) 
    { 
        return null; 
    } 
 
    //Sort guns automatically by name 
    //allBlocks.Sort((block1, block2) =&gt; block1.CustomName.CompareTo(block2.CustomName)); 
 
    var closestBlock = allBlocks[0]; 
 
    if (reference == null) 
        reference = Me; 
 
    var shortestDistance = Vector3D.DistanceSquared(reference.GetPosition(), closestBlock.GetPosition()); 
    allBlocks.Remove(closestBlock); //remove this block from the list 
 
    foreach (var thisBlock in allBlocks) 
    { 
        var thisDistance = Vector3D.DistanceSquared(reference.GetPosition(), thisBlock.GetPosition()); 
 
        if (thisDistance + 0.01 &lt; shortestDistance &amp;&amp; (thisBlock.HasTarget || thisBlock.IsUnderControl)) 
        { 
            closestBlock = thisBlock; 
            shortestDistance = thisDistance; 
        } 
        //otherwise move to next one 
    } 
 
    return closestBlock; 
} 
 
//Whip's Running Symbol Method v6 
int runningSymbolVariant = 0; 
string RunningSymbol() 
{ 
    runningSymbolVariant++; 
    string strRunningSymbol = ""; 
 
    if (runningSymbolVariant == 0) 
        strRunningSymbol = "|"; 
    else if (runningSymbolVariant == 1) 
        strRunningSymbol = "/"; 
    else if (runningSymbolVariant == 2) 
        strRunningSymbol = "--"; 
    else if (runningSymbolVariant == 3) 
    { 
        strRunningSymbol = "\\"; 
        runningSymbolVariant = 0; 
    } 
 
    return strRunningSymbol; 
} 
 
/* 
Changelog: 
- Clamped values to account for floating point errors - v31 
- Fixed syntax error - v32 
- Added AI turret slaving support - v33 
- Redesigned targeting parameters - v33 
- Added rotor turret equillibrium function - v34 
- Cleaned, simplified, and removed some functions - v35 
- Redesigned turret sweeping function - v35 
- Reverted back to old turret sweeping function XD - v35 
- Added in support for AI turret groups - v35 
- Workaround for turret angle setting bug -DONE - v37-1 
- Grabs Weapons/Tools based on grid id of rotor head - v37-3 
- Works with 2 elevation rotors per turret group - v39 
- Tweaked get rotation angle method - v39 
- Fixed broke ass WorldMatricies. Thanks keen... - v40 
- Optimized position getting by adding GetWorldPosition() method - v41 
- Changed GetClosestBlock method to GetClosestTargetingTurret - v42 
- Fixed turrets spinning when idle when no rotor limits were set - v43 
- Adjusted range computation for GetClosestTargetingTurret to avoid musical turrets - v44 
- Removed useage of GetWorldMatrix and GetWorldPosition since the bug that necessitated their use is gone - v45 
- Removed lots of unused math and methods - v45 
- Added support for infinite numbers of elevation rotors - v46 
- Turrets will only fire automatically when designator has line of sight - v47 
- Decreased equillibrium turn speed for safety reasons - v47 
- Designators can now rotate idly if the user so desires - v47 
- Replaced GetVectorAzimuthElevation with GetRotationAngles - v48 
- Added in a bunch of goodies from the ModAPI update - v49 
 
To-do list: 
- Finish argument accept display readout 
*/</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="4" y="17" z="15" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="16" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="16" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="16" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="16" z="29" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="16" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="17" z="15" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="17" z="15" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="16" z="29" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="2" y="17" z="15" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="16" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="16" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>93250598186539384</EntityId>
              <Min x="2" y="16" z="22" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Gyroscope</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="15" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="15" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="27" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="15" z="28" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="26" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>113336968124137743</EntityId>
              <Min x="-3" y="15" z="26" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelR3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>111025716150198935</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3mirrored</SubtypeName>
              <EntityId>96785282459244832</EntityId>
              <Min x="2" y="15" z="20" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelL5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>118011178110708289</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3mirrored</SubtypeName>
              <EntityId>72292995914746677</EntityId>
              <Min x="2" y="15" z="32" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelL1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>101443466443323195</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="4" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="27" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="26" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="5" y="17" z="28" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="4" y="17" z="16" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-5" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="17" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="17" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="17" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="17" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="4" y="16" z="34" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="17" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="17" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="17" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="17" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="5" y="16" z="34" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="17" z="15" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="16" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="16" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="16" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="17" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="16" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="16" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="17" z="17" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="16" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallBlockCorner_LCD_1</SubtypeName>
              <EntityId>122353459921668558</EntityId>
              <Min x="2" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>LCDHorizon</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Monospace" />
              <FontSize>0.3</FontSize>
              <PublicDescription>


























































</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>PUBLIC</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>121078403986178892</EntityId>
              <Min x="2" y="17" z="31" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>CamDriver</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="15" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="15" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="1" y="15" z="27" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="15" z="28" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="15" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="15" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="15" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>80224590147271210</EntityId>
              <Min x="-3" y="15" z="32" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelR1</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>80717562395944254</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="15" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="15" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>139260523112882712</EntityId>
              <Min x="-3" y="15" z="20" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelR5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>97056737902774529</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="15" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="15" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="2" y="15" z="27" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="15" z="28" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="28" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="15" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="15" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>125832351385848216</EntityId>
              <Min x="-3" y="15" z="29" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelR2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>132125737046560601</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorSuspension">
              <SubtypeName>SmallSuspension3x3</SubtypeName>
              <EntityId>107936096993305259</EntityId>
              <Min x="-3" y="15" z="17" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>WheelR6</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>125357807702843595</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <SteerAngle>0</SteerAngle>
              <Steering>false</Steering>
              <Damping>0.810442567</Damping>
              <Strength>1</Strength>
              <Propulsion>false</Propulsion>
              <Friction>0.2325111</Friction>
              <Power>0</Power>
              <Height>-0.32</Height>
              <MaxSteerAngle>0</MaxSteerAngle>
              <SteerSpeed>0</SteerSpeed>
              <SteerReturnSpeed>0</SteerReturnSpeed>
              <InvertSteer>false</InvertSteer>
              <InvertPropulsion>false</InvertPropulsion>
              <SuspensionTravel>1</SuspensionTravel>
              <SpeedLimit>250.092712</SpeedLimit>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-4" y="17" z="31" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="27" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="4" y="17" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="22" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="21" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="23" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="22" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="20" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="21" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="24" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="23" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="22" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="20" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="21" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="25" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="24" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="23" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="17" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <EntityId>102949649503500429</EntityId>
              <Min x="-6" y="16" z="16" />
              <IntegrityPercent>0.45</IntegrityPercent>
              <BuildPercent>0.45</BuildPercent>
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="20" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="26" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="25" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="24" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="18" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <EntityId>86281327004952866</EntityId>
              <Min x="-6" y="16" z="17" />
              <IntegrityPercent>0.499999881</IntegrityPercent>
              <BuildPercent>0.499999881</BuildPercent>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <EntityId>87653162329421556</EntityId>
              <Min x="-6" y="17" z="16" />
              <IntegrityPercent>0.45</IntegrityPercent>
              <BuildPercent>0.45</BuildPercent>
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="27" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="26" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="25" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="19" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <EntityId>140933303356174729</EntityId>
              <Min x="-6" y="16" z="18" />
              <IntegrityPercent>0.499999881</IntegrityPercent>
              <BuildPercent>0.499999881</BuildPercent>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <EntityId>135016726937528593</EntityId>
              <Min x="-6" y="17" z="17" />
              <IntegrityPercent>0.45</IntegrityPercent>
              <BuildPercent>0.45</BuildPercent>
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="28" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="27" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="26" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <EntityId>72507934878051572</EntityId>
              <Min x="-6" y="16" z="19" />
              <IntegrityPercent>0.499999881</IntegrityPercent>
              <BuildPercent>0.499999881</BuildPercent>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <EntityId>96696853102942701</EntityId>
              <Min x="-6" y="17" z="18" />
              <IntegrityPercent>0.45</IntegrityPercent>
              <BuildPercent>0.45</BuildPercent>
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="29" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="28" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="27" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <EntityId>141213782924740353</EntityId>
              <Min x="-6" y="17" z="19" />
              <IntegrityPercent>0.45</IntegrityPercent>
              <BuildPercent>0.45</BuildPercent>
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="30" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="29" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="28" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-6" y="17" z="31" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="30" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="29" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="31" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="30" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="32" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="15" z="31" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="-6" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="-6" y="15" z="32" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <EntityId>115619898966008884</EntityId>
              <Min x="6" y="17" z="17" />
              <IntegrityPercent>0.45</IntegrityPercent>
              <BuildPercent>0.45</BuildPercent>
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <EntityId>111201974984059862</EntityId>
              <Min x="6" y="17" z="18" />
              <IntegrityPercent>0.4</IntegrityPercent>
              <BuildPercent>0.4</BuildPercent>
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <EntityId>123399949811273263</EntityId>
              <Min x="6" y="16" z="17" />
              <IntegrityPercent>0.499999881</IntegrityPercent>
              <BuildPercent>0.499999881</BuildPercent>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <EntityId>124947460797609106</EntityId>
              <Min x="6" y="17" z="19" />
              <IntegrityPercent>0.45</IntegrityPercent>
              <BuildPercent>0.45</BuildPercent>
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <EntityId>113579296436542903</EntityId>
              <Min x="6" y="16" z="18" />
              <IntegrityPercent>0.291666567</IntegrityPercent>
              <BuildPercent>0.291666567</BuildPercent>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="17" />
              <IntegrityPercent>0.880996764</IntegrityPercent>
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <EntityId>110600188635500991</EntityId>
              <Min x="6" y="16" z="19" />
              <IntegrityPercent>0.499999881</IntegrityPercent>
              <BuildPercent>0.499999881</BuildPercent>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="20" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="18" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="19" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="20" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="21" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="20" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="21" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="22" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="21" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="22" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="23" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="22" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="23" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="24" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="23" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="24" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="25" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="24" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="25" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="26" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="25" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="26" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="27" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="26" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="27" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="28" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="27" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="28" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="29" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="28" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="29" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="30" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="29" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="30" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="30" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="6" y="15" z="32" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="31" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="15" z="31" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="32" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="6" y="17" z="32" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="6" y="17" z="31" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="3" y="15" z="34" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <EntityId>132354695234105019</EntityId>
              <Min x="3" y="16" z="34" />
              <IntegrityPercent>0.1200001</IntegrityPercent>
              <BuildPercent>0.1200001</BuildPercent>
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="5" y="17" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="4" y="17" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="3" y="17" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>88632001613810989</EntityId>
              <Min x="3" y="16" z="33" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Headlight</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Radius>10</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <Falloff>1</Falloff>
              <Intensity>3</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>84682329333890160</EntityId>
              <Min x="-3" y="16" z="33" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Headlight</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Radius>10</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <Falloff>1</Falloff>
              <Intensity>3</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-3" y="15" z="34" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <EntityId>89397660267488186</EntityId>
              <Min x="-3" y="16" z="34" />
              <IntegrityPercent>0.1200001</IntegrityPercent>
              <BuildPercent>0.1200001</BuildPercent>
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-4" y="16" z="34" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-5" y="16" z="34" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="17" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-4" y="17" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-5" y="17" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="6" y="16" z="33" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="6" y="17" z="33" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="-6" y="17" z="33" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="33" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-6" y="16" z="34" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="6" y="16" z="34" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-1" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="17" z="32" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="17" z="30" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="17" z="15" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-2" y="17" z="15" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="-3" y="17" z="15" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-5" y="17" z="15" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>120063691719553838</EntityId>
              <Min x="0" y="16" z="29" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key xmlns:q1="http://microsoft.com/wsdl/types/" xsi:type="q1:guid">74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value xsi:type="xsd:string" />
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>NPC</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>//Pirate Drone Script (Encounter)  
//By Rexxar 
 
//################################## 
//modify these 
private const double WEAPON_ENGAGE_DIST = 300;          //fire static weapons when player gets this close 
private const double WEAPON_DISENGAGE_DIST = 400;       //disable static weapons after this distance 
private const bool USE_STATIC_GUNS = true;              //use static weapons? 
private const int WEAPON_ANGLE_LIMIT = 30;              //activate weapons if player is within this many degrees in front of drone 
private const double PATROL_RADIUS = 10000;             //engage any player inside a sphere with this radius 
private const double BREAKAWAY_DISTANCE = 1000;         //stop chasing a player outside the patrol sphere if they get this far away from drone 
//################################## 
 
 
private List&lt;IMyUserControllableGun&gt; _guns; 
private Vector3D _origin; 
private List&lt;IMyRemoteControl&gt; _controllers; 
private IMyRemoteControl _currentControl; 
private double _weaponAngle; 
private bool _shooting; 
 
Program() 
{ 
    _guns = new List&lt;IMyUserControllableGun&gt;(); 
    _controllers = new List&lt;IMyRemoteControl&gt;(); 
    GridTerminalSystem.GetBlocksOfType(_guns); 
    GridTerminalSystem.GetBlocksOfType(_controllers); 
    _currentControl = _controllers.FirstOrDefault(c =&gt; c.IsFunctional); 
 
    if (_currentControl == null) 
        return; 
 
    if (string.IsNullOrEmpty(Storage)) 
    { 
        if (!Vector3D.TryParse(Storage, out _origin)) 
            _origin = _currentControl.GetPosition(); 
    } 
    else 
    { 
        _origin = _currentControl.GetPosition(); 
        Storage = _origin.ToString(); 
    } 
 
    _weaponAngle = Math.Cos(MathHelperD.ToRadians(WEAPON_ANGLE_LIMIT)); 
} 
 
void Main() 
{ 
 
    //check if current RC is damaged, look for a replacement 
    if (_currentControl == null || !_currentControl.IsFunctional) 
    { 
        _currentControl = _controllers.FirstOrDefault(c =&gt; c.IsFunctional); 
    } 
 
    if (_currentControl == null) 
        return; //no controls left :( 
 
 
    //Check Player Distance From Origin  
    _currentControl.ClearWaypoints(); 
    Vector3D currentPos = _currentControl.GetPosition(); 
    Vector3D closestPlayer; 
    _currentControl.GetNearestPlayer(out closestPlayer); 
    double playerDistanceOrigin = Vector3D.DistanceSquared(closestPlayer, _origin); 
    double playerDistanceDrone = Vector3D.DistanceSquared(currentPos, closestPlayer); 
    if (playerDistanceDrone &lt; BREAKAWAY_DISTANCE * BREAKAWAY_DISTANCE || playerDistanceOrigin &lt; PATROL_RADIUS * PATROL_RADIUS) 
    { 
        //Chase Player  
        _currentControl.AddWaypoint(closestPlayer, "Player"); 
 
        //update guns 
        if (USE_STATIC_GUNS) 
        { 
            if (playerDistanceDrone &lt;= WEAPON_ENGAGE_DIST * WEAPON_ENGAGE_DIST) 
            { 
                Vector3D playerDir = closestPlayer - currentPos; 
                playerDir.Normalize(); 
                double dot = Vector3D.Dot(_currentControl.WorldMatrix.Forward, playerDir); 
                //check if player is inside our target cone 
                if (dot &gt; _weaponAngle) 
                { 
                    StartShooting(); 
                    _shooting = true; 
                } 
                else 
                { 
                    StopShooting(); 
                    _shooting = false; 
                } 
            } 
            else if (playerDistanceDrone &gt; WEAPON_DISENGAGE_DIST * WEAPON_DISENGAGE_DIST &amp;&amp; _shooting) 
            { 
                StopShooting(); 
                _shooting = false; 
            } 
        } 
    } 
    else 
    { 
        //Go To Origin  
        _currentControl.AddWaypoint(_origin, "Origin"); 
        if (_shooting &amp;&amp; USE_STATIC_GUNS) 
        { 
            _shooting = false; 
            StopShooting(); 
        } 
    } 
 
    _currentControl.SetAutoPilotEnabled(true); 
 
} 
 
void StopShooting() 
{ 
    foreach (var gun in _guns) 
        gun.SetValueBool("Shoot", false); 
} 
 
void StartShooting() 
{ 
    foreach (var gun in _guns) 
    { 
        bool shoot = gun.Orientation.Forward == _currentControl.Orientation.Forward; 
        gun.SetValueBool("Shoot", shoot); 
    } 
} 
</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="17" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="26" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-2" y="17" z="25" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="28" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="3" y="17" z="27" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="17" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="0" y="17" z="25" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="-1" y="17" z="25" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="26" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallBlockCorner_LCD_1</SubtypeName>
              <EntityId>98754966314646828</EntityId>
              <Min x="1" y="17" z="26" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>LCDHorizon</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Monospace" />
              <FontSize>0.3</FontSize>
              <PublicDescription>


























































</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>PUBLIC</ShowText>
              <FontColor>
                <PackedValue>4278255468</PackedValue>
                <X>108</X>
                <Y>255</Y>
                <Z>0</Z>
                <R>108</R>
                <G>255</G>
                <B>0</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallBlockCorner_LCD_1</SubtypeName>
              <EntityId>132179540373087110</EntityId>
              <Min x="-1" y="17" z="26" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key xmlns:q1="http://microsoft.com/wsdl/types/" xsi:type="q1:guid">74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value xsi:type="xsd:string">DateTime dddd, dd MMMM yyyy HH:mm 
Power 
Echo 
Damage 
Echo 
Working Designator 
Echo 
Inventory Cargo +ammo -ore -ingot 
Echo 
PosXYZ 
Echo</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>LCD inv[LCD]</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>0.198</FontSize>
              <PublicDescription> Tuesday, 12 December 2017 10:39 
 Batteries:                                                                                                                                                                                                                                                                                                                         (IN 0W / OUT 43.2 kW)
   Stored:                                                                                                                                                                                                                                                                                                                                   1.1 MWh / 1.1 MWh
 [|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||] 100.0%
   Output:                                                                                                                                                                                                                                                                                                                                  43.2 kW / 4.3 MW
 [||||''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''']     1.0%
   Input:                                                                                                                                                                                                                                                                                                                                             0W / 4.3 MW
 [''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''']    0.0%
 
 No damaged blocks found.
 
 TurretD "Designator"                                                                                                                                                                                                                                                                                                                                         ON
 
                                                                                                                                                                      &lt;&lt; Ammo summary &gt;&gt;
 ['''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''] 5.56x45mm                                                                                                                                                                                                                         0 / 8 k
 ['''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''] 25x184mm                                                                                                                                                                                                                           0 / 2.5 k
 ['''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''] 200mm Missile                                                                                                                                                                                                                   0 / 1.6 k
 
 Location: 
  X:                                                                                                                                                                                                                                                                                                                                                                   6421
  Y:                                                                                                                                                                                                                                                                                                                                                                 6092
  Z:                                                                                                                                                                                                                                                                                                                                                                  3058
 
</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>PUBLIC</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="0" y="17" z="26" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="1" y="17" z="27" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="0" y="17" z="27" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-1" y="17" z="27" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="1" y="17" z="28" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="0" y="17" z="28" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-1" y="17" z="28" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="17" z="25" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="3" y="17" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="27" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="28" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="2" y="17" z="28" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="2" y="17" z="27" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="2" y="17" z="26" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="2" y="17" z="25" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorStator">
              <SubtypeName>SmallStator</SubtypeName>
              <EntityId>130121958295324311</EntityId>
              <Min x="0" y="17" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Motor1 "Azimuth"</CustomName>
              <ShowOnHUD>true</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>79391582501346434</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <TargetVelocity>0</TargetVelocity>
              <MinAngle xsi:nil="true" />
              <MaxAngle xsi:nil="true" />
              <CurrentAngle>4.622704</CurrentAngle>
              <LimitsActive>false</LimitsActive>
              <DummyDisplacement>0.065</DummyDisplacement>
              <RotorLock>false</RotorLock>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="17" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="17" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="17" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="17" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="29" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="28" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="-3" y="17" z="27" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="26" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-3" y="17" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="17" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="24" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="16" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>130846169408358159</EntityId>
              <Min x="-2" y="16" z="22" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Gyroscope </CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>78167958072341405</EntityId>
              <Min x="-2" y="16" z="21" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Gyroscope</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallTextPanel</SubtypeName>
              <EntityId>101595904866263502</EntityId>
              <Min x="-2" y="16" z="20" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>LCDradar</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
              <FontSize>0.4</FontSize>
              <PublicDescription>No Targets Detected.
__x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_____________x_______________x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_x_x_x_x_x_x___________________x_____________________x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_x_x_x_x_______________________x_________________________x_x_x_x_x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_x_x___________________________x_____________________________x_x_x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_x_____________________________x_______________________________x_x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_______________________________x_________________________________x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_________________________________x___________________________________x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x___________________________________x_____________________________________x_x_x_x_x_x_x_
x_x_x_x_x_x_____________________________________x_______________________________________x_x_x_x_x_x_
x_x_x_x_x_______________________________________x_________________________________________x_x_x_x_x_
x_x_x_x_________________________________________x___________________________________________x_x_x_x_
x_x_x_x_________________________________________x___________________________________________x_x_x_x_
x_x_x___________________________________________x_____________________________________________x_x_x_
x_x_x___________________________________________x_____________________________________________x_x_x_
x_x_____________________________________________x_______________________________________________x_x_
x_x_____________________________________________x_______________________________________________x_x_
x_x_____________________________________________x_______________________________________________x_x_
x_______________________________________________x_________________________________________________x_
x_______________________________________________x_________________________________________________x_
x_______________________________________________x_________________________________________________x_
x_______________________________________________x_________________________________________________x_
x_______________________________________________x_________________________________________________x_
x_______________________________________________x_________________________________________________x_
x_______________________________________________x_________________________________________________x_
x_________________________________________________x_______________________________________________x_
x_________________________________________________________________________________________________x_
x_______________________x_________________________________________________________________________x_
x_________________________________________________________________________________________________x_
x_________________________________________________________________________________________________x_
x_________________________________________________________________________________________________x_
x___________________________________________x_____________________________________________________x_
x_x_____________________________________________________________________________________________x_x_
x_x_____________________________________________________________________________________________x_x_
x_x_____________________________________________________________________________________________x_x_
x_x_x___________________x_____________________________________________________________________x_x_x_
x_x_x_________________________________________________________________________________________x_x_x_
x_x_x_x_____________________________________________________________________________________x_x_x_x_
x_x_x_x_____________________________________________________________________________________x_x_x_x_
x_x_x_x_x_________________________________________________________________________________x_x_x_x_x_
x_x_x_x_x_x_____________________________________________________________________________x_x_x_x_x_x_
x_x_x_x_x_x_x_________________________________________________________________________x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_____________________________________________________________________x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_________________________________________________________________x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_x_____________________________________________________________x_x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_x_x_________________________________________________________x_x_x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_x_x_x_x_________________________________________________x_x_x_x_x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_________________________________________x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_____________________________x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_
x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_x_
</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>PUBLIC</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>127683033931705197</EntityId>
              <Min x="-2" y="16" z="19" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Camradar2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="16" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="23" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="17" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>91793497092005039</EntityId>
              <Min x="2" y="16" z="21" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Gyroscope</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="17" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="17" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="16" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="16" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="16" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="17" z="18" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="17" z="19" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="17" z="20" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>125573163972926590</EntityId>
              <Min x="-1" y="16" z="22" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>PBinventory</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>/* v:2.0004 (Update for game v01.172) Fixed LCD linking, LCD_TAG can be set in Custom Data of PB, updated deprecated API stuff
* In-game script by MMaster
*
* Last Update:
*  LCD_TAG can be set in Custom Data of Programmable Block (read more in guide section 'What is LCD_TAG?')
*  Fixed LCD linking
*  Updated deprecated API stuff
*  Fix for LCD showing help text when booting
*
* MAJOR UPDATE:
* Complete rework of script core
*  - automatically updates as many LCDs as possible as fast as possible!
*  - can be used on ships of any size!
*  - never throws "Script too complex" exception!
*  - works optimally with timer block set to Trigger Now
*
* New features (check Full Guide for detailed instructions):
* All commands are now read line by line from Custom Data of LCD panel (LCD Title commands are no longer supported)
* Text command removed, use TextLCD command to display text from other LCD or combination of Echo, Center and Right commands
* Ability to add margin on left and right using "!MARGIN:&lt;number of spaces&gt;" (without quotes) in name of LCD
* Ability to scroll LCDs manually using scrollDown and scrollUp Programmable Block Run arguments
* "!NOSCROLL" in name of LCD disables automatic scrolling
* Easy config for monospace fonts (just set the USE_MONOSPACE value below)
* LCDs now automatically have margin of 1 space (you can override it with "!MARGIN:0" (without quotes))
* PowerUsed &amp; PowerUsedTop command to display blocks power input stats
* Altitude &amp; AltitudeSea command to display altitude above ground &amp; sea
* Gravity command and its variants to display gravitational acceleration
* ShipMass &amp; ShipMassBase command to display total/base ship mass
* StopDistance &amp; StopTime to show estimated distance &amp; time to completely stop ship
* SpeedKmh &amp; SpeedMph to show speed in km per hour or miles per hour
* Distance command to show distance of specified block from specified GPS position
* DamageC command to show only blocks in construction
* Rework to use new more efficient ways to get power
* Details command now works even with modded blocks like Nanite Factory by Tyrsis
* Details command can now start output on line where the user specified text is found
* TanksX variant to show only percentage without progress bar
* Tanks and Oxygen commands universal Hydrogen &amp; Oxygen detection for all tanks (even modded ones)
* Speed and Accel commands progress bar support
* Added config options for LCDs with exotic texture sizing (below)
* Moved items definitions higher in the script for easier access
* Right command which prints text aligned to right
* Lots of optimizations
*
* Disabled for now:
* Tanks exact values &amp; TanksX, TanksP, TanksV variants (waiting for game support)
*
* Previous updates: Look at Change notes tab on Steam workshop page.
*
* Customize these: */

// Use this tag to identify LCDs managed by this script
// Name filtering rules can be used here so you can use even G:Group or T:[My LCD]
public string LCD_TAG = "T:[LCD]";

// How many lines to scroll per step
public const int SCROLL_LINES_PER_STEP = 1;

// if you want to use monospace (on all LCDs) change this to true
public bool USE_MONOSPACE = false;

// Enable initial boot sequence (after compile / world load)
public const bool ENABLE_BOOT = true;

/* READ THIS FULL GUIDE
http://steamcommunity.com/sharedfiles/filedetails/?id=407158161

Basic video guide
Please watch the video guide even if you don't understand my English. You can see how things are done there.

https://youtu.be/vqpPQ_20Xso


Read Change Notes (above screenshots) for latest updates and new features.
I notify about updates on twitter so follow if interested.

Please carefully read the FULL GUIDE before asking questions I had to remove guide from here to add more features :(
Please DO NOT publish this script or its derivations without my permission! Feel free to use it in blueprints!

Special Thanks
Keen Software House for awesome Space Engineers game
Malware for contributing to programmable blocks game code
Textor and CyberVic for their great script related contributions on Keen forums.

Watch Twitter: https://twitter.com/MattsPlayCorner
and Facebook: https://www.facebook.com/MattsPlayCorner1080p
for more crazy stuff from me in the future :)
*/
// Force redraw of panels? (default = false)
// true - forces redraw of panels
public const bool FORCE_REDRAW = false;

// (for developer) Enable debug
public const bool EnableDebug = false;

// (for modded lcds) Affects all LCDs managed by this programmable block
/* LCD height modifier
0.5f makes the LCD have only 1/2 the lines of normal LCD
2.0f makes it fit 2x more lines on LCD */
public const float HEIGHT_MOD = 1.0f;

/* line width modifier
0.5f moves the right edge to 50% of normal LCD width
2.0f makes it fit 200% more text on line */
public const float WIDTH_MOD = 1.0f;

// If you use custom monospace font set this to width of single character
public const float MONOSPACE_WIDTH = 24f;

List&lt;string&gt; BOOT_FRAMES = new List&lt;string&gt;() {
/* BOOT FRAMES
* Each @"&lt;text&gt;" marks single frame, add as many as you want each will be displayed for one second
* @"" is multiline string so you can write multiple lines */
@"
Initializing systems"
,
@"
Verifying connections"
,
@"
Loading commands"
};

void ItemsConf()
{
// ITEMS AND QUOTAS LIST
// (subType, mainType, quota, display name, short name)
// VANILLA ITEMS
Add("Stone", "Ore");
Add("Iron", "Ore");
Add("Nickel", "Ore");
Add("Cobalt", "Ore");
Add("Magnesium", "Ore");
Add("Silicon", "Ore");
Add("Silver", "Ore");
Add("Gold", "Ore");
Add("Platinum", "Ore");
Add("Uranium", "Ore");
Add("Ice", "Ore");
Add("Stone", "Ingot", 40000, "Gravel", "gravel");
Add("Iron", "Ingot", 300000);
Add("Nickel", "Ingot", 900000);
Add("Cobalt", "Ingot", 120000);
Add("Magnesium", "Ingot", 80000);
Add("Silicon", "Ingot", 80000);
Add("Silver", "Ingot", 800000);
Add("Gold", "Ingot", 80000);
Add("Platinum", "Ingot", 45000);
Add("Uranium", "Ingot", 12000);
Add("Scrap", "Ingot");
Add("AutomaticRifleItem", "Tool", 0, "Automatic Rifle");
Add("PreciseAutomaticRifleItem", "Tool", 0, "* Precise Rifle");
Add("RapidFireAutomaticRifleItem", "Tool", 0, "** Rapid-Fire Rifle");
Add("UltimateAutomaticRifleItem", "Tool", 0, "*** Elite Rifle");
Add("WelderItem", "Tool", 0, "Welder");
Add("Welder2Item", "Tool", 0, "* Enh. Welder");
Add("Welder3Item", "Tool", 0, "** Prof. Welder");
Add("Welder4Item", "Tool", 0, "*** Elite Welder");
Add("AngleGrinderItem", "Tool", 0, "Angle Grinder");
Add("AngleGrinder2Item", "Tool", 0, "* Enh. Grinder");
Add("AngleGrinder3Item", "Tool", 0, "** Prof. Grinder");
Add("AngleGrinder4Item", "Tool", 0, "*** Elite Grinder");
Add("HandDrillItem", "Tool", 0, "Hand Drill");
Add("HandDrill2Item", "Tool", 0, "* Enh. Drill");
Add("HandDrill3Item", "Tool", 0, "** Prof. Drill");
Add("HandDrill4Item", "Tool", 0, "*** Elite Drill");
Add("Construction", "Component", 50000);
Add("MetalGrid", "Component", 15500, "Metal Grid");
Add("InteriorPlate", "Component", 55000, "Interior Plate");
Add("SteelPlate", "Component", 300000, "Steel Plate");
Add("Girder", "Component", 3500);
Add("SmallTube", "Component", 26000, "Small Tube");
Add("LargeTube", "Component", 6000, "Large Tube");
Add("Motor", "Component", 16000);
Add("Display", "Component", 500);
Add("BulletproofGlass", "Component", 12000, "Bulletp. Glass", "bpglass");
Add("Computer", "Component", 6500);
Add("Reactor", "Component", 10000);
Add("Thrust", "Component", 16000, "Thruster", "thruster");
Add("GravityGenerator", "Component", 250, "GravGen", "gravgen");
Add("Medical", "Component", 120);
Add("RadioCommunication", "Component", 250, "Radio-comm", "radio");
Add("Detector", "Component", 400);
Add("Explosives", "Component", 500);
Add("SolarCell", "Component", 2800, "Solar Cell");
Add("PowerCell", "Component", 2800, "Power Cell");
Add("Superconductor", "Component", 3000);
Add("NATO_5p56x45mm", "Ammo", 8000, "5.56x45mm", "5.56x45mm");
Add("NATO_25x184mm", "Ammo", 2500, "25x184mm", "25x184mm");
Add("Missile200mm", "Ammo", 1600, "200mm Missile", "200mmmissile");
Add("OxygenBottle", "OxygenContainerObject", 5, "Oxygen Bottle");
Add("HydrogenBottle", "GasContainerObject", 5, "Hydrogen Bottle");

// MODDED ITEMS
// (subType, mainType, quota, display name, short name, used)
// * if used is true, item will be shown in inventory even for 0 items
// * if used is false, item will be used only for display name and short name
// AzimuthSupercharger
Add("AzimuthSupercharger", "Component", 1600, "Supercharger", "supercharger", false);
// OKI Ammo
Add("OKI23mmAmmo", "Ammo", 500, "23x180mm", "23x180mm", false);
Add("OKI50mmAmmo", "Ammo", 500, "50x450mm", "50x450mm", false);
Add("OKI122mmAmmo", "Ammo", 200, "122x640mm", "122x640mm", false);
Add("OKI230mmAmmo", "Ammo", 100, "230x920mm", "230x920mm", false);

// REALLY REALLY REALLY
// DO NOT MODIFY ANYTHING BELOW THIS (TRANSLATION STRINGS ARE AT THE BOTTOM)
}
void Add(string sT, string mT, int q = 0, string dN = "", string sN = "", bool u = true) { MMItems.Add(sT, mT, q, dN, sN, u); }
 tq
jo;t6 jp;tn jq=null;void jr(string a){}void js(string b,string d){var e=b.ToLower();switch(e){case "lcd_tag":LCD_TAG=d;break;}}
void jt(){string[]f=Me.CustomData.Split('\n');for(int g=0;g&lt;f.Length;g++){var i=f[g];int j=i.IndexOf('=');if(j&lt;0){jr(i);continue;}
var k=i.Substring(0,j).Trim();var l=i.Substring(j+1).Trim();js(k,l);}}void ju(tq n){ItemsConf();jt();if(USE_MONOSPACE)tr.su=
MONOSPACE_WIDTH;jq=new tn(this,EnableDebug,n);jq.qX=LCD_TAG;jq.qY=SCROLL_LINES_PER_STEP;jq.qZ=ENABLE_BOOT;jq.q_=BOOT_FRAMES;jq.r0=
FORCE_REDRAW;jq.r3=HEIGHT_MOD;jq.r2=WIDTH_MOD;}void jv(){jo.sf=this;jq.rb=this;}void Main(string o){if(jo==null){jo=new tq(this,
EnableDebug);ju(jo);jp=new t6(jq);jo.sh(jp,0);}else{jv();jq.rd.pw();}if(o!=""){if(jp.nC(o))return;}jp.nn=0;jo.sk();}class sz:t1 {
public sz(){r_=7;rW="CmdInvList";}float jw=27;float jx=118;public override void Init(){jI=new td(s3,mB.rd);jJ=new th(s3);jx=tr.sw(
" / 888.8 M");jw=tr.sv(' ');}void jy(string q,double r,int u){if(u&gt;0){mB.ru(Math.Min(100,100*r/u),0.3f);mB.Add(' '+q+' ');mB.rq(t8
.nQ(r),1.0f,jx);mB.rm(" / "+t8.nQ(u));}else{mB.Add(q+':');mB.rp(t8.nQ(r),1.0f,jw);}}void jz(string v,double w,double x,int y){if(y
&gt;0){mB.Add(v+' ');mB.rq(t8.nQ(w),0.51f);mB.Add(" / "+t8.nQ(y));mB.rp("+"+t8.nQ(x)+" "+M.T["I1"],1.0f);mB.rt(Math.Min(100,100*w/y))
;}else{mB.Add(v+':');mB.rq(t8.nQ(w),0.51f);mB.rp("+"+t8.nQ(x)+" "+M.T["I1"],1.0f);}}List&lt;ti&gt;jA;int jB=0;int jC=0;bool jD(bool z,
bool A,string B,string C){if(!z){jC=0;jB=0;}if(jC==0){if((jA=jJ.q6(B,z))==null)return false;jC++;z=false;}if(jA.Count&gt;0){if(!A&amp;&amp;!z
){if(mB.rj.rG&gt;0&amp;&amp;mB.rj.rF[0]!="")mB.rm("");mB.rr("&lt;&lt; "+C+" "+M.T["I2"]+" &gt;&gt;");}for(;jB&lt;jA.Count;jB++){if(!s3.sp(30))return false;
double D=jA[jB].qe;if(jN&amp;&amp;D&gt;=jA[jB].q9)continue;int E=jA[jB].qa;if(jN)E=jA[jB].q9;var F=t8.nO(jA[jB].qb,jA[jB].qc);jy(F,D,E);}}
return true;}List&lt;ti&gt;jE;int jF=0;int jG=0;bool jH(bool G){if(!G){jF=0;jG=0;}if(jG==0){if((jE=jJ.q6("Ingot",G))==null)return false;
jG++;G=false;}if(jE.Count&gt;0){if(!jO&amp;&amp;!G){if(mB.rj.rG&gt;0&amp;&amp;mB.rj.rF[0]!="")mB.rm("");mB.rr("&lt;&lt; "+M.T["I4"]+" "+M.T["I2"]+" &gt;&gt;");}for(
;jF&lt;jE.Count;jF++){if(!s3.sp(40))return false;double H=jE[jF].qe;if(jN&amp;&amp;H&gt;=jE[jF].q9)continue;int I=jE[jF].qa;if(jN)I=jE[jF].q9;
var J=t8.nO(jE[jF].qb,jE[jF].qc);if(jE[jF].qb!="Scrap"){double K=jJ.q3(jE[jF].qb+" Ore",jE[jF].qb,"Ore").qe;jz(J,H,K,I);}else jy(J
,H,I);}}return true;}td jI=null;th jJ;List&lt;tb&gt;jK;bool jL,jM,jN,jO;int jP,jQ;void jR(){jI.pp();jL=mA.ol.EndsWith("x")||mA.ol.
EndsWith("xs");jM=mA.ol.EndsWith("s")||mA.ol.EndsWith("sx");jN=mA.ol.StartsWith("missing");jO=mA.ol.StartsWith("invlist");jJ.pZ();
jK=mA.os;if(jK.Count==0)jK.Add(new tb("all"));}bool jS(bool L){if(!L)jP=0;for(;jP&lt;jK.Count;jP++){tb N=jK[jP];N.oC();var O=N.oz.
ToLower();if(!L)jQ=0;else L=false;for(;jQ&lt;N.oB.Count;jQ++){if(!s3.sp(30))return false;string[]P=N.oB[jQ].ToLower().Split(':');
double Q;if(P[0]=="all")P[0]="";int R=1;int S=-1;if(P.Length&gt;1){if(Double.TryParse(P[1],out Q)){if(jN)R=(int)Math.Ceiling(Q);else 
S=(int)Math.Ceiling(Q);}}var U=P[0];if(O!="")U+=' '+O;jJ.p_(U,(N.oy=="-"),R,S);}}return true;}int jT=0;int jU=0;int jV=0;bool jW(
bool V){td W=jI;if(!V)jT=0;for(;jT&lt;W.pq();jT++){if(!V)jU=0;for(;jU&lt;W.p5[jT].InventoryCount;jU++){if(!V)jV=0;else V=false;
IMyInventory X=W.p5[jT].GetInventory(jU);List&lt;IMyInventoryItem&gt;Y=X.GetItems();for(;jV&lt;Y.Count;jV++){if(!s3.sp(40))return false;
IMyInventoryItem Z=Y[jV];var _=t8.nM(Z);var a0=_.ToLower();string a1,a2;t8.nN(a0,out a1,out a2);if(a2=="ore"){if(jJ.q1(a1.ToLower(
)+" ingot",a1,"Ingot")&amp;&amp;jJ.q1(_,a1,a2))continue;}else{if(jJ.q1(_,a1,a2))continue;}t8.nN(_,out a1,out a2);ti a3=jJ.q3(a0,a1,a2);a3.
qe+=(double)Z.Amount;}}}return true;}int jX=0;public override bool RunCmd(bool a4){if(!a4){jR();jX=0;}for(;jX&lt;=9;jX++){switch(jX){
case 0:if(!jI.pf(mA.om,a4))return false;break;case 1:if(!jS(a4))return false;if(!jL){if(!jJ.q8(a4))return false;}break;case 2:if(!
jW(a4))return false;break;case 3:if(!jD(a4,jO,"Ore",M.T["I3"]))return false;break;case 4:if(jM){if(!jD(a4,jO,"Ingot",M.T["I4"]))
return false;}else{if(!jH(a4))return false;}break;case 5:if(!jD(a4,jO,"Component",M.T["I5"]))return false;break;case 6:if(!jD(a4,
jO,"OxygenContainerObject",M.T["I6"]))return false;break;case 7:if(!jD(a4,true,"GasContainerObject",""))return false;break;case 8:
if(!jD(a4,jO,"AmmoMagazine",M.T["I7"]))return false;break;case 9:if(!jD(a4,jO,"PhysicalGunObject",M.T["I8"]))return false;break;}
a4=false;}return true;}}class sA:t1 {td jY;public sA(){r_=2;rW="CmdCargo";}public override void Init(){jY=new td(s3,mB.rd);}bool
jZ=true;bool j_=false;bool k0=false;double k1=0;double k2=0;int k3=0;public override bool RunCmd(bool a5){if(!a5){jY.pp();jZ=mA.ol
.Contains("all");j_=(mA.ol[mA.ol.Length-1]=='x');k0=(mA.ol[mA.ol.Length-1]=='p');k1=0;k2=0;k3=0;}if(k3==0){if(jZ){if(!jY.pf(mA.om,
a5))return false;}else{if(!jY.pn("cargocontainer",mA.om,a5))return false;}k3++;a5=false;}double a6=jY.p7(ref k1,ref k2,a5);if(
Double.IsNaN(a6))return false;mB.Add(M.T["C2"]+" ");if(!j_&amp;&amp;!k0){mB.rp(t8.nQ(k1)+"L / "+t8.nQ(k2)+"L");mB.ru(a6,1.0f,mB.r4);mB.rm(
' '+t8.nR(a6)+"%");}else if(k0){mB.rp(t8.nR(a6)+"%");mB.rt(a6);}else mB.rp(t8.nR(a6)+"%");return true;}}class sB:t1 {td k4;public
sB(){r_=2;rW="CmdMass";}public override void Init(){k4=new td(s3,mB.rd);}bool k5=false;bool k6=false;int k7=0;public override bool
RunCmd(bool a7){if(!a7){k4.pp();k5=(mA.ol[mA.ol.Length-1]=='x');k6=(mA.ol[mA.ol.Length-1]=='p');k7=0;}if(k7==0){if(!k4.pf(mA.om,a7
))return false;k7++;a7=false;}double a8=k4.pa(a7);if(Double.IsNaN(a8))return false;double a9=0;int aa=mA.os.Count;if(aa&gt;0){double.
TryParse(mA.os[0].oA.Trim(),out a9);if(aa&gt;1){var ab=mA.os[1].oA.Trim().ToLower();if(ab!="")a9*=Math.Pow(1000.0,"kmgtpezy".IndexOf(
ab[0]));}a9*=1000.0;}mB.Add(M.T["M1"]+" ");if(a9&lt;=0){mB.rp(t8.nQ(a8));return true;}double ac=a8/a9*100;if(!k5&amp;&amp;!k6){mB.rp(t8.nQ(a8
)+"g / "+t8.nQ(a9)+"g");mB.ru(ac,1.0f,mB.r4);mB.rm(' '+t8.nR(ac)+"%");}else if(k6){mB.rp(t8.nR(ac)+"%");mB.rt(ac);}else mB.rp(t8.
nR(ac)+"%");return true;}}class sC:t1 {tk k8;td k9;public sC(){r_=3;rW="CmdOxygen";}public override void Init(){k8=mB.rc;k9=new td
(s3,mB.rd);}int ka=0;int kb=0;bool kc=false;int kd=0;double ke=0;double kf=0;double kg;public override bool RunCmd(bool ad){if(!ad
){k9.pp();ka=0;kb=0;kg=0;}if(ka==0){if(!k9.pn("airvent",mA.om,ad))return false;kc=(k9.pq()&gt;0);ka++;ad=false;}if(ka==1){for(;kb&lt;k9.
pq();kb++){if(!s3.sp(8))return false;IMyAirVent ae=k9.p5[kb]as IMyAirVent;kg=Math.Max(ae.GetOxygenLevel()*100,0f);mB.Add(ae.
CustomName);if(ae.CanPressurize)mB.rp(t8.nR(kg)+"%");else mB.rp(M.T["O1"]);mB.rt(kg);}ka++;ad=false;}if(ka==2){if(!ad)k9.pp();if(!
k9.pn("oxyfarm",mA.om,ad))return false;kd=k9.pq();ka++;ad=false;}if(ka==3){if(kd&gt;0){if(!ad)kb=0;double af=0;for(;kb&lt;kd;kb++){if(!
s3.sp(4))return false;IMyOxygenFarm ag=k9.p5[kb]as IMyOxygenFarm;af+=ag.GetOutput()*100;}kg=af/kd;if(kc)mB.rm("");kc|=(kd&gt;0);mB.
Add(M.T["O2"]);mB.rp(t8.nR(kg)+"%");mB.rt(kg);}ka++;ad=false;}if(ka==4){if(!ad)k9.pp();if(!k9.pn("oxytank",mA.om,ad))return false;
kd=k9.pq();if(kd==0){if(!kc)mB.rm(M.T["O3"]);return true;}ka++;ad=false;}if(ka==5){if(!ad){ke=0;kf=0;kb=0;}if(!k8.qw(k9.p5,
"oxygen",ref kf,ref ke,ad))return false;if(ke==0){if(!kc)mB.rm(M.T["O3"]);return true;}kg=kf/ke*100;if(kc)mB.rm("");mB.Add(M.T[
"O4"]);mB.rp(t8.nR(kg)+"%");mB.rt(kg);ka++;}return true;}}class sD:t1 {tk kh;td ki;public sD(){r_=2;rW="CmdTanks";}public override
void Init(){kh=mB.rc;ki=new td(s3,mB.rd);}int kj=0;string kk;string kl;double km=0;double kn=0;double ko;public override bool
RunCmd(bool ah){List&lt;tb&gt;aj=mA.os;if(aj.Count==0){mB.rm(M.T["T4"]);return true;}if(!ah){kk=(mA.ol.EndsWith("x")?"s":(mA.ol.EndsWith
("p")?"p":(mA.ol.EndsWith("v")?"v":"n")));kj=0;kl=aj[0].oA.Trim().ToLower();ki.pp();km=0;kn=0;}if(kj==0){if(!ki.pn("oxytank",mA.om
,ah))return false;ah=false;kj++;}if(kj==1){if(!kh.qw(ki.p5,kl,ref km,ref kn,ah))return false;ah=false;kj++;}if(kn==0){mB.rm(String
.Format(M.T["T5"],kl));return true;}ko=km/kn*100;kl=char.ToUpper(kl[0])+kl.Substring(1);mB.Add(kl+" "+M.T["T6"]);switch(kk){case
"s":mB.rp(' '+t8.nR(ko)+"%");break;default:mB.rp(' '+t8.nR(ko)+"%");mB.rt(ko);break;}return true;}}class sE:t1 {public sE(){r_=7;
rW="CmdPowerTime";}class sF {public TimeSpan kO=new TimeSpan(-1);public double kP=-1;public double kQ=0;}sF kp=new sF();td kq;td
kr;public override void Init(){kq=new td(s3,mB.rd);kr=new td(s3,mB.rd);}int ks=0;double kt=0;double ku=0,kv=0;double kw=0,kx=0,ky=
0;double kz=0,kA=0;int kB=0;bool kC(string ak,out TimeSpan al,out double am,bool an){MyResourceSourceComponent ao;
MyResourceSinkComponent ap;double aq=rZ;sF ar=kp;al=ar.kO;am=ar.kP;if(!an){kq.pp();kr.pp();ar.kP=0;ks=0;kt=0;ku=kv=0;kw=0;kx=ky=0;
kz=kA=0;kB=0;}if(ks==0){if(!kq.pn("reactor",ak,an))return false;an=false;ks++;}if(ks==1){for(;kB&lt;kq.p5.Count;kB++){if(!s3.sp(6))
return false;IMyReactor at=kq.p5[kB]as IMyReactor;if(at==null||!at.IsWorking)continue;if(at.Components.TryGet&lt;
MyResourceSourceComponent&gt;(out ao)){ku+=ao.CurrentOutputByType(mB.rc.qo);kv+=ao.MaxOutputByType(mB.rc.qo);}kt+=(double)at.
GetInventory(0).CurrentMass;}an=false;ks++;}if(ks==2){if(!kr.pn("battery",ak,an))return false;an=false;ks++;}if(ks==3){if(!an)kB=0
;for(;kB&lt;kr.p5.Count;kB++){if(!s3.sp(15))return false;IMyBatteryBlock at=kr.p5[kB]as IMyBatteryBlock;if(at==null||!at.IsWorking)
continue;if(at.Components.TryGet&lt;MyResourceSourceComponent&gt;(out ao)){kx=ao.CurrentOutputByType(mB.rc.qo);ky=ao.MaxOutputByType(mB.
rc.qo);}if(at.Components.TryGet&lt;MyResourceSinkComponent&gt;(out ap)){kx-=ap.CurrentInputByType(mB.rc.qo);}double au=(kx&lt;0?(at.
MaxStoredPower-at.CurrentStoredPower)/(-kx/3600):0);if(au&gt;ar.kP)ar.kP=au;if(at.GetValueBool("Recharge"))continue;kz+=kx;kA+=ky;kw
+=at.CurrentStoredPower;}an=false;ks++;}double av=ku+kz;if(av&lt;=0)ar.kO=TimeSpan.FromSeconds(-1);else{double aw=ar.kO.TotalSeconds;
double ax;double ay=(ar.kQ-kt)/aq;if(ku&lt;=0)ay=Math.Min(av,kv)/3600000;double az=0;if(kA&gt;0)az=Math.Min(av,kA)/3600;if(ay&lt;=0&amp;&amp;az&lt;=0)
ax=-1;else if(ay&lt;=0)ax=kw/az;else if(az&lt;=0)ax=kt/ay;else{double aA=az;double aB=(ku&lt;=0?av/3600:ay*av/ku);ax=kw/aA+kt/aB;}if(aw&lt;=0
||ax&lt;0)aw=ax;else aw=(aw+ax)/2;try{ar.kO=TimeSpan.FromSeconds(aw);}catch{ar.kO=TimeSpan.FromSeconds(-1);}}ar.kQ=kt;am=ar.kP;al=ar.
kO;return true;}string kD(TimeSpan aD){var aE="";if(aD.Ticks&lt;=0)return "-";if((int)aD.TotalDays&gt;0)aE+=(long)aD.TotalDays+" "+M.T[
"C5"]+" ";if(aD.Hours&gt;0||aE!="")aE+=aD.Hours+"h ";if(aD.Minutes&gt;0||aE!="")aE+=aD.Minutes+"m ";return aE+aD.Seconds+"s";}int kE=0;
bool kF=false;bool kG=false;double kH=0;TimeSpan kI;int kJ=0,kK=0,kL=0;int kM=0;int kN=0;public override bool RunCmd(bool aF){if(!
aF){kF=(mA.ol[mA.ol.Length-1]=='x');kG=(mA.ol[mA.ol.Length-1]=='p');kE=0;kJ=kK=kL=kM=0;kN=0;kH=0;}if(kE==0){if(mA.os.Count&gt;0){for(
;kN&lt;mA.os.Count;kN++){if(!s3.sp(100))return false;mA.os[kN].oC();if(mA.os[kN].oB.Count&lt;=0)continue;var aG=mA.os[kN].oB[0];int.
TryParse(aG,out kM);if(kN==0)kJ=kM;else if(kN==1)kK=kM;else if(kN==2)kL=kM;}}kE++;aF=false;}if(kE==1){if(!kC(mA.om,out kI,out kH,
aF))return false;kE++;aF=false;}if(!s3.sp(30))return false;double aH=0;TimeSpan aI;try{aI=new TimeSpan(kJ,kK,kL);}catch{aI=
TimeSpan.FromSeconds(-1);}string aJ;if(kI.TotalSeconds&gt;0||kH&lt;=0){mB.Add(M.T["PT1"]+" ");aJ=kD(kI);aH=kI.TotalSeconds;}else{mB.Add(
M.T["PT2"]+" ");aJ=kD(TimeSpan.FromSeconds(kH));if(aI.TotalSeconds&gt;=kH)aH=aI.TotalSeconds-kH;else aH=0;}if(aI.Ticks&lt;=0){mB.rp(aJ);
return true;}double aK=aH/aI.TotalSeconds*100;if(aK&gt;100)aK=100;if(!kF&amp;&amp;!kG){mB.rp(aJ);mB.ru(aK,1.0f,mB.r4);mB.rm(' '+aK.ToString(
"0.0")+"%");}else if(kG){mB.rp(aK.ToString("0.0")+"%");mB.rt(aK);}else mB.rp(aK.ToString("0.0")+"%");return true;}}class sG:t1 {
public sG(){r_=7;rW="CmdPowerUsed";}tk kR;td kS;public override void Init(){kS=new td(s3,mB.rd);kR=mB.rc;}string kT;string kU;
string kV;void kW(double aL,double aM){double aN=(aM&gt;0?aL/aM*100:0);switch(kT){case "s":mB.rp(aN.ToString("0.0")+"%",1.0f);break;
case "v":mB.rp(t8.nQ(aL)+"W / "+t8.nQ(aM)+"W",1.0f);break;case "c":mB.rp(t8.nQ(aL)+"W",1.0f);break;case "p":mB.rp(aN.ToString(
"0.0")+"%",1.0f);mB.rt(aN);break;default:mB.rp(t8.nQ(aL)+"W / "+t8.nQ(aM)+"W");mB.ru(aN,1.0f,mB.r4);mB.rp(' '+aN.ToString("0.0")+
"%");break;}}double kX=0,kY=0;int kZ=0;int k_=0;sH l0=new sH();public override bool RunCmd(bool aO){if(!aO){kT=(mA.ol.EndsWith("x"
)?"s":(mA.ol.EndsWith("usedp")||mA.ol.EndsWith("topp")?"p":(mA.ol.EndsWith("v")?"v":(mA.ol.EndsWith("c")?"c":"n"))));kU=(mA.ol.
Contains("top")?"top":"");kV=(mA.os.Count&gt;0?mA.os[0].oA:M.T["PU1"]);kX=kY=0;k_=0;kZ=0;kS.pp();l0.l5();}if(k_==0){if(!kS.pf(mA.om,
aO))return false;aO=false;k_++;}MyResourceSinkComponent aP;MyResourceSourceComponent aQ;switch(kU){case "top":if(k_==1){for(;kZ&lt;kS
.p5.Count;kZ++){if(!s3.sp(20))return false;IMyTerminalBlock aR=kS.p5[kZ];if(aR.Components.TryGet&lt;MyResourceSinkComponent&gt;(out aP))
{ListReader&lt;MyDefinitionId&gt;aS=aP.AcceptedResources;if(aS.IndexOf(kR.qo)&lt;0)continue;kX=aP.CurrentInputByType(kR.qo)*0xF4240;}else 
continue;l0.l2(kX,aR);}aO=false;k_++;}if(l0.l3()&lt;=0){mB.rm("PowerUsedTop: "+M.T["D2"]);return true;}int aT=10;if(mA.os.Count&gt;0)if(
!int.TryParse(kV,out aT)){aT=10;}if(aT&gt;l0.l3())aT=l0.l3();if(k_==2){if(!aO){kZ=l0.l3()-1;l0.l6();}for(;kZ&gt;=l0.l3()-aT;kZ--){if(!s3
.sp(30))return false;IMyTerminalBlock aR=l0.l4(kZ);var aU=tr.sx(aR.CustomName,tn.qV*0.4f*mB.rj.rA);if(aR.Components.TryGet&lt;
MyResourceSinkComponent&gt;(out aP)){kX=aP.CurrentInputByType(kR.qo)*0xF4240;kY=aP.MaxRequiredInputByType(kR.qo)*0xF4240;}mB.Add(aU+
" ");kW(kX,kY);}}break;default:for(;kZ&lt;kS.p5.Count;kZ++){if(!s3.sp(10))return false;double aV;IMyTerminalBlock aR=kS.p5[kZ];if(aR.
Components.TryGet&lt;MyResourceSinkComponent&gt;(out aP)){ListReader&lt;MyDefinitionId&gt;aS=aP.AcceptedResources;if(aS.IndexOf(kR.qo)&lt;0)
continue;aV=aP.CurrentInputByType(kR.qo);kY+=aP.MaxRequiredInputByType(kR.qo);}else continue;if(aR.Components.TryGet&lt;
MyResourceSourceComponent&gt;(out aQ)&amp;&amp;(aR as IMyBatteryBlock!=null)){aV-=aQ.CurrentOutputByType(kR.qo);if(aV&lt;=0)continue;}kX+=aV;}mB
.Add(kV);kW(kX*0xF4240,kY*0xF4240);break;}return true;}public class sH {List&lt;KeyValuePair&lt;double,IMyTerminalBlock&gt;&gt;l1=new List&lt;
KeyValuePair&lt;double,IMyTerminalBlock&gt;&gt;();public void l2(double aZ,IMyTerminalBlock a_){l1.Add(new KeyValuePair&lt;double,
IMyTerminalBlock&gt;(aZ,a_));}public int l3(){return l1.Count;}public IMyTerminalBlock l4(int b0){return l1[b0].Value;}public void l5
(){l1.Clear();}public void l6(){l1.Sort((b1,b2)=&gt;(b1.Key.CompareTo(b2.Key)));}}}class sI:t1 {public sI(){r_=3;rW="CmdPower";}tk l7
;td l8;td l9;td la;td lb;public override void Init(){l8=new td(s3,mB.rd);l9=new td(s3,mB.rd);la=new td(s3,mB.rd);lb=new td(s3,mB.
rd);l7=mB.rc;}string lc;bool ld;string le;string lg;int lh;int li=0;public override bool RunCmd(bool b3){if(!b3){lc=(mA.ol.
EndsWith("x")?"s":(mA.ol.EndsWith("p")?"p":(mA.ol.EndsWith("v")?"v":"n")));ld=(mA.ol.StartsWith("powersummary"));le="a";lg="";if(
mA.ol.Contains("stored"))le="s";else if(mA.ol.Contains("in"))le="i";else if(mA.ol.Contains("out"))le="o";li=0;l8.pp();l9.pp();la.
pp();}if(le=="a"){if(li==0){if(!l8.pn("reactor",mA.om,b3))return false;b3=false;li++;}if(li==1){if(!l9.pn("solarpanel",mA.om,b3))
return false;b3=false;li++;}}else if(li==0)li=2;if(li==2){if(!la.pn("battery",mA.om,b3))return false;b3=false;li++;}int b4=l8.pq()
;int b5=l9.pq();int b6=la.pq();if(li==3){lh=0;if(b4&gt;0)lh++;if(b5&gt;0)lh++;if(b6&gt;0)lh++;if(lh&lt;1){mB.rm(M.T["P6"]);return true;}if(mA.
os.Count&gt;0){if(mA.os[0].oA.Length&gt;0)lg=mA.os[0].oA;}li++;b3=false;}if(le!="a"){if(!lw(la,(lg==""?M.T["P7"]:lg),le,lc,b3))return
false;return true;}var b7=M.T["P8"];if(!ld){if(li==4){if(b4&gt;0)if(!lo(l8,(lg==""?M.T["P9"]:lg),lc,b3))return false;li++;b3=false;}
if(li==5){if(b5&gt;0)if(!lo(l9,(lg==""?M.T["P10"]:lg),lc,b3))return false;li++;b3=false;}if(li==6){if(b6&gt;0)if(!lw(la,(lg==""?M.T["P7"
]:lg),le,lc,b3))return false;li++;b3=false;}}else{b7=M.T["P11"];lh=10;if(li==4)li=7;}if(lh==1)return true;if(!b3){lb.pp();lb.po(l8
);lb.po(l9);lb.po(la);}if(!lo(lb,b7,lc,b3))return false;return true;}void lj(double b8,double b9){double ba=(b9&gt;0?b8/b9*100:0);
switch(lc){case "s":mB.rp(' '+ba.ToString("0.0")+"%");break;case "v":mB.rp(t8.nQ(b8)+"W / "+t8.nQ(b9)+"W");break;case "c":mB.rp(t8
.nQ(b8)+"W");break;case "p":mB.rp(' '+ba.ToString("0.0")+"%");mB.rt(ba);break;default:mB.rp(t8.nQ(b8)+"W / "+t8.nQ(b9)+"W");mB.ru(
ba,1.0f,mB.r4);mB.rp(' '+ba.ToString("0.0")+"%");break;}}double lk=0;double ll=0,lm=0;int ln=0;bool lo(td bb,string bc,string bd,
bool be){if(!be){ll=0;lm=0;ln=0;}if(ln==0){if(!l7.qu(bb.p5,l7.qo,ref lk,ref lk,ref ll,ref lm,be))return false;ln++;be=false;}if(!
s3.sp(50))return false;double bf=(lm&gt;0?ll/lm*100:0);mB.Add(bc+": ");lj(ll*0xF4240,lm*0xF4240);return true;}double lp=0,lq=0,lr=0,
ls=0;double lt=0,lu=0;int lv=0;bool lw(td bg,string bh,string bi,string bj,bool bk){if(!bk){lp=lq=0;lr=ls=0;lt=lu=0;lv=0;}if(lv==0
){if(!l7.qs(bg.p5,ref lr,ref ls,ref lp,ref lq,ref lt,ref lu,bk))return false;lr*=0xF4240;ls*=0xF4240;lp*=0xF4240;lq*=0xF4240;lt*=
0xF4240;lu*=0xF4240;lv++;bk=false;}double bl=(lu&gt;0?lt/lu*100:0);double bm=(lq&gt;0?lp/lq*100:0);double bn=(ls&gt;0?lr/ls*100:0);var bo=
bi=="a";if(lv==1){if(!s3.sp(50))return false;if(bo){if(bj!="p"){mB.Add(bh+": ");mB.rp("(IN "+t8.nQ(lr)+"W / OUT "+t8.nQ(lp)+"W)");
}else mB.rm(bh+": ");mB.Add("  "+M.T["P3"]+": ");}else mB.Add(bh+": ");if(bo||bi=="s")switch(bj){case "s":mB.rp(' '+bl.ToString(
"0.0")+"%");break;case "v":mB.rp(t8.nQ(lt)+"Wh / "+t8.nQ(lu)+"Wh");break;case "p":mB.rp(' '+bl.ToString("0.0")+"%");mB.rt(bl);
break;default:mB.rp(t8.nQ(lt)+"Wh / "+t8.nQ(lu)+"Wh");mB.ru(bl,1.0f,mB.r4);mB.rp(' '+bl.ToString("0.0")+"%");break;}if(bi=="s")
return true;lv++;bk=false;}if(lv==2){if(!s3.sp(50))return false;if(bo)mB.Add("  "+M.T["P4"]+": ");if(bo||bi=="o")switch(bj){case
"s":mB.rp(' '+bm.ToString("0.0")+"%");break;case "v":mB.rp(t8.nQ(lp)+"W / "+t8.nQ(lq)+"W");break;case "p":mB.rp(' '+bm.ToString(
"0.0")+"%");mB.rt(bm);break;default:mB.rp(t8.nQ(lp)+"W / "+t8.nQ(lq)+"W");mB.ru(bm,1.0f,mB.r4);mB.rp(' '+bm.ToString("0.0")+"%");
break;}if(bi=="o")return true;lv++;bk=false;}if(!s3.sp(50))return false;if(bo)mB.Add("  "+M.T["P5"]+": ");if(bo||bi=="i")switch(bj
){case "s":mB.rp(' '+bn.ToString("0.0")+"%");break;case "v":mB.rp(t8.nQ(lr)+"W / "+t8.nQ(ls)+"W");break;case "p":mB.rp(' '+bn.
ToString("0.0")+"%");mB.rt(bn);break;default:mB.rp(t8.nQ(lr)+"W / "+t8.nQ(ls)+"W");mB.ru(bn,1.0f,mB.r4);mB.rp(' '+bn.ToString(
"0.0")+"%");break;}return true;}}class sJ:t1 {public sJ(){r_=0.5;rW="CmdSpeed";}public override bool RunCmd(bool bp){double bq=0;
double br=1;var bs="m/s";if(mA.ol.Contains("kmh")){br=3.6;bs="km/h";}else if(mA.ol.Contains("mph")){br=2.23694;bs="mph";}if(mA.om
!="")double.TryParse(mA.om.Trim(),out bq);mB.Add(M.T["S1"]+" ");mB.rp((mB.re.oH*br).ToString("F1")+" "+bs+" ");if(bq&gt;0)mB.rt(mB.re
.oH/bq*100);return true;}}class sK:t1 {public sK(){r_=0.5;rW="CmdAccel";}public override bool RunCmd(bool bt){double bu=0;if(mA.om
!="")double.TryParse(mA.om.Trim(),out bu);mB.Add(M.T["AC1"]+" ");mB.rp(mB.re.oJ.ToString("F1")+" m/s²");if(bu&gt;0){double bv=mB.re.
oJ/bu*100;mB.rt(bv);}return true;}}class sL:t1 {public sL(){r_=30;rW="CmdEcho";}public override bool RunCmd(bool bw){var bx=(mA.ol
=="center"?"c":(mA.ol=="right"?"r":"n"));switch(bx){case "c":mB.rr(mA.oo);break;case "r":mB.rp(mA.oo);break;default:mB.rm(mA.oo);
break;}return true;}}class sM:t1 {public sM(){r_=3;rW="CmdCharge";}td lx;public override void Init(){lx=new td(s3,mB.rd);}int ly=0
;int lz=0;public override bool RunCmd(bool by){var bz=mA.ol.Contains("x");if(!by){lx.pp();lz=0;ly=0;}if(ly==0){if(!lx.pn(
"jumpdrive",mA.om,by))return false;if(lx.pq()&lt;=0){mB.rm("Charge: "+M.T["D2"]);return true;}ly++;by=false;}for(;lz&lt;lx.pq();lz++){if
(!s3.sp(25))return false;IMyJumpDrive bA=lx.p5[lz]as IMyJumpDrive;double bB,bC,bD;bD=tf.pE(bA,out bB,out bC);mB.Add(bA.CustomName)
;if(!bz){mB.rp(t8.nQ(bB)+"Wh / "+t8.nQ(bC)+"Wh");mB.ru(bD,1.0f,mB.r4);}mB.rp(' '+bD.ToString("0.0")+"%");}return true;}}class sN:
t1 {public sN(){r_=1;rW="CmdDateTime";}public override bool RunCmd(bool bE){var bF=(mA.ol.StartsWith("datetime"));var bG=(mA.ol.
StartsWith("date"));var bH=mA.ol.Contains("c");int bI=mA.ol.IndexOf('+');if(bI&lt;0)bI=mA.ol.IndexOf('-');float bJ=0;if(bI&gt;=0)float.
TryParse(mA.ol.Substring(bI),out bJ);DateTime bK=DateTime.Now.AddHours(bJ);var bL="";int bM=mA.on.IndexOf(' ');if(bM&gt;=0)bL=mA.on.
Substring(bM+1);if(!bF){if(!bG)bL+=bK.ToShortTimeString();else bL+=bK.ToShortDateString();}else{if(bL=="")bL=String.Format(
"{0:d} {0:t}",bK);else{bL=bL.Replace("/","\\/");bL=bL.Replace(":","\\:");bL=bL.Replace("\"","\\\"");bL=bL.Replace("'","\\'");bL=bK
.ToString(bL+' ');bL=bL.Substring(0,bL.Length-1);}}if(bH)mB.rr(bL);else mB.rm(bL);return true;}}class sO:t1 {public sO(){r_=1;rW=
"CmdCountdown";}public override bool RunCmd(bool bN){var bO=mA.ol.EndsWith("c");var bP=mA.ol.EndsWith("r");var bQ="";int bR=mA.on.
IndexOf(' ');if(bR&gt;=0)bQ=mA.on.Substring(bR+1).Trim();DateTime bS=DateTime.Now;DateTime bT;if(!DateTime.TryParseExact(bQ,
"H:mm d.M.yyyy",System.Globalization.CultureInfo.InvariantCulture,System.Globalization.DateTimeStyles.None,out bT)){mB.rm(M.T["C3"
]);mB.rm("  Countdown 19:02 28.2.2015");return true;}TimeSpan bU=bT-bS;var bV="";if(bU.Ticks&lt;=0)bV=M.T["C4"];else{if((int)bU.
TotalDays&gt;0)bV+=(int)bU.TotalDays+" "+M.T["C5"]+" ";if(bU.Hours&gt;0||bV!="")bV+=bU.Hours+"h ";if(bU.Minutes&gt;0||bV!="")bV+=bU.Minutes
+"m ";bV+=bU.Seconds+"s";}if(bO)mB.rr(bV);else if(bP)mB.rp(bV);else mB.rm(bV);return true;}}class sP:t1 {public sP(){r_=1;rW=
"CmdTextLCD";}public override bool RunCmd(bool bW){IMyTextPanel bX=mC.mT.qA;if(bX==null)return true;var bY="";if(mA.om!=""&amp;&amp;mA.om
!="*"){IMyTextPanel bZ=mB.rf.GetBlockWithName(mA.om)as IMyTextPanel;if(bZ==null){mB.rm("TextLCD: "+M.T["T1"]+mA.om);return true;}
bY=bZ.GetPublicText();}else{mB.rm("TextLCD:"+M.T["T2"]);return true;}if(bY.Length==0)return true;mB.rn(bY);return true;}}class sQ:
t1 {public sQ(){r_=15;rW="CmdBlockCount";}td lA;public override void Init(){lA=new td(s3,mB.rd);}bool lB;bool lC;int lD=0;int lE=0
;public override bool RunCmd(bool b_){if(!b_){lB=(mA.ol=="enabledcount");lC=(mA.ol=="prodcount");lD=0;lE=0;}if(mA.os.Count==0){if(
lE==0){if(!b_)lA.pp();if(!lA.pf(mA.om,b_))return false;lE++;b_=false;}if(!lO(lA,"blocks",lB,lC,b_))return false;return true;}for(;
lD&lt;mA.os.Count;lD++){tb c0=mA.os[lD];if(!b_)c0.oC();if(!lH(c0,b_))return false;b_=false;}return true;}int lF=0;int lG=0;bool lH(tb
c1,bool c2){if(!c2){lF=0;lG=0;}for(;lF&lt;c1.oB.Count;lF++){if(lG==0){if(!c2)lA.pp();if(!lA.pn(c1.oB[lF],mA.om,c2))return false;lG++;
c2=false;}if(!lO(lA,c1.oB[lF],lB,lC,c2))return false;lG=0;c2=false;}return true;}Dictionary&lt;string,int&gt;lI=new Dictionary&lt;string,
int&gt;();Dictionary&lt;string,int&gt;lJ=new Dictionary&lt;string,int&gt;();List&lt;string&gt;lK=new List&lt;string&gt;();int lL=0;int lM=0;int lN=0;bool lO(
td c3,string c4,bool c5,bool c6,bool c7){string c8;if(c3.pq()==0){c8=c4.ToLower();c8=char.ToUpper(c8[0])+c8.Substring(1).ToLower()
;mB.Add(c8+" "+M.T["C1"]+" ");var c9=(c5||c6?"0 / 0":"0");mB.rp(c9);return true;}if(!c7){lI.Clear();lJ.Clear();lK.Clear();lL=0;lM=
0;lN=0;}if(lN==0){for(;lL&lt;c3.pq();lL++){if(!s3.sp(15))return false;IMyProductionBlock ca=c3.p5[lL]as IMyProductionBlock;c8=c3.p5[
lL].DefinitionDisplayNameText;if(lK.Contains(c8)){lI[c8]++;if((c5&amp;&amp;c3.p5[lL].IsWorking)||(c6&amp;&amp;ca!=null&amp;&amp;ca.IsProducing))lJ[c8]++;}
else{lI.Add(c8,1);lK.Add(c8);if(c5||c6)if((c5&amp;&amp;c3.p5[lL].IsWorking)||(c6&amp;&amp;ca!=null&amp;&amp;ca.IsProducing))lJ.Add(c8,1);else lJ.Add(c8,0)
;}}lN++;c7=false;}for(;lM&lt;lI.Count;lM++){if(!s3.sp(8))return false;mB.Add(lK[lM]+" "+M.T["C1"]+" ");var c9=(c5||c6?lJ[lK[lM]]+
" / ":"")+lI[lK[lM]];mB.rp(c9);}return true;}}class sR:t1 {public sR(){r_=5;rW="CmdShipCtrl";}td lP;public override void Init(){lP
=new td(s3,mB.rd);}public override bool RunCmd(bool cc){if(!cc)lP.pp();if(!lP.pn("shipctrl",mA.om,cc))return false;if(lP.pq()&lt;=0){
if(mA.om!=""&amp;&amp;mA.om!="*")mB.rm(mA.ol+": "+M.T["SC1"]+" ("+mA.om+")");else mB.rm(mA.ol+": "+M.T["SC1"]);return true;}if(mA.ol.
StartsWith("damp")){var cd=(lP.p5[0]as IMyShipController).DampenersOverride;mB.Add(M.T["SCD"]);mB.rp(cd?"ON":"OFF");}else{var cd=(
lP.p5[0]as IMyShipController).IsUnderControl;mB.Add(M.T["SCO"]);mB.rp(cd?"YES":"NO");}return true;}}class sS:t1 {public sS(){r_=5;
rW="CmdWorking";}td lQ;public override void Init(){lQ=new td(s3,mB.rd);}int lR=0;int lS=0;bool lT;public override bool RunCmd(bool
cf){if(!cf){lR=0;lT=(mA.ol=="workingx");lS=0;}if(mA.os.Count==0){if(lR==0){if(!cf)lQ.pp();if(!lQ.pf(mA.om,cf))return false;lR++;cf
=false;}if(!m1(lQ,lT,"",cf))return false;return true;}for(;lS&lt;mA.os.Count;lS++){tb cg=mA.os[lS];if(!cf)cg.oC();if(!lZ(cg,cf))
return false;cf=false;}return true;}int lU=0;int lV=0;string[]lW;string lX;string lY;bool lZ(tb ch,bool ci){if(!ci){lU=0;lV=0;}for
(;lV&lt;ch.oB.Count;lV++){if(lU==0){if(!ci){if(ch.oB[lV]=="")continue;lQ.pp();lW=ch.oB[lV].ToLower().Split(':');lX=lW[0];lY=(lW.
Length&gt;1?lW[1]:"");}if(lX!=""){if(!lQ.pn(lX,mA.om,ci))return false;}else{if(!lQ.pf(mA.om,ci))return false;}lU++;ci=false;}if(!m1(
lQ,lT,lY,ci))return false;lU=0;ci=false;}return true;}string l_(IMyTerminalBlock cj){if(!cj.IsWorking)return M.T["W1"];
IMyProductionBlock ck=cj as IMyProductionBlock;if(ck!=null)if(ck.IsProducing)return M.T["W2"];else return M.T["W3"];IMyAirVent cl=
cj as IMyAirVent;if(cl!=null){if(cl.CanPressurize)return(cl.GetOxygenLevel()*100).ToString("F1")+"%";else return M.T["W4"];}
IMyGasTank cm=cj as IMyGasTank;if(cm!=null)return(cm.FilledRatio*100).ToString("F1")+"%";IMyBatteryBlock cn=cj as IMyBatteryBlock;
if(cn!=null)return tf.pC(cn);IMyJumpDrive co=cj as IMyJumpDrive;if(co!=null)return tf.pF(co).ToString("0.0")+"%";IMyLandingGear cp
=cj as IMyLandingGear;if(cp!=null)return tf.pG(cp);IMyDoor cq=cj as IMyDoor;if(cq!=null){if(cq.Status==DoorStatus.Open)return M.T[
"W5"];return M.T["W6"];}IMyShipConnector cr=cj as IMyShipConnector;if(cr!=null){if(cr.Status==MyShipConnectorStatus.Unconnected)
return M.T["W8"];if(cr.Status==MyShipConnectorStatus.Connected)return M.T["W7"];else return M.T["W10"];}IMyLaserAntenna cs=cj as
IMyLaserAntenna;if(cs!=null)return tf.pD(cs);IMyRadioAntenna cu=cj as IMyRadioAntenna;if(cu!=null)return t8.nQ(cu.Radius)+"m";
IMyBeacon cv=cj as IMyBeacon;if(cv!=null)return t8.nQ(cv.Radius)+"m";return M.T["W9"];}int m0=0;bool m1(td cw,bool cx,string cy,
bool cz){if(!cz)m0=0;for(;m0&lt;cw.pq();m0++){if(!s3.sp(20))return false;IMyTerminalBlock cA=cw.p5[m0];var cB=(cx?(cA.IsWorking?M.T[
"W9"]:M.T["W1"]):l_(cA));if(cy!=""&amp;&amp;cB.ToLower()!=cy)continue;if(cx)cB=l_(cA);var cC=cA.CustomName;cC=tr.sx(cC,tn.qV*0.7f*mB.rj.rA
);mB.Add(cC);mB.rp(cB);}return true;}}class sT:t1 {public sT(){r_=5;rW="CmdDamage";}td m2;public override void Init(){m2=new td(s3
,mB.rd);}bool m3=false;int m4=0;public override bool RunCmd(bool cD){var cE=mA.ol.StartsWith("damagex");var cF=mA.ol.EndsWith(
"noc");var cG=(!cF&amp;&amp;mA.ol.EndsWith("c"));float cH=100;if(!cD){m2.pp();m3=false;m4=0;}if(!m2.pf(mA.om,cD))return false;if(mA.os.
Count&gt;0){if(!float.TryParse(mA.os[0].oA,out cH))cH=100;}for(;m4&lt;m2.pq();m4++){if(!s3.sp(30))return false;IMyTerminalBlock cI=m2.p5
[m4];IMySlimBlock cJ=cI.CubeGrid.GetCubeBlock(cI.Position);if(cJ==null)continue;float cK=(cF?cJ.MaxIntegrity:cJ.BuildIntegrity);if
(!cG)cK-=cJ.CurrentDamage;float cL=100*(cK/cJ.MaxIntegrity);if(cL&gt;=cH)continue;m3=true;mB.Add(tr.sx(cJ.FatBlock.DisplayNameText,tn
.qV*0.69f*mB.rj.rA-70)+" ");if(!cE){mB.rq(t8.nQ(cK)+" / ",0.69f);mB.Add(t8.nQ(cJ.MaxIntegrity));}mB.rp(' '+cL.ToString("0.0")+"%")
;mB.rt(cL);}if(!m3)mB.rm(M.T["D3"]);return true;}}class sU:t1 {public sU(){r_=2;rW="CmdAmount";}td m5;public override void Init(){
m5=new td(s3,mB.rd);}bool m6;int m7=0;int m8=0;int m9=0;public override bool RunCmd(bool cM){if(!cM){m6=!mA.ol.EndsWith("x");if(mA
.os.Count==0)mA.os.Add(new tb("reactor,gatlingturret,missileturret,interiorturret,gatlinggun,launcherreload,launcher,oxygenerator"
));m8=0;}for(;m8&lt;mA.os.Count;m8++){tb cN=mA.os[m8];if(!cM){cN.oC();m7=0;m9=0;}for(;m9&lt;cN.oB.Count;m9++){if(m7==0){if(!cM){if(cN.oB
[m9]=="")continue;m5.pp();}var cO=cN.oB[m9];if(!m5.pn(cO,mA.om,cM))return false;m7++;cM=false;}if(!mk(cM))return false;cM=false;m7
=0;}}return true;}int ma=0;int mb=0;double mc=0;double md=0;double me=0;int mf=0;IMyTerminalBlock mg;IMyInventory mh;List&lt;
IMyInventoryItem&gt;mi;string mj="";bool mk(bool cP){if(!cP){ma=0;mb=0;}for(;ma&lt;m5.pq();ma++){if(mb==0){if(!s3.sp(50))return false;mg
=m5.p5[ma];mh=mg.GetInventory(0);if(mh==null)continue;mb++;cP=false;}if(!cP){mi=mh.GetItems();mj=(mi.Count&gt;0?mi[0].Content.
ToString():"");mf=0;mc=0;md=0;me=0;}for(;mf&lt;mi.Count;mf++){if(!s3.sp(30))return false;IMyInventoryItem cQ=mi[mf];if(cQ.Content.
ToString()!=mj)me+=(double)cQ.Amount;else mc+=(double)cQ.Amount;}var cR=M.T["A1"];var cS=mg.CustomName;if(mc&gt;0&amp;&amp;(double)mh.
CurrentVolume&gt;0){double cT=me*(double)mh.CurrentVolume/(mc+me);md=Math.Floor(mc*((double)mh.MaxVolume-cT)/(double)mh.CurrentVolume
-cT);cR=t8.nQ(mc)+" / "+(me&gt;0?"~":"")+t8.nQ(md);}cS=tr.sx(cS,tn.qV*0.8f*mB.rj.rA);mB.Add(cS);mB.rp(cR);if(m6&amp;&amp;md&gt;0){double cU=100*
mc/md;mB.rt(cU);}mb=0;cP=false;}return true;}}class sV:t1 {public sV(){r_=1;rW="CmdPosition";}public override bool RunCmd(bool cV)
{var cW=(mA.ol=="posxyz");var cX=(mA.ol=="posgps");IMyTerminalBlock cY=mC.mT.qA;if(mA.om!=""&amp;&amp;mA.om!="*"){cY=mB.rf.
GetBlockWithName(mA.om);if(cY==null){mB.rm("Pos: "+M.T["P1"]+": "+mA.om);return true;}}if(cX){VRageMath.Vector3D cZ=cY.GetPosition
();mB.rm("GPS:"+M.T["P2"]+":"+cZ.GetDim(0).ToString("F2")+":"+cZ.GetDim(1).ToString("F2")+":"+cZ.GetDim(2).ToString("F2")+":");
return true;}mB.Add(M.T["P2"]+": ");if(!cW){mB.rp(cY.GetPosition().ToString("F0"));return true;}mB.rm("");mB.Add(" X: ");mB.rp(cY.
GetPosition().GetDim(0).ToString("F0"));mB.Add(" Y: ");mB.rp(cY.GetPosition().GetDim(1).ToString("F0"));mB.Add(" Z: ");mB.rp(cY.
GetPosition().GetDim(2).ToString("F0"));return true;}}class sW:t1 {public sW(){r_=5;rW="CmdDetails";}string ml="";td mm;public
override void Init(){mm=new td(s3,mB.rd);if(mA.os.Count&gt;0)ml=mA.os[0].oA.Trim();}int mn=0;int mo=1;IMyTerminalBlock mp;public
override bool RunCmd(bool c_){if(mA.om==""||mA.om=="*"){mB.rm("Details: "+M.T["D1"]);return true;}if(!c_){mm.pp();mn=0;mo=1;}if(mn
==0){if(!mm.pf(mA.om,c_))return true;if(mm.pq()&lt;=0){mB.rm("Details: "+M.T["D2"]);return true;}mn++;c_=false;}int d0=(mA.ol.
EndsWith("x")?1:0);if(mn==1){if(!c_){mp=mm.p5[0];mB.rm(mp.CustomName);}if(!mt(mp,d0,c_))return false;mn++;c_=false;}for(;mo&lt;mm.pq(
);mo++){if(!c_){mp=mm.p5[mo];mB.rm("");mB.rm(mp.CustomName);}if(!mt(mp,d0,c_))return false;c_=false;}return true;}string[]mq;int
mr=0;bool ms=false;bool mt(IMyTerminalBlock d1,int d2,bool d3){if(!d3){mq=(d1.DetailedInfo+"\n"+d1.CustomInfo).Split('\n');mr=d2;
ms=(ml=="");}for(;mr&lt;mq.Length;mr++){if(!s3.sp(5))return false;if(mq[mr]=="")continue;if(!ms){if(!mq[mr].Contains(ml))continue;ms=
true;}mB.rm("  "+mq[mr]);}return true;}}class sX:t1 {public sX(){r_=1;rW="CmdShipMass";}public override bool RunCmd(bool d4){var
d5=mA.ol.EndsWith("base");double d6=0;if(mA.om!="")double.TryParse(mA.om.Trim(),out d6);int d7=mA.os.Count;if(d7&gt;0){var d8=mA.os[0
].oA.Trim().ToLower();if(d8!="")d6*=Math.Pow(1000.0,"kmgtpezy".IndexOf(d8[0]));}double d9=(d5?mB.re.oR:mB.re.oQ);if(!d5)mB.Add(M.T
["SM1"]+" ");else mB.Add(M.T["SM2"]+" ");mB.rp(t8.nQ(d9,true,'k')+"g ");if(d6&gt;0)mB.rt(d9/d6*100);return true;}}class sY:t1 {public
sY(){r_=1;rW="CmdDistance";}string mu="";string[]mv;Vector3D mw;string mx="";bool my=false;public override void Init(){my=false;if
(mA.os.Count&lt;=0)return;mu=mA.os[0].oA.Trim();mv=mu.Split(':');if(mv.Length&lt;5||mv[0]!="GPS")return;double da,db,dc;if(!double.
TryParse(mv[2],out da))return;if(!double.TryParse(mv[3],out db))return;if(!double.TryParse(mv[4],out dc))return;mw=new Vector3D(da
,db,dc);mx=mv[1];my=true;}public override bool RunCmd(bool dd){if(!my){mB.rm("Distance: "+M.T["DTU"]+" '"+mu+"'.");return true;}
IMyTerminalBlock de=mC.mT.qA;if(mA.om!=""&amp;&amp;mA.om!="*"){de=mB.rf.GetBlockWithName(mA.om);if(de==null){mB.rm("Distance: "+M.T["P1"]+
": "+mA.om);return true;}}double df=Vector3D.Distance(de.GetPosition(),mw);mB.Add(mx+": ");mB.rp(t8.nQ(df)+"m ");return true;}}
class sZ:t1 {public sZ(){r_=1;rW="CmdAltitude";}public override bool RunCmd(bool dg){var dh=(mA.ol.EndsWith("sea")?"sea":"ground")
;switch(dh){case "sea":mB.Add(M.T["ALT1"]);mB.rp(mB.re.oT.ToString("F0")+" m");break;default:mB.Add(M.T["ALT2"]);mB.rp(mB.re.oV.
ToString("F0")+" m");break;}return true;}}class s_:t1 {public s_(){r_=1;rW="CmdStopTask";}public override bool RunCmd(bool di){
double dj=0;if(mA.ol.Contains("best"))dj=mB.re.oH/mB.re.oL;else dj=mB.re.oH/mB.re.oO;double dk=mB.re.oH/2*dj;if(mA.ol.Contains(
"time")){mB.Add(M.T["ST"]);if(double.IsNaN(dj)){mB.rp("N/A");return true;}var dl="";try{TimeSpan dm=TimeSpan.FromSeconds(dj);if((
int)dm.TotalDays&gt;0)dl=" &gt; 24h";else{if(dm.Hours&gt;0)dl=dm.Hours+"h ";if(dm.Minutes&gt;0||dl!="")dl+=dm.Minutes+"m ";dl+=dm.Seconds+"s";
}}catch{dl="N/A";}mB.rp(dl);return true;}mB.Add(M.T["SD"]);if(!double.IsNaN(dk)&amp;&amp;!double.IsInfinity(dk))mB.rp(t8.nQ(dk)+"m ");else
 mB.rp("N/A");return true;}}class t0:t1 {public t0(){r_=1;rW="CmdGravity";}public override bool RunCmd(bool dn){var dp=(mA.ol.
Contains("nat")?"n":(mA.ol.Contains("art")?"a":(mA.ol.Contains("tot")?"t":"s")));Vector3D dq;switch(dp){case "n":mB.Add(M.T["G2"]+
" ");dq=mB.re.oY.GetNaturalGravity();mB.rp(dq.Length().ToString("F1")+" m/s²");break;case "a":mB.Add(M.T["G3"]+" ");dq=mB.re.oY.
GetArtificialGravity();mB.rp(dq.Length().ToString("F1")+" m/s²");break;case "t":mB.Add(M.T["G1"]+" ");dq=mB.re.oY.GetTotalGravity(
);mB.rp(dq.Length().ToString("F1")+" m/s²");break;default:mB.Add(M.T["GN"]);mB.rq(" | ",0.33f);mB.rq(M.T["GA"]+" | ",0.66f);mB.rp(
M.T["GT"],1.0f);mB.Add("");dq=mB.re.oY.GetNaturalGravity();mB.rq(dq.Length().ToString("F1")+" | ",0.33f);dq=mB.re.oY.
GetArtificialGravity();mB.rq(dq.Length().ToString("F1")+" | ",0.66f);dq=mB.re.oY.GetTotalGravity();mB.rp(dq.Length().ToString("F1"
)+" ");break;}return true;}}class t1:tp {public to mz=null;protected ta mA;protected tn mB;protected t4 mC;public t1(){r_=3600;rW=
"CommandTask";}public void mD(t4 dr,ta ds){mC=dr;mB=mC.mS;mA=ds;}public virtual bool RunCmd(bool dt){mB.rm(M.T["UC"]+": '"+mA.on+
"'");return true;}public override bool Run(bool du){mz=mB.rk(mz,mC.mT);if(!du)mB.rv();return RunCmd(du);}}class t2:tp {t6 mE;tn mF
;string mG="";public t2(tn dv,t6 dw,string dx){r_=-1;rW="ArgScroll";mG=dx;mE=dw;mF=dv;}int mH;td mI;public override void Init(){mI
=new td(s3,mF.rd);}int mJ=0;int mK=0;ta mL;public override bool Run(bool dy){if(!dy){mK=0;mI.pp();mL=new ta(s3);mJ=0;}if(mK==0){if
(!mL.ox(mG,dy))return false;if(mL.os.Count&gt;0){if(!int.TryParse(mL.os[0].oA,out mH))mH=1;else if(mH&lt;1)mH=1;}if(mL.ol.EndsWith("up")
)mH=-mH;else if(!mL.ol.EndsWith("down"))mH=0;mK++;dy=false;}if(mK==1){if(!mI.pn("textpanel",mL.om,dy))return false;mK++;dy=false;}
tl dz;for(;mJ&lt;mI.pq();mJ++){if(!s3.sp(20))return false;IMyTextPanel dA=mI.p5[mJ]as IMyTextPanel;if(!mE.nt.TryGetValue(dA,out dz))
continue;if(dz==null||dz.qA!=dA)continue;if(dz.qE)dz.qz.rU=10;if(mH&gt;0)dz.qz.rT(mH);else if(mH&lt;0)dz.qz.rS(-mH);else dz.qz.rV();dz.
qJ();}return true;}}class t3:tp {tn mM;t6 mN;public int mO=0;public t3(tn dB,t6 dC){rW="BootPanelsTask";r_=1;mM=dB;mN=dC;if(!mM.qZ
)mO=int.MaxValue;}public override bool Run(bool dD){if(mO&gt;mM.q_.Count){s7();return true;}if(mO==0){mN.nu=false;}mQ();mO++;return
true;}public override void End(){mN.nu=true;}public void mP(){t7 dE=mN.np;for(int dF=0;dF&lt;dE.nG();dF++){tl dG=dE.nI(dF);mM.rk(dG.
qz,dG);mM.rv();mM.rw(dG);}mO=(mM.qZ?0:int.MaxValue);}public void mQ(){t7 dH=mN.np;for(int dI=0;dI&lt;dH.nG();dI++){tl dJ=dH.nI(dI);mM
.rk(dJ.qz,dJ);mM.rv();if(dJ.qA.GetValueFloat("FontSize")&gt;3f)continue;mM.rr(M.T["B1"]);double dK=(double)mO/mM.q_.Count*100;mM.rt(
dK);if(mO==mM.q_.Count){mM.rm("");mM.rr("Automatic LCDs 2");mM.rr("by MMaster");}else mM.rn(mM.q_[mO]);mM.rw(dJ);}}public bool mR(
){return mO&lt;=mM.q_.Count;}}class t4:tp {public tn mS;public tl mT;public t5 mU=null;string mV="N/A";public Dictionary&lt;string,t1&gt;mW
=new Dictionary&lt;string,t1&gt;();public List&lt;string&gt;mX=null;public t6 mY;public bool mZ{get{return mY.nu;}}public t4(t6 dL,tl dM){r_=5
;mT=dM;mY=dL;mS=dL.no;rW="PanelProcess";}t1 m_(int dN){switch(dN){case t9.nU:return new sL();case t9.nV:return new sz();case t9.nW
:return new sA();case t9.nX:return new sB();case t9.nY:return new sC();case t9.nZ:return new sD();case t9.n_:return new sE();case
t9.o0:return new sG();case t9.o1:return new sI();case t9.o2:return new sJ();case t9.o3:return new sK();case t9.o4:return new sM();
case t9.o5:return new sN();case t9.o6:return new sO();case t9.o7:return new sP();case t9.o8:return new sQ();case t9.o9:return new
sR();case t9.oa:return new sS();case t9.ob:return new sT();case t9.oc:return new sU();case t9.od:return new sV();case t9.oe:return
new sW();case t9.of:return new sX();case t9.og:return new sY();case t9.oh:return new sZ();case t9.oi:return new s_();case t9.oj:
return new t0();default:return new t1();}}ta n0=null;t1 n1(string dO,bool dP){if(!dP)n0=new ta(s3);if(!n0.ox(dO,dP))return null;t1
dQ=m_(n0.oq);dQ.mD(this,n0);s3.sh(dQ,0);return dQ;}string n2="";void n3(){try{n2=mT.qA.CustomData;}catch{n2="";mT.qA.CustomData=""
;}n2=n2.Replace("\\\n","");}int n4=0;int n5=0;List&lt;string&gt;n6=null;HashSet&lt;string&gt;n7=new HashSet&lt;string&gt;();int n8=0;bool n9(bool dR
){if(!dR){char[]dS={';','\n' };var dT=n2.Replace("\\;","\f");n6=new List&lt;string&gt;(dT.Split(dS,StringSplitOptions.RemoveEmptyEntries
));n7.Clear();n4=0;n5=0;n8=0;}while(n4&lt;n6.Count){if(!s3.sp(500))return false;if(n6[n4].StartsWith("//")){n6.RemoveAt(n4);continue;
}n6[n4]=n6[n4].Replace('\f',';');if(!mW.ContainsKey(n6[n4])){if(n8!=1)dR=false;n8=1;t1 dU=n1(n6[n4],dR);if(dU==null)return false;
dR=false;mW.Add(n6[n4],dU);n8=0;}if(!n7.Contains(n6[n4]))n7.Add(n6[n4]);n4++;}if(mX!=null){t1 dV;while(n5&lt;mX.Count){if(!s3.sp(7))
return false;if(!n7.Contains(mX[n5]))if(mW.TryGetValue(mX[n5],out dV)){dV.s7();mW.Remove(mX[n5]);}n5++;}}mX=n6;return true;}public
override void End(){if(mX!=null){t1 dW;for(int dX=0;dX&lt;mX.Count;dX++){if(mW.TryGetValue(mX[dX],out dW))dW.s7();}mX=null;}if(mU!=
null){mU.s7();mU=null;}}string na="";bool nb=false;public override bool Run(bool dY){if(mT.qy.qO()&lt;=0){s7();return true;}if(!dY){
mT.qz=mS.rk(mT.qz,mT);n3();if(mT.qA.CustomName!=na)nb=true;else nb=false;na=mT.qA.CustomName;}if(n2!=mV){if(!n9(dY))return false;
if(n2==""){if(mY.nu){mS.rv();mS.rm(M.T["H1"]);mS.rw(mT);return true;}return this.s5(2);}nb=true;}mV=n2;if(mU!=null&amp;&amp;nb){s3.si(mU);
mU.ng();s3.sh(mU,0);}else if(mU==null){mU=new t5(this);s3.sh(mU,0);}return true;}}class t5:tp {public tn nc;public tl nd;t4 ne;
public t5(t4 dZ){ne=dZ;nc=ne.mS;nd=ne.mT;r_=0.5;rW="PanelDisplay";}double nf=0;public void ng(){nf=0;}int nh=0;int ni=0;bool nj=
true;double nk=double.MaxValue;int nl=0;public override bool Run(bool d_){t1 e0;if(!d_&amp;&amp;(!ne.mZ||ne.mX==null||ne.mX.Count&lt;=0))
return true;if(ne.mY.nn&gt;5)return s5(0);if(!d_){ni=0;nj=false;nk=double.MaxValue;nl=0;}if(nl==0){while(ni&lt;ne.mX.Count){if(!s3.sp(5)
)return false;if(ne.mW.TryGetValue(ne.mX[ni],out e0)){if(!e0.s1)return s5(e0.rX-s3.sb+0.001);if(e0.rY&gt;nf)nj=true;if(e0.rX&lt;nk)nk=e0
.rX;}ni++;}nl++;d_=false;}double e1=nk-s3.sb+0.001;if(!nj&amp;&amp;!nd.qF())return s5(e1);nc.rl(nd);if(nj){if(!d_){nf=s3.sb;nc.rv();var e2
=nd.qA.CustomName;e2=(e2.Contains("#")?e2.Substring(e2.LastIndexOf('#')+1):"");if(e2!="")nc.rm(e2);nh=0;}while(nh&lt;ne.mX.Count){if(
!s3.sp(7))return false;if(!ne.mW.TryGetValue(ne.mX[nh],out e0)){nc.rm("ERR: No cmd task ("+ne.mX[nh]+")");nh++;continue;}nc.ro(e0.
mz.rM());nh++;}}nc.rw(nd);ne.mY.nn++;if(r_&lt;e1&amp;&amp;!nd.qF())return s5(e1);return true;}}class t6:tp {public int nn=0;public tn no;
public t7 np=new t7();td nq;td nr;Dictionary&lt;tl,t4&gt;ns=new Dictionary&lt;tl,t4&gt;();public Dictionary&lt;IMyTextPanel,tl&gt;nt=new Dictionary&lt;
IMyTextPanel,tl&gt;();public bool nu=false;t3 nv=null;public t6(tn e3){r_=5;no=e3;rW="ProcessPanels";}public override void Init(){nq=
new td(s3,no.rd);nr=new td(s3,no.rd);nv=new t3(no,this);}int nw=0;bool nx(bool e4){if(!e4)nw=0;if(nw==0){if(!nq.pn("textpanel",no.
qX,e4))return false;nw++;e4=false;}if(nw==1){if(no.qX=="T:[LCD]"&amp;&amp;"T:!LCD!"!="")if(!nq.pn("textpanel","T:!LCD!",e4))return false;
nw++;e4=false;}return true;}string ny(IMyTextPanel e5){return e5.CustomName+" "+e5.NumberInGrid+" "+e5.GetPosition().ToString("F0"
);}void nz(IMyTextPanel e6){tl e7=null;if(!nt.TryGetValue(e6,out e7))return;e7.qy.qN(e7.qD);nt.Remove(e6);if(e7.qy.qO()&lt;=0){t4 e8;
if(ns.TryGetValue(e7,out e8)){np.nJ(e7.qD);ns.Remove(e7);e8.s7();}}}int nA=0;int nB=0;public override bool Run(bool e9){if(!e9){nq
.pp();nA=0;nB=0;}if(!nx(e9))return false;while(nA&lt;nq.pq()){if(!s3.sp(20))return false;IMyTextPanel ea=(nq.p5[nA]as IMyTextPanel);
if(ea==null||!ea.IsWorking){nq.p5.RemoveAt(nA);continue;}tl eb=null;var ec=false;var ed=ny(ea);int ee=ed.IndexOf("!LINK:");if(ee&gt;=
0&amp;&amp;ed.Length&gt;ee+6){ed=ed.Substring(ee+6);ec=true;}if(nt.ContainsKey(ea)){eb=nt[ea];if(eb.qD==ed){nA++;continue;}this.nz(ea);}if(!
ec){eb=new tl(no,ed);eb.qy.qM(ed,ea);t4 ef=new t4(this,eb);s3.sh(ef,0);ns.Add(eb,ef);np.nF(ed,eb);nt.Add(ea,eb);nA++;continue;}
string[]eg=ed.Split(' ');var eh=eg[0];eb=np.nH(eh);if(eb==null){eb=new tl(no,eh);np.nF(eh,eb);t4 ef=new t4(this,eb);s3.sh(ef,0);ns
.Add(eb,ef);}eb.qy.qM(ed,ea);nt.Add(ea,eb);nA++;}while(nB&lt;nr.pq()){if(!s3.sp(300))return false;IMyTextPanel ea=nr.p5[nB]as
IMyTextPanel;if(ea==null)continue;if(!nq.p5.Contains(ea))this.nz(ea);nB++;}nr.pp();nr.po(nq);if(!nv.s0&amp;&amp;nv.mR())s3.sh(nv,0);return
true;}public bool nC(string ek){s3.sj("RunCommand: "+ek);var el=ek.ToLower();if(el=="clear"){s3.sj("ClearLCDs");nv.mP();if(!nv.s0)
s3.sh(nv,0);return true;}if(el=="boot"){s3.sj("Boot, isRunning"+nv.s0);nv.mO=0;if(!nv.s0)s3.sh(nv,0);return true;}if(el.StartsWith
("scroll")){t2 em=new t2(no,this,ek);s3.sh(em,0);return true;}return false;}}public class t7 {Dictionary&lt;string,tl&gt;nD=new
Dictionary&lt;string,tl&gt;();List&lt;string&gt;nE=new List&lt;string&gt;();public void nF(string en,tl eo){if(!nD.ContainsKey(en)){nE.Add(en);nD.
Add(en,eo);}}public int nG(){return nD.Count;}public tl nH(string ep){if(nD.ContainsKey(ep))return nD[ep];return null;}public tl
nI(int eq){return nD[nE[eq]];}public void nJ(string er){nD.Remove(er);nE.Remove(er);}public void nK(){nE.Clear();nD.Clear();}
public void nL(){nE.Sort();}}public static class t8 {public static string nM(IMyInventoryItem es){var et=es.Content.TypeId.
ToString();et=et.Substring(et.LastIndexOf('_')+1);return es.Content.SubtypeName+" "+et;}public static void nN(string eu,out string
ev,out string ew){int ex=eu.LastIndexOf(' ');if(ex&gt;=0){ev=eu.Substring(0,ex);ew=eu.Substring(ex+1);return;}ev=eu;ew="";}public
static string nO(string ey){string ez,eA;nN(ey,out ez,out eA);return nO(ez,eA);}public static string nO(string eB,string eC){tg eD
=MMItems.pL(eB,eC);if(eD!=null){if(eD.pP!="")return eD.pP;return eD.pM;}return System.Text.RegularExpressions.Regex.Replace(eB,
"([a-z])([A-Z])","$1 $2");}public static void nP(ref string eE,ref string eF){var eG=eE.ToLower();tg eH;if(MMItems.pK.TryGetValue(
eG,out eH)){eE=eH.pM;eF=eH.pN;return;}eH=MMItems.pL(eE,eF);if(eH!=null){eE=eH.pM;if(eF=="Ore"||eF=="Ingot")return;eF=eH.pN;}}
public static string nQ(double eI,bool eJ=true,char eK=' '){if(!eJ)return eI.ToString("#,###,###,###,###,###,###,###,###,###");var
eL=" kMGTPEZY";double eM=eI;int eN=eL.IndexOf(eK);int eO=(eN&lt;0?0:eN);while(eM&gt;=1000&amp;&amp;eO+1&lt;eL.Length){eM/=1000;eO++;}var eP=Math.
Round(eM,1,MidpointRounding.AwayFromZero).ToString();if(eO&gt;0)eP+=" "+eL[eO];return eP;}public static string nR(double eQ){return(
Math.Floor(eQ*10)/10).ToString("F1");}}public static class t9 {public const int nU=1;public const int nV=2;public const int nW=3;
public const int nX=4;public const int nY=5;public const int nZ=6;public const int n_=7;public const int o0=8;public const int o1=
9;public const int o2=10;public const int o3=11;public const int o4=12;public const int o5=13;public const int o6=14;public const
int o7=15;public const int o8=16;public const int o9=17;public const int oa=18;public const int ob=19;public const int oc=20;
public const int od=21;public const int oe=22;public const int of=23;public const int og=24;public const int oh=25;public const
int oi=26;public const int oj=27;}public class ta {tq ok;public string ol="";public string om="";public string on="";public string
oo="";public int oq=0;int or(){if(ol.StartsWith("inventory")||ol=="missing"||ol.StartsWith("invlist"))return t9.nV;if(ol.
StartsWith("cargo"))return t9.nW;if(ol.StartsWith("mass"))return t9.nX;if(ol.StartsWith("shipmass"))return t9.of;if(ol=="oxygen")
return t9.nY;if(ol.StartsWith("tanks"))return t9.nZ;if(ol.StartsWith("powertime"))return t9.n_;if(ol.StartsWith("powerused"))
return t9.o0;if(ol.StartsWith("power"))return t9.o1;if(ol.StartsWith("speed"))return t9.o2;if(ol.StartsWith("accel"))return t9.o3;
if(ol.StartsWith("alti"))return t9.oh;if(ol.StartsWith("charge"))return t9.o4;if(ol.StartsWith("time")||ol.StartsWith("date"))
return t9.o5;if(ol.StartsWith("countdown"))return t9.o6;if(ol=="echo"||ol=="center"||ol=="right")return t9.nU;if(ol.StartsWith(
"textlcd"))return t9.o7;if(ol.EndsWith("count"))return t9.o8;if(ol.StartsWith("dampeners")||ol.StartsWith("occupied"))return t9.o9
;if(ol.StartsWith("working"))return t9.oa;if(ol.StartsWith("damage"))return t9.ob;if(ol.StartsWith("amount"))return t9.oc;if(ol.
StartsWith("pos"))return t9.od;if(ol.StartsWith("distance"))return t9.og;if(ol.StartsWith("details"))return t9.oe;if(ol.StartsWith
("stop"))return t9.oi;if(ol.StartsWith("gravity"))return t9.oj;return 0;}public ta(tq eR){ok=eR;}public List&lt;tb&gt;os=new List&lt;tb&gt;();
string[]ot=null;string ou="";bool ov=false;int ow=1;public bool ox(string eS,bool eT){if(!eT){oq=0;om="";ol="";on=eS.TrimStart(' '
);os.Clear();if(on=="")return true;int eU=on.IndexOf(' ');if(eU&lt;0||eU&gt;=on.Length-1)oo="";else oo=on.Substring(eU+1);ot=on.Split(
' ');ou="";ov=false;ol=ot[0].ToLower();ow=1;}for(;ow&lt;ot.Length;ow++){if(!ok.sp(40))return false;var eV=ot[ow];if(eV=="")continue;
if(eV[0]=='{'&amp;&amp;eV[eV.Length-1]=='}'){eV=eV.Substring(1,eV.Length-2);if(eV=="")continue;if(om=="")om=eV;else os.Add(new tb(eV));
continue;}if(eV[0]=='{'){ov=true;ou=eV.Substring(1);continue;}if(eV[eV.Length-1]=='}'){ov=false;ou+=' '+eV.Substring(0,eV.Length-1
);if(om=="")om=ou;else os.Add(new tb(ou));continue;}if(ov){if(ou.Length!=0)ou+=' ';ou+=eV;continue;}if(om=="")om=eV;else os.Add(
new tb(eV));}oq=or();return true;}}public class tb {public string oy="";public string oz="";public string oA="";public List&lt;string
&gt;oB=new List&lt;string&gt;();public tb(string eW){oA=eW;}public void oC(){if(oA==""||oy!=""||oz!=""||oB.Count&gt;0)return;var eX=oA.Trim();
if(eX[0]=='+'||eX[0]=='-'){oy+=eX[0];eX=oA.Substring(1);}string[]eY=eX.Split('/');var eZ=eY[0];if(eY.Length&gt;1){oz=eY[0];eZ=eY[1];}
else oz="";if(eZ.Length&gt;0){string[]e_=eZ.Split(',');for(int f0=0;f0&lt;e_.Length;f0++)if(e_[f0]!="")oB.Add(e_[f0]);}}}public class tc
:tp {MyShipVelocities oD;public VRageMath.Vector3D oE{get{return oD.LinearVelocity;}}public VRageMath.Vector3D oF{get{return oD.
AngularVelocity;}}double oG=0;public double oH{get{if(oW!=null)return oW.GetShipSpeed();else return oG;}}double oI=0;public double
oJ{get{return oI;}}double oK=0;public double oL{get{return oK;}}double oM=0;double oN=0;public double oO{get{return oM;}}
MyShipMass oP;public double oQ{get{return oP.TotalMass;}}public double oR{get{return oP.BaseMass;}}double oS=double.NaN;public
double oT{get{return oS;}}double oU=double.NaN;public double oV{get{return oU;}}IMyShipController oW=null;IMySlimBlock oX=null;
public IMyShipController oY{get{return oW;}}VRageMath.Vector3D oZ;public tc(tq f1){rW="ShipMgr";s3=f1;oZ=s3.sf.Me.GetPosition();r_
=0.5;}List&lt;IMyTerminalBlock&gt;o_=new List&lt;IMyTerminalBlock&gt;();int p0=0;public override bool Run(bool f2){if(!f2){o_.Clear();s3.sf.
GridTerminalSystem.GetBlocksOfType&lt;IMyShipController&gt;(o_);p0=0;if(oW!=null&amp;&amp;oW.CubeGrid.GetCubeBlock(oW.Position)!=oX)oW=null;}if(
o_.Count&gt;0){for(;p0&lt;o_.Count;p0++){if(!s3.sp(20))return false;IMyShipController f3=o_[p0]as IMyShipController;if(f3.GetValueBool(
"MainCockpit")||f3.IsUnderControl){oW=f3;oX=f3.CubeGrid.GetCubeBlock(f3.Position);if(f3.GetValueBool("MainCockpit")){p0=o_.Count;
break;}}}if(oW==null){oW=o_[0]as IMyShipController;oX=oW.CubeGrid.GetCubeBlock(oW.Position);}oP=oW.CalculateShipMass();if(!oW.
TryGetPlanetElevation(MyPlanetElevation.Sealevel,out oS))oS=double.NaN;if(!oW.TryGetPlanetElevation(MyPlanetElevation.Surface,out
oU))oU=double.NaN;oD=oW.GetShipVelocities();}double f4=oG;oG=oE.Length();oI=(oG-f4)/rZ;if(-oI&gt;oK)oK=-oI;if(-oI&gt;oM){oM=-oI;oN=s3.sb
;}if(s3.sb-oN&gt;5&amp;&amp;-oI&gt;0.1)oM-=(oM+oI)*0.3f;return true;}}public class td {tq p1=null;te p2;IMyCubeGrid p3{get{return p1.sf.Me.
CubeGrid;}}IMyGridTerminalSystem p4{get{return p1.sf.GridTerminalSystem;}}public List&lt;IMyTerminalBlock&gt;p5=new List&lt;
IMyTerminalBlock&gt;();public td(tq f5,te f6){p1=f5;p2=f6;}int p6=0;public double p7(ref double f7,ref double f8,bool f9){if(!f9)p6=0
;for(;p6&lt;p5.Count;p6++){if(!p1.sp(4))return Double.NaN;IMyInventory fa=p5[p6].GetInventory(0);if(fa==null)continue;f7+=(double)fa.
CurrentVolume;f8+=(double)fa.MaxVolume;}f7*=1000;f8*=1000;return(f8&gt;0?f7/f8*100:100);}int p8=0;double p9=0;public double pa(bool
fb){if(!fb){p8=0;p9=0;}for(;p8&lt;p5.Count;p8++){if(!p1.sp(6))return Double.NaN;for(int fc=0;fc&lt;2;fc++){IMyInventory fd=p5[p8].
GetInventory(fc);if(fd==null)continue;p9+=(double)fd.CurrentMass;}}return p9*1000;}int pb=0;bool pc(bool fe=false){if(!fe)pb=0;
while(pb&lt;p5.Count){if(!p1.sp(4))return false;if(p5[pb].CubeGrid!=p3){p5.RemoveAt(pb);continue;}pb++;}return true;}List&lt;
IMyBlockGroup&gt;pd=new List&lt;IMyBlockGroup&gt;();int pe=0;public bool pf(string ff,bool fg){int fh=ff.IndexOf(':');var fi=(fh&gt;=1&amp;&amp;fh&lt;=2?
ff.Substring(0,fh):"");var fj=fi.Contains("T");if(fi!="")ff=ff.Substring(fh+1);if(ff==""||ff=="*"){if(!fg){var fk=new List&lt;
IMyTerminalBlock&gt;();p4.GetBlocks(fk);p5.AddList(fk);}if(fj)if(!pc(fg))return false;return true;}var fl=(fi.Contains("G")?ff.Trim()
.ToLower():"");if(fl!=""){if(!fg){pd.Clear();p4.GetBlockGroups(pd);pe=0;}for(;pe&lt;pd.Count;pe++){IMyBlockGroup fm=pd[pe];if(fm.Name
.ToLower()==fl){if(!fg)fm.GetBlocks(p5);if(fj)if(!pc(fg))return false;return true;}}return true;}if(!fg)p4.SearchBlocksOfName(ff,
p5);if(fj)if(!pc(fg))return false;return true;}List&lt;IMyBlockGroup&gt;pg=new List&lt;IMyBlockGroup&gt;();List&lt;IMyTerminalBlock&gt;ph=new List&lt;
IMyTerminalBlock&gt;();int pi=0;int pj=0;public bool pk(string fn,string fo,bool fp,bool fq){if(!fq){pg.Clear();p4.GetBlockGroups(pg)
;pi=0;}for(;pi&lt;pg.Count;pi++){IMyBlockGroup fr=pg[pi];if(fr.Name.ToLower()==fo){if(!fq){pj=0;ph.Clear();fr.GetBlocks(ph);}else fq=
false;for(;pj&lt;ph.Count;pj++){if(!p1.sp(6))return false;if(fp&amp;&amp;ph[pj].CubeGrid!=p3)continue;if(p2.pz(ph[pj],fn))p5.Add(ph[pj]);}
return true;}}return true;}List&lt;IMyTerminalBlock&gt;pl=new List&lt;IMyTerminalBlock&gt;();int pm=0;public bool pn(string fs,string ft,bool
fu){int fv=ft.IndexOf(':');var fw=(fv&gt;=1&amp;&amp;fv&lt;=2?ft.Substring(0,fv):"");var fx=fw.Contains("T");if(fw!="")ft=ft.Substring(fv+1);if(
!fu){pl.Clear();pm=0;}var fy=(fw.Contains("G")?ft.Trim().ToLower():"");if(fy!=""){if(!pk(fs,fy,fx,fu))return false;return true;}if
(!fu)p2.py(ref pl,fs);if(ft==""||ft=="*"){if(!fu)p5.AddList(pl);if(fx)if(!pc(fu))return false;return true;}for(;pm&lt;pl.Count;pm++){
if(!p1.sp(4))return false;if(fx&amp;&amp;pl[pm].CubeGrid!=p3)continue;if(pl[pm].CustomName.Contains(ft))p5.Add(pl[pm]);}return true;}
public void po(td fz){p5.AddList(fz.p5);}public void pp(){p5.Clear();}public int pq(){return p5.Count;}}public class te {tq pr;
public MyGridProgram ps{get{return pr.sf;}}public IMyGridTerminalSystem pt{get{return pr.sf.GridTerminalSystem;}}
IMyGridTerminalSystem pu=null;Dictionary&lt;string,Action&lt;List&lt;IMyTerminalBlock&gt;,Func&lt;IMyTerminalBlock,bool&gt;&gt;&gt;pv=null;public te(tq fA
){pr=fA;pu=pr.sf.GridTerminalSystem;}public void pw(){if(pv!=null&amp;&amp;pt.GetBlocksOfType&lt;IMyCargoContainer&gt; ==pv["CargoContainer"])
return;pv=new Dictionary&lt;string,Action&lt;List&lt;IMyTerminalBlock&gt;,Func&lt;IMyTerminalBlock,bool&gt;&gt;&gt;(){{"CargoContainer",pt.GetBlocksOfType
&lt;IMyCargoContainer&gt;},{"TextPanel",pt.GetBlocksOfType&lt;IMyTextPanel&gt;},{"Assembler",pt.GetBlocksOfType&lt;IMyAssembler&gt;},{"Refinery",pt.
GetBlocksOfType&lt;IMyRefinery&gt;},{"Reactor",pt.GetBlocksOfType&lt;IMyReactor&gt;},{"SolarPanel",pt.GetBlocksOfType&lt;IMySolarPanel&gt;},{
"BatteryBlock",pt.GetBlocksOfType&lt;IMyBatteryBlock&gt;},{"Beacon",pt.GetBlocksOfType&lt;IMyBeacon&gt;},{"RadioAntenna",pt.GetBlocksOfType&lt;
IMyRadioAntenna&gt;},{"AirVent",pt.GetBlocksOfType&lt;IMyAirVent&gt;},{"ConveyorSorter",pt.GetBlocksOfType&lt;IMyConveyorSorter&gt;},{
"OxygenTank",pt.GetBlocksOfType&lt;IMyGasTank&gt;},{"OxygenGenerator",pt.GetBlocksOfType&lt;IMyGasGenerator&gt;},{"OxygenFarm",pt.
GetBlocksOfType&lt;IMyOxygenFarm&gt;},{"LaserAntenna",pt.GetBlocksOfType&lt;IMyLaserAntenna&gt;},{"Thrust",pt.GetBlocksOfType&lt;IMyThrust&gt;},{
"Gyro",pt.GetBlocksOfType&lt;IMyGyro&gt;},{"SensorBlock",pt.GetBlocksOfType&lt;IMySensorBlock&gt;},{"ShipConnector",pt.GetBlocksOfType&lt;
IMyShipConnector&gt;},{"ReflectorLight",pt.GetBlocksOfType&lt;IMyReflectorLight&gt;},{"InteriorLight",pt.GetBlocksOfType&lt;IMyInteriorLight&gt;}
,{"LandingGear",pt.GetBlocksOfType&lt;IMyLandingGear&gt;},{"ProgrammableBlock",pt.GetBlocksOfType&lt;IMyProgrammableBlock&gt;},{"TimerBlock",
pt.GetBlocksOfType&lt;IMyTimerBlock&gt;},{"MotorStator",pt.GetBlocksOfType&lt;IMyMotorStator&gt;},{"PistonBase",pt.GetBlocksOfType&lt;
IMyPistonBase&gt;},{"Projector",pt.GetBlocksOfType&lt;IMyProjector&gt;},{"ShipMergeBlock",pt.GetBlocksOfType&lt;IMyShipMergeBlock&gt;},{
"SoundBlock",pt.GetBlocksOfType&lt;IMySoundBlock&gt;},{"Collector",pt.GetBlocksOfType&lt;IMyCollector&gt;},{"JumpDrive",pt.GetBlocksOfType&lt;
IMyJumpDrive&gt;},{"Door",pt.GetBlocksOfType&lt;IMyDoor&gt;},{"GravityGeneratorSphere",pt.GetBlocksOfType&lt;IMyGravityGeneratorSphere&gt;},{
"GravityGenerator",pt.GetBlocksOfType&lt;IMyGravityGenerator&gt;},{"ShipDrill",pt.GetBlocksOfType&lt;IMyShipDrill&gt;},{"ShipGrinder",pt.
GetBlocksOfType&lt;IMyShipGrinder&gt;},{"ShipWelder",pt.GetBlocksOfType&lt;IMyShipWelder&gt;},{"LargeGatlingTurret",pt.GetBlocksOfType&lt;
IMyLargeGatlingTurret&gt;},{"LargeInteriorTurret",pt.GetBlocksOfType&lt;IMyLargeInteriorTurret&gt;},{"LargeMissileTurret",pt.
GetBlocksOfType&lt;IMyLargeMissileTurret&gt;},{"SmallGatlingGun",pt.GetBlocksOfType&lt;IMySmallGatlingGun&gt;},{"SmallMissileLauncherReload",
pt.GetBlocksOfType&lt;IMySmallMissileLauncherReload&gt;},{"SmallMissileLauncher",pt.GetBlocksOfType&lt;IMySmallMissileLauncher&gt;},{
"VirtualMass",pt.GetBlocksOfType&lt;IMyVirtualMass&gt;},{"Warhead",pt.GetBlocksOfType&lt;IMyWarhead&gt;},{"FunctionalBlock",pt.GetBlocksOfType
&lt;IMyFunctionalBlock&gt;},{"LightingBlock",pt.GetBlocksOfType&lt;IMyLightingBlock&gt;},{"ControlPanel",pt.GetBlocksOfType&lt;IMyControlPanel&gt;},
{"Cockpit",pt.GetBlocksOfType&lt;IMyCockpit&gt;},{"MedicalRoom",pt.GetBlocksOfType&lt;IMyMedicalRoom&gt;},{"RemoteControl",pt.GetBlocksOfType&lt;
IMyRemoteControl&gt;},{"ButtonPanel",pt.GetBlocksOfType&lt;IMyButtonPanel&gt;},{"CameraBlock",pt.GetBlocksOfType&lt;IMyCameraBlock&gt;},{
"OreDetector",pt.GetBlocksOfType&lt;IMyOreDetector&gt;},{"ShipController",pt.GetBlocksOfType&lt;IMyShipController&gt;}};}public void px(ref
List&lt;IMyTerminalBlock&gt;fB,string fC){Action&lt;List&lt;IMyTerminalBlock&gt;,Func&lt;IMyTerminalBlock,bool&gt;&gt;fD=null;if(pv.TryGetValue(fC,out fD)
)fD(fB,null);else{if(fC=="CryoChamber"){pt.GetBlocksOfType&lt;IMyCockpit&gt;(fB,fE=&gt;fE.BlockDefinition.ToString().Contains("Cryo"));
return;}}}public void py(ref List&lt;IMyTerminalBlock&gt;fF,string fG){px(ref fF,pA(fG.Trim()));}public bool pz(IMyTerminalBlock fH,
string fI){var fJ=pA(fI);switch(fJ){case "FunctionalBlock":return true;case "ShipController":return(fH as IMyShipController!=null)
;default:return fH.BlockDefinition.ToString().Contains(pA(fI));}}public string pA(string fK){fK=fK.ToLower();if(fK.StartsWith(
"carg")||fK.StartsWith("conta"))return "CargoContainer";if(fK.StartsWith("text")||fK.StartsWith("lcd"))return "TextPanel";if(fK.
StartsWith("ass"))return "Assembler";if(fK.StartsWith("refi"))return "Refinery";if(fK.StartsWith("reac"))return "Reactor";if(fK.
StartsWith("solar"))return "SolarPanel";if(fK.StartsWith("bat"))return "BatteryBlock";if(fK.StartsWith("bea"))return "Beacon";if(
fK.Contains("vent"))return "AirVent";if(fK.Contains("sorter"))return "ConveyorSorter";if(fK.Contains("tank"))return "OxygenTank";
if(fK.Contains("farm")&amp;&amp;fK.Contains("oxy"))return "OxygenFarm";if(fK.Contains("gene")&amp;&amp;fK.Contains("oxy"))return "OxygenGenerator"
;if(fK.Contains("cryo"))return "CryoChamber";if(fK=="laserantenna")return "LaserAntenna";if(fK.Contains("antenna"))return
"RadioAntenna";if(fK.StartsWith("thrust"))return "Thrust";if(fK.StartsWith("gyro"))return "Gyro";if(fK.StartsWith("sensor"))return
"SensorBlock";if(fK.Contains("connector"))return "ShipConnector";if(fK.StartsWith("reflector"))return "ReflectorLight";if((fK.
StartsWith("inter")&amp;&amp;fK.EndsWith("light")))return "InteriorLight";if(fK.StartsWith("land"))return "LandingGear";if(fK.StartsWith(
"program"))return "ProgrammableBlock";if(fK.StartsWith("timer"))return "TimerBlock";if(fK.StartsWith("motor"))return "MotorStator"
;if(fK.StartsWith("piston"))return "PistonBase";if(fK.StartsWith("proj"))return "Projector";if(fK.Contains("merge"))return
"ShipMergeBlock";if(fK.StartsWith("sound"))return "SoundBlock";if(fK.StartsWith("col"))return "Collector";if(fK.Contains("jump"))
return "JumpDrive";if(fK=="door")return "Door";if((fK.Contains("grav")&amp;&amp;fK.Contains("sphe")))return "GravityGeneratorSphere";if(fK
.Contains("grav"))return "GravityGenerator";if(fK.EndsWith("drill"))return "ShipDrill";if(fK.Contains("grind"))return
"ShipGrinder";if(fK.EndsWith("welder"))return "ShipWelder";if((fK.Contains("turret")&amp;&amp;fK.Contains("gatl")))return
"LargeGatlingTurret";if((fK.Contains("turret")&amp;&amp;fK.Contains("inter")))return "LargeInteriorTurret";if((fK.Contains("turret")&amp;&amp;fK.
Contains("miss")))return "LargeMissileTurret";if(fK.Contains("gatl"))return "SmallGatlingGun";if((fK.Contains("launcher")&amp;&amp;fK.
Contains("reload")))return "SmallMissileLauncherReload";if((fK.Contains("launcher")))return "SmallMissileLauncher";if(fK.Contains(
"mass"))return "VirtualMass";if(fK=="warhead")return "Warhead";if(fK.StartsWith("func"))return "FunctionalBlock";if(fK=="shipctrl"
)return "ShipController";if(fK.StartsWith("light"))return "LightingBlock";if(fK.StartsWith("contr"))return "ControlPanel";if(fK.
StartsWith("coc"))return "Cockpit";if(fK.StartsWith("medi"))return "MedicalRoom";if(fK.StartsWith("remote"))return "RemoteControl"
;if(fK.StartsWith("but"))return "ButtonPanel";if(fK.StartsWith("cam"))return "CameraBlock";if(fK.Contains("detect"))return
"OreDetector";return "Unknown";}}public static class tf {public static List&lt;double&gt;pB(IMyTerminalBlock fL,int fM=-1){var fN=new
List&lt;double&gt;();string[]fO=fL.DetailedInfo.Split('\n');int fP=Math.Min(fO.Length,(fM&gt;0?fM:fO.Length));for(int fQ=0;fQ&lt;fP;fQ++){
string[]fR=fO[fQ].Split(':');if(fR.Length&lt;2){fR=fO[fQ].Split('r');if(fR.Length&lt;2)fR=fO[fQ].Split('x');}var fS=(fR.Length&lt;2?fR[0]:
fR[1]);string[]fT=fS.Trim().Split(' ');var fU=fT[0].Trim();var fV=(fT.Length&gt;1&amp;&amp;fT[1].Length&gt;1?fT[1][0]:'.');double fW;if(Double.
TryParse(fU,out fW)){double fX=fW*Math.Pow(1000.0,".kMGTPEZY".IndexOf(fV));fN.Add(fX);}}return fN;}public static string pC(
IMyBatteryBlock fY){var fZ="";if(fY.GetValueBool("Recharge"))fZ="(+) ";else if(fY.GetValueBool("Discharge"))fZ="(-) ";else fZ=
"(±) ";return fZ+t8.nR((fY.CurrentStoredPower/fY.MaxStoredPower)*100.0f)+"%";}public static string pD(IMyLaserAntenna f_){string[]
g0=f_.DetailedInfo.Split('\n');return g0[g0.Length-1].Split(' ')[0].ToUpper();}public static double pE(IMyJumpDrive g1,out double
g2,out double g3){List&lt;double&gt;g4=pB(g1,5);if(g4.Count&lt;4){g3=0;g2=0;return 0;}g3=g4[1];g2=g4[3];return(g3&gt;0?g2/g3*100:0);}public
static double pF(IMyJumpDrive g5){List&lt;double&gt;g6=pB(g5,5);double g7=0,g8=0;if(g6.Count&lt;4)return 0;g7=g6[1];g8=g6[3];return(g7&gt;0?g8
/g7*100:0);}public static string pG(IMyLandingGear g9){var ga="udoesnp";string[]gb=g9.DetailedInfo.Split('\n');var gc=gb[gb.Length
-1];string[]gd=gc.Split(':');string ge;if(gd.Length&lt;2){ge=gd[0].Trim().ToLower();if(ge.StartsWith("slot status"))ge=ge.Substring(
11);}else ge=gd[1].Trim().ToLower();if(ge=="")return M.T["W8"];if(ge.Split(' ').Length&gt;1)return M.T["W10"];if((ga.IndexOf(ge[0])&lt;0
)&amp;&amp;!ge.StartsWith("au"))return M.T["W7"];return M.T["W8"];}}public static class MMItems {public static Dictionary&lt;string,tg&gt;pH=new
Dictionary&lt;string,tg&gt;();static Dictionary&lt;string,tg&gt;pI=new Dictionary&lt;string,tg&gt;();public static List&lt;string&gt;pJ=new List&lt;string&gt;()
;public static Dictionary&lt;string,tg&gt;pK=new Dictionary&lt;string,tg&gt;();public static void Add(string gf,string gg,int gh,string gi,
string gj,bool gk){if(gg=="Ammo")gg="AmmoMagazine";else if(gg=="Tool")gg="PhysicalGunObject";var gl=gf+' '+gg;tg gm=new tg(gf,gg,
gh,gi,gj,gk);pH.Add(gl,gm);if(!pI.ContainsKey(gf))pI.Add(gf,gm);if(gj!="")pK.Add(gj.ToLower(),gm);pJ.Add(gl);}public static tg pL(
string gn="",string go=""){if(pH.ContainsKey(gn+" "+go))return pH[gn+" "+go];if(go==""){tg gp=null;pI.TryGetValue(gn,out gp);
return gp;}if(gn=="")for(int gq=0;gq&lt;pH.Count;gq++){tg gp=pH[pJ[gq]];if(go==gp.pN)return gp;}return null;}}public class tg {public
string pM;public string pN;public int pO;public string pP;public string pQ;public bool pR;public tg(string gs,string gt,int gu=0,
string gv="",string gw="",bool gx=true){pM=gs;pN=gt;pO=gu;pP=gv;pQ=gw;pR=gx;}}public class th {static Dictionary&lt;string,string&gt;pS=
new Dictionary&lt;string,string&gt;(){{"ingot","ingot" },{"ore","ore" },{"component","component" },{"tool","physicalgunobject" },{"ammo"
,"ammomagazine" },{"oxygen","oxygencontainerobject" },{"gas","gascontainerobject" }};tq pT;tj pU;tj pV;tj pW;bool pX;public tj pY;
public th(tq gy,int gz=20){pU=new tj();pV=new tj();pW=new tj();pX=false;pY=new tj();pT=gy;}public void pZ(){pW.ql();pV.ql();pU.ql(
);pX=false;pY.ql();}public void p_(string gA,bool gB=false,int gC=1,int gD=-1){if(gA==""){pX=true;return;}string[]gE=gA.Split(' ')
;var gF="";ti gG=new ti(gB,gC,gD);if(gE.Length==2){if(!pS.TryGetValue(gE[1],out gF))gF=gE[1];}var gH=gE[0];if(pS.TryGetValue(gH,
out gG.qc)){pV.qh(gG.qc,gG);return;}t8.nP(ref gH,ref gF);if(gF==""){gG.qb=gH.ToLower();pU.qh(gG.qb,gG);return;}gG.qb=gH;gG.qc=gF;
pW.qh(gH.ToLower()+' '+gF.ToLower(),gG);}public ti q0(string gI,string gJ,string gK){ti gL;gI=gI.ToLower();gL=pW.qj(gI);if(gL!=
null)return gL;gJ=gJ.ToLower();gL=pU.qj(gJ);if(gL!=null)return gL;gK=gK.ToLower();gL=pV.qj(gK);if(gL!=null)return gL;return null;}
public bool q1(string gM,string gN,string gO){ti gP;var gQ=false;gP=pV.qj(gO.ToLower());if(gP!=null){if(gP.qd)return true;gQ=true;
}gP=pU.qj(gN.ToLower());if(gP!=null){if(gP.qd)return true;gQ=true;}gP=pW.qj(gM.ToLower());if(gP!=null){if(gP.qd)return true;gQ=
true;}return!(pX||gQ);}public ti q2(string gR,string gS,string gT){ti gU=new ti();gR=gR.ToLower();ti gV=q0(gR,gS.ToLower(),gT.
ToLower());if(gV!=null){gU.q9=gV.q9;gU.qa=gV.qa;}gU.qb=gS;gU.qc=gT;pY.qh(gR,gU);return gU;}public ti q3(string gW,string gX,string
gY){ti gZ=pY.qj(gW.ToLower());if(gZ==null)gZ=q2(gW,gX,gY);return gZ;}int q4=0;List&lt;ti&gt;q5;public List&lt;ti&gt;q6(string g_,bool h0){if(!
h0){q5=new List&lt;ti&gt;();q4=0;}for(;q4&lt;pY.qi();q4++){if(!pT.sp(5))return null;ti h1=pY.qk(q4);if(q1((h1.qb+' '+h1.qc).ToLower(),h1.qb
,h1.qc))continue;if(h1.qc==g_)q5.Add(h1);}return q5;}int q7=0;public bool q8(bool h2){if(!h2){q7=0;}for(;q7&lt;MMItems.pJ.Count;q7++)
{if(!pT.sp(10))return false;tg h3=MMItems.pH[MMItems.pJ[q7]];if(!h3.pR)continue;var h4=h3.pM+' '+h3.pN;if(q1(h4,h3.pM,h3.pN))
continue;ti h5=q3(h4,h3.pM,h3.pN);if(h5.qa==-1)h5.qa=h3.pO;}return true;}}public class ti {public int q9;public int qa;public
string qb="";public string qc="";public bool qd;public double qe;public ti(bool h6=false,int h7=1,int h8=-1){q9=h7;qd=h6;qa=h8;}}
public class tj {Dictionary&lt;string,ti&gt;qf=new Dictionary&lt;string,ti&gt;();List&lt;string&gt;qg=new List&lt;string&gt;();public void qh(string h9,ti
ha){if(!qf.ContainsKey(h9)){qg.Add(h9);qf.Add(h9,ha);}}public int qi(){return qf.Count;}public ti qj(string hb){if(qf.ContainsKey(
hb))return qf[hb];return null;}public ti qk(int hc){return qf[qg[hc]];}public void ql(){qg.Clear();qf.Clear();}public void qm(){qg
.Sort();}}public class tk {tq qn;public MyDefinitionId qo=new MyDefinitionId(typeof(VRage.Game.ObjectBuilders.Definitions.
MyObjectBuilder_GasProperties),"Electricity");public MyDefinitionId qp=new MyDefinitionId(typeof(VRage.Game.ObjectBuilders.
Definitions.MyObjectBuilder_GasProperties),"Oxygen");public MyDefinitionId qq=new MyDefinitionId(typeof(VRage.Game.ObjectBuilders.
Definitions.MyObjectBuilder_GasProperties),"Hydrogen");public tk(tq hd){qn=hd;}int qr=0;public bool qs(List&lt;IMyTerminalBlock&gt;he,
ref double hf,ref double hg,ref double hh,ref double hi,ref double hj,ref double hk,bool hl){if(!hl)qr=0;MyResourceSinkComponent
hm;MyResourceSourceComponent hn;for(;qr&lt;he.Count;qr++){if(!qn.sp(8))return false;if(he[qr].Components.TryGet&lt;
MyResourceSinkComponent&gt;(out hm)){hf+=hm.CurrentInputByType(qo);hg+=hm.MaxRequiredInputByType(qo);}if(he[qr].Components.TryGet&lt;
MyResourceSourceComponent&gt;(out hn)){hh+=hn.CurrentOutputByType(qo);hi+=hn.MaxOutputByType(qo);}hj+=(he[qr]as IMyBatteryBlock).
CurrentStoredPower;hk+=(he[qr]as IMyBatteryBlock).MaxStoredPower;}return true;}int qt=0;public bool qu(List&lt;IMyTerminalBlock&gt;ho,
MyDefinitionId hp,ref double hq,ref double hr,ref double hs,ref double ht,bool hu){if(!hu)qt=0;MyResourceSinkComponent hv;
MyResourceSourceComponent hw;for(;qt&lt;ho.Count;qt++){if(!qn.sp(6))return false;if(ho[qt].Components.TryGet&lt;MyResourceSinkComponent&gt;
(out hv)){hq+=hv.CurrentInputByType(hp);hr+=hv.MaxRequiredInputByType(hp);}if(ho[qt].Components.TryGet&lt;MyResourceSourceComponent&gt;(
out hw)){hs+=hw.CurrentOutputByType(hp);ht+=hw.MaxOutputByType(hp);}}return true;}int qv=0;public bool qw(List&lt;IMyTerminalBlock&gt;hx
,string hy,ref double hz,ref double hA,bool hB){hy=hy.ToLower();if(!hB){qv=0;hA=0;hz=0;}MyResourceSinkComponent hC;for(;qv&lt;hx.
Count;qv++){if(!qn.sp(30))return false;IMyGasTank hD=hx[qv]as IMyGasTank;if(hD==null)continue;double hE=0;if(hD.Components.TryGet&lt;
MyResourceSinkComponent&gt;(out hC)){ListReader&lt;MyDefinitionId&gt;hF=hC.AcceptedResources;int hG=0;for(;hG&lt;hF.Count;hG++){if(hF[hG].
SubtypeId.ToString().ToLower()==hy){hE=100;hA+=hE;hz+=hE*hD.FilledRatio;break;}}}}return true;}}public class tl {tn qx=null;public
tm qy=new tm();public to qz=null;public IMyTextPanel qA=null;public int qB=0;public string qC="";public string qD="";public bool
qE=true;public tl(tn hH,string hI){qx=hH;qD=hI;}public bool qF(){return qz.rF.Count&gt;qz.rB||qz.rC!=0;}public void qG(float hJ){for(
int hK=0;hK&lt;qy.qO();hK++)qy.qQ(hK).SetValueFloat("FontSize",hJ);}public void qH(){qy.qS();qA=qy.qQ(0);int hL=qA.CustomName.IndexOf
("!MARGIN:");if(hL&lt;0||hL+8&gt;=qA.CustomName.Length){qB=1;qC=" ";}else{var hM=qA.CustomName.Substring(hL+8);int hN=hM.IndexOf(" ");if
(hN&gt;=0)hM=hM.Substring(0,hN);if(!int.TryParse(hM,out qB))qB=1;qC=new String(' ',qB);}if(qA.CustomName.Contains("!NOSCROLL"))qE=
false;else qE=true;}public bool qI(){return(qA.BlockDefinition.SubtypeId.Contains("Wide")||qA.DefinitionDisplayNameText==
"Computer Monitor");}public void qJ(){if(qz==null||qA==null)return;float hO=qA.GetValueFloat("FontSize");for(int hP=0;hP&lt;qy.qO();
hP++){IMyTextPanel hQ=qy.qQ(hP);if(hP&gt;0)hQ.SetValueFloat("FontSize",hO);hQ.WritePublicText(qz.rR(hP));if(qx.r0)hQ.
ShowTextureOnScreen();hQ.ShowPublicTextOnScreen();}}}public class tm {Dictionary&lt;string,IMyTextPanel&gt;qK=new Dictionary&lt;string,
IMyTextPanel&gt;();List&lt;string&gt;qL=new List&lt;string&gt;();public void qM(string hR,IMyTextPanel hS){if(!qL.Contains(hR)){qL.Add(hR);qK.Add
(hR,hS);}}public void qN(string hT){if(qL.Contains(hT)){qL.Remove(hT);qK.Remove(hT);}}public int qO(){return qK.Count;}public
IMyTextPanel qP(string hU){if(qL.Contains(hU))return qK[hU];return null;}public IMyTextPanel qQ(int hV){return qK[qL[hV]];}public
void qR(){qL.Clear();qK.Clear();}public void qS(){qL.Sort();}}public class tn {public const float qV=512/0.7783784f;public string
qX="T:[LCD]";public int qY=1;public bool qZ=true;public List&lt;string&gt;q_=null;public bool r0=true;public bool r1=false;public float
r2=1.0f;public float r3=1.0f;public float r4;float r5;float r6;float r7;int r8=0;string r9="";tq ra;public MyGridProgram rb;public
tk rc;public te rd;public tc re;public IMyGridTerminalSystem rf{get{return rb.GridTerminalSystem;}}public IMyProgrammableBlock rg{
get{return rb.Me;}}public Action&lt;string&gt;rh{get{return rb.Echo;}}public tn(MyGridProgram hW,bool hX,tq hY){ra=hY;r1=hX;rb=hW;rc=new
tk(hY);rd=new te(hY);rd.pw();tr.sy();r5=tr.sv(' ');r6=tr.sv('\'');r7=tr.sv('[');r4=tr.sw(" 100.0%");re=new tc(ra);ra.sh(re,0);}
Dictionary&lt;IMyTextPanel,to&gt;ri=new Dictionary&lt;IMyTextPanel,to&gt;();public to rj=null;public to rk(to hZ,tl h_){h_.qH();IMyTextPanel
i0=h_.qA;if(hZ==null)hZ=new to(this,i0.GetValueFloat("FontSize"));else hZ.rI(i0.GetValueFloat("FontSize"));hZ.rJ(h_.qy.qO());hZ.rA
=(h_.qI()?2.0f:1.0f)*r2/hZ.rz;r9=h_.qC;r8=h_.qB;rj=hZ;return hZ;}public void rl(tl i1){rj=i1.qz;}public void rm(string i2){if(rj.
rH&lt;=0)i2=r9+i2;rj.rO(i2);}public void rn(string i3){rj.rN(i3,r9);}public void ro(List&lt;string&gt;i4){rj.rL(i4);}public void Add(string
i5){if(rj.rH&lt;=0)i5=r9+i5;rj.rK(i5);rj.rH+=tr.sw(i5);}public void rp(string i6,float i7=1.0f,float i8=0f){rq(i6,i7,i8);rm("");}
public void rq(string i9,float ia=1.0f,float ib=0f){float ic=tr.sw(i9);float id=ia*qV*rj.rA-rj.rH-ib;if(r8&gt;0)id-=r5*r8;if(id&lt;ic){
rj.rK(i9);rj.rH+=ic;return;}id-=ic;int ie=(int)Math.Floor(id/r5);float ig=ie*r5;rj.rK(new String(' ',ie)+i9);rj.rH+=ig+ic;}public
void rr(string ih){rs(ih);rm("");}public void rs(string ii){float ij=tr.sw(ii);float ik=qV/2*rj.rA-rj.rH;if(ik&lt;ij/2){rj.rK(ii);rj.
rH+=ij;return;}ik-=ij/2;int il=(int)Math.Round(ik/r5,MidpointRounding.AwayFromZero);float im=il*r5;rj.rK(new String(' ',il)+ii);rj
.rH+=im+ij;}public void rt(double io,float ip=1.0f,float iq=0f){if(r8&gt;0)iq+=r8*r5*((rj.rH&lt;=0)?2:1);float ir=qV*ip*rj.rA-rj.rH-iq;
if(Double.IsNaN(io))io=0;int it=(int)(ir/r6)-2;if(it&lt;=0)it=2;int iu=Math.Min((int)(io*it)/100,it);if(iu&lt;0)iu=0;rj.rO((rj.rH&lt;=0?r9:
"")+"["+new String('|',iu)+new String('\'',it-iu)+"]");}public void ru(double iv,float iw=1.0f,float ix=0f){if(r8&gt;0)ix+=r8*r5*((rj
.rH&lt;=0)?2:1);float iy=qV*iw*rj.rA-rj.rH-ix;if(Double.IsNaN(iv))iv=0;int iz=(int)(iy/r6)-2;if(iz&lt;=0)iz=2;int iA=Math.Min((int)(iv*
iz)/100,iz);if(iA&lt;0)iA=0;rj.rK((rj.rH&lt;=0?r9:"")+"["+new String('|',iA)+new String('\'',iz-iA)+"]");rj.rH+=(rj.rH&lt;=0?r8*r5:0)+r6*iz
+2*r7;}public void rv(){rj.rP();}public void rw(tl iB){iB.qJ();if(iB.qE)rj.rV();}public void rx(string iC,string iD){IMyTextPanel
iE=rb.GridTerminalSystem.GetBlockWithName(iC)as IMyTextPanel;if(iE==null)return;iE.WritePublicText(iD+"\n",true);}}public class to
{tn ry=null;public float rz=1.0f;public float rA=1.0f;public int rB=17;public int rC=0;int rD=1;int rE=1;public List&lt;string&gt;rF=new
List&lt;string&gt;();public int rG=0;public float rH=0;public to(tn iF,float iG=1.0f){ry=iF;rI(iG);rF.Add("");}public void rI(float iH){
rz=iH;rB=(int)Math.Floor(512/0.7783784f*ry.r3*rE/rz/37);}public void rJ(int iI){rE=iI;rB=(int)Math.Floor(512/0.7783784f*ry.r3*rE/
rz/37);}public void rK(string iJ){rF[rG]+=iJ;}public void rL(List&lt;string&gt;iK){if(rF[rG]=="")rF.RemoveAt(rG);else rG++;rF.AddList(iK
);rG+=iK.Count;rF.Add("");rH=0;}public List&lt;string&gt;rM(){if(rF[rG]=="")return rF.GetRange(0,rG);else return rF;}public void rN(
string iL,string iM=""){string[]iN=iL.Split('\n');for(int iO=0;iO&lt;iN.Length;iO++)rO(iM+iN[iO]);}public void rO(string iP){rF[rG]+=
iP;rF.Add("");rG++;rH=0;}public void rP(){rF.Clear();rF.Add("");rH=0;rG=0;}public string rQ(){return String.Join("\n",rF);}public
string rR(int iQ=0){if(rF.Count&lt;rB/rE){if(iQ!=0)return "";rC=0;rD=1;return rQ();}int iR=rC+iQ*(rB/rE);if(iR&gt;rF.Count)iR=rF.Count;
List&lt;string&gt;iS=rF.GetRange(iR,Math.Min(rF.Count-iR,rB/rE));return String.Join("\n",iS);}public bool rS(int iT=-1){if(iT&lt;=0)iT=ry.
qY;if(rC-iT&lt;=0){rC=0;return true;}rC-=iT;return false;}public bool rT(int iU=-1){if(iU&lt;=0)iU=ry.qY;int iV=rF.Count-1;if(rC+iU+rB&gt;=
iV){rC=Math.Max(iV-rB,0);return true;}rC+=iU;return false;}public int rU=0;public void rV(){if(rU&gt;0){rU--;return;}if(rF.Count-1&lt;=
rB){rC=0;rD=1;return;}if(rD&gt;0){if(rT()){rD=-1;rU=2;}}else{if(rS()){rD=1;rU=2;}}}}public class tp {public string rW="MMTask";public
double rX=0;public double rY=0;public double rZ=0;public double r_=-1;public bool s0=false;public bool s1=false;double s2=0;
protected tq s3;public void s4(tq iW){s3=iW;}protected bool s5(double iX){s2=Math.Max(iX,0.0001);return true;}public bool s6(){if(
rY&gt;0){rZ=s3.sb-rY;s3.sj((s1?"Running":"Resuming")+" task: "+rW);s1=Run(!s1);}else{rZ=0;s3.sj("Init task: "+rW);Init();s3.sj(
"Running..");s1=Run(false);if(!s1)rY=0.001;}if(s1){rY=s3.sb;if((r_&gt;=0||s2&gt;0)&amp;&amp;s0)s3.sh(this,(s2&gt;0?s2:r_));else{s0=false;rY=0;}}
else{if(s0)s3.sh(this,0,true);}s3.sj("Task "+(s1?"":"NOT ")+"finished. "+(s0?(s2&gt;0?"Postponed by "+s2.ToString("F1")+"s":
"Scheduled after "+r_.ToString("F1")+"s"):"Stopped."));s2=0;return s1;}public void s7(){s3.si(this);End();s0=false;s1=false;rY=0;}
public virtual void Init(){}public virtual bool Run(bool iY){return true;}public virtual void End(){}}public class tq {public
double sb{get{return sd;}}int sc=1000;double sd=0;List&lt;tp&gt;se=new List&lt;tp&gt;(100);public MyGridProgram sf;bool sg=true;public tq(
MyGridProgram iZ,bool i_=true){sf=iZ;sg=i_;}public void sh(tp j0,double j1,bool j2=false){sj("Scheduling task: "+j0.rW+" after "+
j1.ToString("F2"));j0.s0=true;j0.s4(this);if(j2){j0.rX=sb;se.Insert(0,j0);return;}if(j1&lt;=0)j1=0.001;j0.rX=sb+j1;for(int j3=0;j3&lt;se
.Count;j3++){if(se[j3].rX&gt;j0.rX){se.Insert(j3,j0);return;}if(j0.rX-se[j3].rX&lt;0.05)j0.rX=se[j3].rX+0.05;}se.Add(j0);}public void si
(tp j4){if(se.Contains(j4)){se.Remove(j4);j4.s0=false;}}public void sj(string j5){if(sg)sf.Echo(j5);}public void sk(){double j6=sf
.Runtime.TimeSinceLastRun.TotalSeconds;sd+=j6;sj("Total time: "+sd.ToString("F1")+" Time Step: "+j6.ToString("F2"));sc=(int)Math.
Min((j6*60)*1000,20000-1000);sj("Total tasks: "+se.Count+" InstrPerRun: "+sc);while(se.Count&gt;=1){tp j7=se[0];if(sc-sf.Runtime.
CurrentInstructionCount&lt;=0)break;if(j7.rX&gt;sd)break;se.Remove(j7);if(!j7.s6())break;sj("Done. NextExecTime: "+j7.rX.ToString("F1"))
;sj("Remaining Instr: "+so().ToString());}}int sl=0;StringBuilder sm=new StringBuilder();public void sn(){double j8=sf.Runtime.
LastRunTimeMs*1000;if(sl==5000){IMyTextPanel j9=sf.GridTerminalSystem.GetBlockWithName("AUTOLCD Profiler")as IMyTextPanel;if(j9==
null)return;j9.WritePublicText(sm.ToString());sl++;return;}sm.Append(sl).Append(";").AppendLine(j8.ToString("F2"));sl++;}public
int so(){return(20000-sf.Runtime.CurrentInstructionCount);}public bool sp(int ja){return((20000-sf.Runtime.CurrentInstructionCount
)&gt;=ja);}public void sq(){sj("Remaining Instr: "+so().ToString());}}public static class tr {static Dictionary&lt;char,float&gt;sr=new
Dictionary&lt;char,float&gt;();static float ss=1f;static float st=10f;public static float su=-1f;static void AddCharsSize(string jb,
float jc){jc+=1;for(int jd=0;jd&lt;jb.Length;jd++){if(jc&gt;ss)ss=jc;sr.Add(jb[jd],jc);}}public static float sv(char je){float jf;if(!sr
.TryGetValue(je,out jf))return ss;return jf;}public static float sw(string jg){if(su&gt;0)return jg.Length*ss;float jh=0;for(int ji=0
;ji&lt;jg.Length;ji++)jh+=sv(jg[ji]);return jh;}public static string sx(string jj,float jk){if(jk/ss&gt;=jj.Length)return jj;float jl=sw
(jj);if(jl&lt;=jk)return jj;float jm=jl/jj.Length;jk-=st;int jn=(int)(jk/jm);jj=jj.Substring(0,jn);jl=sw(jj);while(jl&gt;jk){jn--;jl-=sv
(jj[jn]);jj.Remove(jn);}return jj+"..";}public static void sy(){if(sr.Count&gt;0)return;if(su&gt;0){ss=su+1;st=2*ss;return;}

// Font characters width (font "aw" values here)
AddCharsSize("3FKTabdeghknopqsuy£µÝàáâãäåèéêëðñòóôõöøùúûüýþÿāăąďđēĕėęěĝğġģĥħĶķńņňŉōŏőśŝşšŢŤŦũūŭůűųŶŷŸșȚЎЗКЛбдекруцяёђћўџ", 17f);
AddCharsSize("#0245689CXZ¤¥ÇßĆĈĊČŹŻŽƒЁЌАБВДИЙПРСТУХЬ€", 19f);
AddCharsSize("$&amp;GHPUVY§ÙÚÛÜÞĀĜĞĠĢĤĦŨŪŬŮŰŲОФЦЪЯжы†‡", 20f);
AddCharsSize("ABDNOQRSÀÁÂÃÄÅÐÑÒÓÔÕÖØĂĄĎĐŃŅŇŌŎŐŔŖŘŚŜŞŠȘЅЊЖф□", 21f);
AddCharsSize("(),.1:;[]ft{}·ţťŧț", 9f);
AddCharsSize("+&lt;=&gt;E^~¬±¶ÈÉÊË×÷ĒĔĖĘĚЄЏЕНЭ−", 18f);
AddCharsSize(" !I`ijl ¡¨¯´¸ÌÍÎÏìíîïĨĩĪīĮįİıĵĺļľłˆˇ˘˙˚˛˜˝ІЇії‹›∙", 8f);
AddCharsSize("7?Jcz¢¿çćĉċčĴźżžЃЈЧавийнопсъьѓѕќ", 16f);
AddCharsSize("L_vx«»ĹĻĽĿŁГгзлхчҐ–•", 15f);
AddCharsSize("\"-rª­ºŀŕŗř", 10f);
AddCharsSize("mw¼ŵЮщ", 27f);
AddCharsSize("MМШ", 26f);
AddCharsSize("WÆŒŴ—…‰", 31f);
AddCharsSize("'|¦ˉ‘’‚", 6f);
AddCharsSize("*²³¹", 11f);
AddCharsSize("\\°“”„", 12f);
AddCharsSize("/ĳтэє", 14f);
AddCharsSize("%ĲЫ", 24f);
AddCharsSize("@©®мшњ", 25f);
AddCharsSize("\n", 0f);
AddCharsSize("¾æœЉ", 28f);
AddCharsSize("½Щ", 29f);
AddCharsSize("ј", 7f);
AddCharsSize("љ", 22f);
AddCharsSize("ґ", 13f);
AddCharsSize("ю", 23f);
AddCharsSize("™", 30f);
AddCharsSize("", 34f);
AddCharsSize("", 32f);
AddCharsSize("", 41f);
// End of font characters width
 st=sv('.')*2;}}

public static class M
{
public static readonly Dictionary&lt;string, string&gt; T = new Dictionary&lt;string, string&gt;
{
// TRANSLATION STRINGS
// msg id, text
{ "AC1", "Acceleration:" },
{ "A1", "EMPTY" }, // amount
{ "ALT1", "Altitude:"}, // NEW
{ "ALT2", "Ground:"}, // NEW
{ "B1", "Booting up..." },
{ "C1", "count:" },
{ "C2", "Cargo Used:" },
{ "C3", "Invalid countdown format, use:" },
{ "C4", "EXPIRED" },
{ "C5", "days" },
{ "D1", "You need to enter name." },
{ "D2", "No blocks found." },
{ "D3", "No damaged blocks found." },
{ "DTU", "Invalid GPS format" }, // NEW
{ "GA", "Artif."}, // NEW (don't use more than 5 characters)
{ "GN", "Natur."}, // NEW (don't use more than 5 characters)
{ "GT", "Total"}, // NEW (don't use more than 5 characters)
{ "G1", "Total Gravity:"}, // NEW
{ "G2", "Natur. Gravity:"}, // NEW
{ "G3", "Artif. Gravity:"}, // NEW
{ "H1", "Write commands to Custom Data of this panel." }, // UPDATED
// inventory
{ "I1", "ore" },
{ "I2", "summary" },
{ "I3", "Ores" },
{ "I4", "Ingots" },
{ "I5", "Components" },
{ "I6", "Gas" },
{ "I7", "Ammo" },
{ "I8", "Tools" },
{ "M1", "Cargo Mass:" },
// oxygen
{ "O1", "Leaking" },
{ "O2", "Oxygen Farms" },
{ "O3", "No oxygen blocks found." },
{ "O4", "Oxygen Tanks" },
// position
{ "P1", "Block not found" },
{ "P2", "Location" },
// power
{ "P3", "Stored" },
{ "P4", "Output" },
{ "P5", "Input" },
{ "P6", "No power source found!" },
{ "P7", "Batteries" },
{ "P8", "Total Output" },
{ "P9", "Reactors" },
{ "P10", "Solars" },
{ "P11", "Power" },
{ "PT1", "Power Time:" },
{ "PT2", "Charge Time:" },
{ "PU1", "Power Used:" }, // NEW
{ "S1", "Speed:" },
{ "SM1", "Ship Mass:" }, // NEW
{ "SM2", "Ship Base Mass:" }, // NEW
{ "SD", "Stop Distance:" }, // NEW
{ "ST", "Stop Time:" }, // NEW
// text
{ "T1", "Source LCD not found: " },
{ "T2", "Missing source LCD name" },
{ "T3", "LCD Private Text is empty" },
// tanks
{ "T4", "Missing tank type. eg: 'Tanks * Hydrogen'" },
{ "T5", "No {0} tanks found." }, // {0} is tank type
{ "T6", "Tanks" },
{ "UC", "Unknown command" },
// occupied &amp; dampeners
{ "SC1", "Cannot find control block." },
{ "SCD", "Dampeners: " },
{ "SCO", "Occupied: " },
// working
{ "W1", "OFF" },
{ "W2", "WORK" },
{ "W3", "IDLE" },
{ "W4", "LEAK" },
{ "W5", "OPEN" },
{ "W6", "CLOSED" },
{ "W7", "LOCK" },
{ "W8", "UNLOCK" },
{ "W9", "ON" },
{ "W10", "READY" }
};
}</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>77282074576838537</EntityId>
              <Min x="-1" y="16" z="21" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>PBradar</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Program>// -- BASIC SETTINGS -- 
bool _longRangeMode = true;                    // set this to true to enable long range mode (uses camera instead of sensor)   
                                                                     // if '_longRangeMode = true;' replace the sensor on your radar with a camera,   
                                                                     // you do not need both.   
int _longRangeModeRange = 1000;             // 500 metres (WARNING: the higher this number, the more game performance   
                                                                     // will be affected)   
 
string _sensorName = "Sensor [Radar]";    // suggested settings: front 50m, left and right 3m, top and bottom 5m, back 1m   
string _cameraName = "CamRadar";  // NOTE: RaycastDistanceLimit is infinite (cannot be changed in ingame scripts)   
                                                                     //            RaycastConeLimit is 45 desgrees +/- of zero (cannot be changed in ingame scripts)   
 
string _lcdName = "LCDRadar"; 
string _rotorName = "Rradar";          // recommended rotation ~12.5rpm, safety lock 50 mp/s   
 
bool _hideDetectingMessage = false;        // show/hide the LCD top line message 'Target Distance: 72m --- Detecting: true' 
 
string _objectsToHide = "";                         // use this setting to hide objects from your radar. 
                                                                    // "Item01,Item02" etc 
 
// -- ADVANCED SETTINGS --     
int _refreshRate = 1;                                    // script runs per second, for performance reasons. 60 for realtime.   
                                                                    // the lower this number, the longer range you will get with Long Range Mode enabled.
                                                                    // recommend 40 for short range mode, 1 for long range mode.

float _fontSize = 0.4f;                                 // choose fontsize, 0.3f to see everything   
bool _upsideDown = false;                         // set this to true if your rotor is upside down 
 
// -- NOT SETTINGS - DO NOT EDIT BELOW THIS LINE --  
List&lt;IMyTextPanel&gt; _lcds; 
IMyMotorStator _rotor; 
IMySensorBlock _sensor; 
IMyCameraBlock _camera; 
 
string[] _matrix; 
bool _detecting = false; 
int _ticks = 0; 
List&lt;string&gt; _scanData = new List&lt;string&gt;(); 
double _sensorRange = 0d; 
float _rotorOffset = -90f; 
double _distance = 0d; 
int _center = 25; 
double[] _lineX = new double[25]; 
double[] _lineY = new double[25]; 
double[] _oldLineX = new double[25]; 
double[] _oldLineY = new double[25]; 
List&lt;Vector3D&gt; _vecDims = new List&lt;Vector3D&gt;(); 
double _angle = 0; 
List&lt;string&gt; _exclusionList; 
 
bool _initialized = false; 
 
void Main(string argument) 
{ 
    if (_initialized == false) this.Init(); 
 
    _angle = (_rotor.Angle + MathHelper.ToRadians(_rotorOffset)); 
    if (_upsideDown) _angle = (MathHelper.ToRadians(180) - _angle); 
 
    _ticks++; 
 
    if (_ticks == 60 / _refreshRate) 
    { 
        _ticks = 0; 
 
        if (_longRangeMode == false) 
            this.SensorScan(); 
        else 
            this.CameraScan(); 
 
        if (_detecting == true) 
        { 
            double x = _center + ((Math.Cos(_angle) * _distance) / (_sensorRange / 25d)); 
            double y = _center + ((Math.Sin(_angle) * _distance) / (_sensorRange / 25d)); 
 
            Echo(string.Format("x: {0}, y: {1}", (int)x, (int)y)); 
 
            string storeLine = string.Format("{0}:{1}", (int)x, (int)y); 
 
            if (_scanData.Count == 0 || _scanData[_scanData.Count - 1] != storeLine) 
                _scanData.Add(storeLine); 
        } 
 
        if (_detecting == false || _scanData.Count &gt; 2500) 
            _scanData.Clear(); 
    } 
 
    for (int i = 0; i &lt; 25; i++) 
    { 
        _lineX[i] = _center + (Math.Cos(_angle) * i); 
        _lineY[i] = _center + (Math.Sin(_angle) * i); 
 
        this.Plot((int)_oldLineX[i], (int)_oldLineY[i], '_'); 
 
        this.Plot((int)_lineX[i], (int)_lineY[i], 'x'); 
 
        _oldLineX[i] = _lineX[i]; 
        _oldLineY[i] = _lineY[i]; 
    } 
 
    this.Refresh(); 
} 
 
void Init() 
{ 
    try 
    { 
        if (_longRangeMode == false) 
        { 
            _sensor = this.GetBlock&lt;IMySensorBlock&gt;(_sensorName); 
            if (_sensor == default(IMySensorBlock)) throw new Exception(string.Format("No sensor found with name {0}.", _sensorName)); 
        } 
        else 
        { 
            _camera = this.GetBlock&lt;IMyCameraBlock&gt;(_cameraName); 
            if (_camera == default(IMyCameraBlock)) throw new Exception(string.Format("No camera found with name {0}.", _cameraName)); 
            _camera.EnableRaycast = true; 
        } 
 
        _rotor = this.GetBlock&lt;IMyMotorStator&gt;(_rotorName); 
        if (_rotor == default(IMyMotorStator)) throw new Exception(string.Format("No rotor found with name {0}.", _rotorName)); 
 
        _lcds = this.GetBlocks&lt;IMyTextPanel&gt;(_lcdName); 
        if (_lcds == null || _lcds.Count == 0) throw new Exception(string.Format("No LCD(s) found with name {0}.", _lcdName)); 
        for (int i = 0; i &lt; _lcds.Count; i++) _lcds[i].SetValue&lt;float&gt;("FontSize", _fontSize); 
 
        if (_matrix == null) _matrix = new string[50]; 
        for (int a = 0; a &lt; 50; a++) 
        { 
            _matrix[a] = ""; 
 
            for (int b = 0; b &lt; 50; b++) 
            { 
                _matrix[a] += "x_"; 
            } 
 
            _matrix[a] += "\n"; 
        } 
 
        _exclusionList = new List&lt;string&gt;(); 
        if (string.IsNullOrEmpty(_objectsToHide) == false) 
        { 
            _exclusionList.AddRange(_objectsToHide.Split(',')); 
            for (int i = 0; i &lt; _exclusionList.Count; i++) _exclusionList[i] = _exclusionList[i].Trim().ToLower(); 
        } 
 
        this.Refresh(); 
 
        _initialized = true; 
    } 
    catch (Exception ex) 
    { 
        Echo(string.Format("Error: {0}", ex.Message)); 
    } 
} 
 
void Refresh() 
{ 
    string output = ""; 
 
    if (_hideDetectingMessage == false) 
    { 
        if (_detecting == true) output += string.Format("Target Aquired - Range: {0}m.\n", (int)_distance); 
        else output += "No Targets Detected.\n"; 
    } 
 
    for (int i = 0; i &lt; _scanData.Count; i++) 
    { 
        string[] scanLine = _scanData[i].Split(':'); 
 
        int tempX = Int32.Parse(scanLine[0]); 
        int tempY = Int32.Parse(scanLine[1]); 
 
        this.Plot(tempX, tempY, 'x'); 
    } 
 
    for (int i = 0; i &lt; 50; i++) 
    { 
        output += _matrix[i]; 
    } 
 
    this.Render(output); 
} 
 
void Plot(int x, int y, char c) 
{ 
    if ((x &gt;= 0 &amp;&amp; y &gt;= 0) 
        &amp;&amp; (x &lt; 50 &amp;&amp; y &lt; 50)) 
    { 
        x = x * 2; 
 
        char[] chars = _matrix[y].ToCharArray(); 
 
        chars[x] = c; 
 
        _matrix[y] = new string(chars); 
    } 
} 
 
void Render(string text) 
{ 
    if (_lcds != null) 
    { 
        for (int i = 0; i &lt; _lcds.Count; i++) 
        { 
            _lcds[i].WritePublicText(text); 
 
            _lcds[i].ShowTextureOnScreen(); 
 
            _lcds[i].ShowPublicTextOnScreen(); 
        } 
    } 
} 
 
void SensorScan() 
{ 
    _sensorRange = (int)_sensor.FrontExtend; 
 
    Echo(string.Format("Available scan range: {0}m", (int)_sensorRange)); 
 
    MyDetectedEntityInfo entityInfo = _sensor.LastDetectedEntity; 
 
    this.GetPosition(entityInfo);             
} 
 
void CameraScan() 
{ 
    _sensorRange = (_camera.CanScan(_longRangeModeRange) == true) ? _longRangeModeRange : _camera.AvailableScanRange; 
 
    if (_camera.EnableRaycast == true 
        &amp;&amp; _camera.CanScan(_sensorRange) == true) 
    { 
        Echo(string.Format("Available scan range: {0}m", (int)_sensorRange)); 
 
        MyDetectedEntityInfo entityInfo = _camera.Raycast(_sensorRange, pitch: 0f, yaw: 0f); 
 
        this.GetPosition(entityInfo); 
 
        return; 
    } 
 
    _detecting = false; 
} 
 
void GetPosition(MyDetectedEntityInfo entityInfo) 
{ 
    if (entityInfo.IsEmpty() == false 
        &amp;&amp; _exclusionList.Contains(entityInfo.Name.Trim().ToLower()) == false) 
    { 
        _detecting = true; 
 
        _distance = this.GetDistance(entityInfo.HitPosition ?? entityInfo.Position); 
 
        Echo(string.Format("Entity {0} detected.", entityInfo.Name)); 
 
        return; 
    } 
 
    _detecting = false; 
} 
 
double GetDistance(Vector3D target) 
{ 
    Vector3D myPos; 
 
    if (_longRangeMode == false) 
        myPos = _sensor.GetPosition(); 
    else 
        myPos = _camera.GetPosition(); 
 
    double distance = Vector3D.Distance(target, myPos); 
 
    return distance; 
} 
 
T GetBlock&lt;T&gt;(string tag) 
    where T : IMyTerminalBlock 
{ 
    List&lt;T&gt; blocks = this.GetBlocks&lt;T&gt;(tag); 
 
    return (blocks.Count &gt; 0) ? blocks[0] : default(T); 
} 
 
List&lt;T&gt; GetBlocks&lt;T&gt;(string tag) 
    where T : IMyTerminalBlock 
{ 
    List&lt;IMyTerminalBlock&gt; blocks = new List&lt;IMyTerminalBlock&gt;(); 
 
    this.GridTerminalSystem.SearchBlocksOfName(tag, blocks); 
 
    return blocks.Cast&lt;T&gt;().ToList(); 
}</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RadioAntenna">
              <SubtypeName>SmallBlockRadioAntenna</SubtypeName>
              <EntityId>87078162589871980</EntityId>
              <Min x="0" y="17" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>T-14</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <BroadcastRadius>500</BroadcastRadius>
              <ShowShipName>false</ShowShipName>
              <EnableBroadcasting>true</EnableBroadcasting>
              <AttachedPB>0</AttachedPB>
              <IgnoreAllied>false</IgnoreAllied>
              <IgnoreOther>true</IgnoreOther>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>120031970399359242</EntityId>
              <Min x="1" y="16" z="22" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>PBbearing</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Program>/*  
/// Whip's Compass &amp; Bearing Code v13 - 10/13/17 ///  
 
How do I use this?  
    1) Make a program block with this script loaded into it  
 
    2) Make a remote control pointing forward  
        - Add the phrase "Reference" somewhere in its name.  
 
    3) Make a text panel or LCD screen: Add the phrase "Bearing" in the name.  
        Also make sure the screen is set to show public text.  
        - Make the font MONOSPACED 
 
    4) Make a timer block  
        - set to "trigger now" itself  
        - set to "start" itself 
        - set to "run program with default argument"  
 
    5) Trigger the timer once and you are good to go! :) 
 
Be sure to drop by my workshop page and leave a comment :D 
http://steamcommunity.com/sharedfiles/filedetails/?id=616627882 
 
Code by Whiplash141  
*/ 
 
 
    //You can change these names if you'd like 
    const string referenceName = "AGunnerRC"; //name of ship controller to use as reference  
    const string displayScreenName = "Bearing"; //name of screen to display bearing on 
    bool writeBearingOnCompass = false; 
 
/* 
_______________________________________________________________________________________ 
 
======================== Don't edit anything beyond this :) ======================= 
_______________________________________________________________________________________ 
*/ 
 
Vector3D absoluteNorthVec = new Vector3D(0.342063708833718, -0.704407897782847, -0.621934025954579); //this was determined via Keen's code 
double bearingAngle; //measured off relative north  
const double rad2deg = 180 / Math.PI; //constant to convert radians to degrees  
const double timeMaxCycle = 0.0; 
double timeCurrentCycle = 0; 
 
const string compassString = "N.W&gt;----&lt; " 
    + "N &gt;----&lt;N.E&gt;----&lt; E &gt;----&lt;S.E&gt;----&lt; S &gt;----&lt;S.W&gt;----&lt; W &gt;----&lt;N.W&gt;----&lt; " 
    + "N &gt;----&lt;N.E&gt;----&lt; E &gt;----&lt;S.E&gt;----&lt; S &gt;----&lt;S.W&gt;----&lt; W &gt;----&lt;N.W&gt;----&lt; "; 
    //+ "N&gt;-----&lt;N.E&gt;-----&lt;E&gt;-----&lt;S.E&gt;-----&lt;S&gt;-----&lt;S.W&gt;-----&lt;W&gt;-----&lt;N.W&gt;-----&lt;"; 
 
string bearingString = ""; 
string strCardinalDirection = ""; 
List&lt;IMyTerminalBlock&gt; referenceBlocks = new List&lt;IMyTerminalBlock&gt;(); 
List&lt;IMyTerminalBlock&gt; listScreens = new List&lt;IMyTerminalBlock&gt;(); 
 
Vector3D VectorProjection(Vector3D a, Vector3D b) 
{ 
    Vector3D projection = a.Dot(b) / b.Length() / b.Length() * b; 
    return projection; 
} 
 
void Main(string arg) 
{ 
    timeCurrentCycle += Runtime.TimeSinceLastRun.TotalSeconds; 
     
    if (timeCurrentCycle &lt; timeMaxCycle) 
        return; 
     
    Echo("WMI Planetary Compass Online... " + RunningSymbol()); 
 
    GridTerminalSystem.SearchBlocksOfName(referenceName, referenceBlocks, block =&gt; block is IMyShipController); 
    if (referenceBlocks.Count == 0) 
    { 
        Echo("Error: No remote with tag '" + referenceName + "' found"); 
        return; 
    } 
    else 
    { 
        GetBearing(); //run bearing code  
        WriteBearing(bearingString); //write to text screens  
        //Echo("Bearing: " + Math.Round(bearingAngle, 2).ToString()); //for debugging  
    } 
     
    timeCurrentCycle = 0; 
} 
 
void GetBearing() 
{ 
    //get forward and right vectors of the ship  
    var reference = referenceBlocks[0] as IMyShipController; 
    Vector3D forwardVec = reference.WorldMatrix.Forward; 
 
    //get grav vector  
    Vector3D gravityVec = reference.GetNaturalGravity(); 
 
    //check if grav vector exists  
    double gravMag = gravityVec.LengthSquared(); 
    if (double.IsNaN(gravMag) || gravMag == 0) 
    { 
        Echo("Error: No natural gravity detected!"); 
        bearingString = "Error: No natural gravity"; 
        return; 
    } 
 
    //get east vector  
    Vector3D relativeEastVec = gravityVec.Cross(absoluteNorthVec); 
 
    //get relative north vector  
    Vector3D relativeNorthVec = relativeEastVec.Cross(gravityVec); 
 
    //project forward vector onto a plane comprised of the north and east vectors  
    Vector3D forwardProjNorthVec = VectorProjection(forwardVec, relativeNorthVec); 
    Vector3D forwardProjEastVec = VectorProjection(forwardVec, relativeEastVec); 
    Vector3D forwardProjPlaneVec = forwardProjEastVec + forwardProjNorthVec; 
 
    //find angle from abs north to projected forward vector measured clockwise  
    bearingAngle = Math.Acos(forwardProjPlaneVec.Dot(relativeNorthVec) / forwardProjPlaneVec.Length() / relativeNorthVec.Length()) * rad2deg;                                                                                                                                                   //w.h.i.P l a.s h 1. 4 1 
 
    //check direction of angle  
    if (forwardVec.Dot(relativeEastVec) &lt; 0) 
    { 
        bearingAngle = 360 - bearingAngle; //because of how the angle is measured  
    } 
 
    //get cardinal direction  
    if (bearingAngle &lt; 22.5 || bearingAngle &gt;= 337.5) 
    { 
        strCardinalDirection = "N"; 
    } 
    else if (bearingAngle &lt; 67.5) 
    { 
        strCardinalDirection = "NE"; 
    } 
    else if (bearingAngle &lt; 112.5) 
    { 
        strCardinalDirection = "E"; 
    } 
    else if (bearingAngle &lt; 157.5) 
    { 
        strCardinalDirection = "SE"; 
    } 
    else if (bearingAngle &lt; 202.5) 
    { 
        strCardinalDirection = "S"; 
    } 
    else if (bearingAngle &lt; 247.5) 
    { 
        strCardinalDirection = "SW"; 
    } 
    else if (bearingAngle &lt; 292.5) 
    { 
        strCardinalDirection = "W"; 
    } 
    else if (bearingAngle &lt; 337.5) 
    { 
        strCardinalDirection = "NW"; 
    } 
 
     
         
    if (!writeBearingOnCompass) 
    { 
        bearingString = "Bearing: " + string.Format("{0:000}", Math.Round(bearingAngle)) 
        + " " + strCardinalDirection 
        + "\n" + compassString.Substring((int)MathHelper.Clamp(Math.Round(bearingAngle / 5), 0, 359), 21) 
        + "\n" + "          ^"; 
    } 
    else 
    { 
        //create string of our data 
        bearingString = compassString.Substring((int)MathHelper.Clamp(Math.Round(bearingAngle / 5), 0, 359), 21) + "\n" + "          ^"; 
        bearingString = bearingString.Remove(8,5).Insert(8, $"&lt;{string.Format("{0:000}", Math.Round(bearingAngle))}&gt;"); 
    } 
} 
 
void WriteBearing(string textToWrite) 
{ 
    GridTerminalSystem.SearchBlocksOfName(displayScreenName, listScreens, block =&gt; block is IMyTextPanel); 
    if (listScreens.Count == 0) 
    { 
        Echo($"Warning: No text panel with name tag '{displayScreenName}' was found"); 
        return; 
    } 
    else 
    { 
        for (int i = 0; i &lt; listScreens.Count; i++) 
        { 
            var thisScreen = listScreens[i] as IMyTextPanel; 
            if (thisScreen != null) 
            { 
                thisScreen.WritePublicText(textToWrite); 
                thisScreen.ShowPublicTextOnScreen(); 
                thisScreen.SetValue&lt;float&gt;("FontSize", 1.25f); 
                thisScreen.SetValue&lt;long&gt;("Font", 1147350002); 
            } 
        } 
    } 
} 
 
 
//Whip's Running Symbol Method v6 
int runningSymbolVariant = 0; 
string RunningSymbol() 
{ 
    runningSymbolVariant++; 
    string strRunningSymbol = ""; 
     
    if (runningSymbolVariant == 0) 
        strRunningSymbol = "|"; 
    else if (runningSymbolVariant == 1) 
        strRunningSymbol = "/"; 
    else if (runningSymbolVariant == 2) 
        strRunningSymbol = "--"; 
    else if (runningSymbolVariant == 3) 
    { 
        strRunningSymbol = "\\"; 
        runningSymbolVariant = 0; 
    } 
 
    return strRunningSymbol; 
}</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>95723850970509876</EntityId>
              <Min x="1" y="16" z="21" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>PBhorizon</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>/*  
/// Whip's Artificial Horizon Script v42 // - rev: 6/10/17 
_______________________________________________________________________            
///DESCRIPTION///    
 
    This code creates an Artificial Horizon indicator that takes into account your pitch and roll.  
    Also displayed on the screen is a vector indicator of velocity, speed display, and bearing display.  
    The colors of the display grid are configurable in the code.  
 
_______________________________________________________________________            
///SETUP///    
 
    1.) Find the control seat, cockpit, remote control, or passenger seat that you wish to   
        use as your horizon reference and add the name tag "Forward" somewhere in its name  
         
    2.) Find the Text Panel or LCD Panel that you want to display the Artificial Horizon on and add the tag  
        "Horizon" somewhere in the name of the block  
        - Change the font to MONOSPACED 
         
    3.) Make a program block and put this code in it  
     
    4.) Make a timer with actions  
        - "Trigger Now" itself  
        - "Start" itself  
        - "Run with default argument" the program from step 1  
    5.) Start the timer  
     
    6.) Fly around and enjoy :)  
 
_______________________________________________________________________            
///WHIP'S NOTES///  
 
    I vastly improved the code's number -&gt; pixel conversion system.  
    If you notice any bugs, be sure to comment on the workshop page.  
 
    Coded by Whiplash141  
*/ 
 
//-------------------------------------------------  
//CONFIGURABLE VARAIABLES  
//-------------------------------------------------  
const string controlSeatNameTag = "ADriverRC"; 
const string readoutScreenNameTag = "LCDHorizon"; 
 
const double maximumVelocity = 100; //supports up to 999 m/s max speed  
 
const int updatesPerSecond = 10; 
 
bool enableOrientationIndicator = true; //specifies if the orientation axes are drawn with the artificial horizon  
bool useVelocityMagnitude = false; //if the magnitude of the velocity should be accounted for in the velocity indicator 
bool pauseWhenAway = true; //whether or not the code should stop executing when no-one is piloting the ship 
bool shipControllersOnSameGrid = false; //if the control seats are on same grid as the ship 
bool enableColorBlindMode = false; //this will change all colors to the colorblind default constants automatically 
 
//-------------------------------------------------  
//COLOR DEFAULTS: You can change these 
// Colors are defined with RGB color codes where 
// RGB values can range from (0,0,0) [black] to (7,7,7) [white]. 
// You can also use the presets defined in the COLOR PRESETS section 
//-------------------------------------------------  
char backgroundColor = CreateCustomColor(0, 0, 0); 
char horizonLineColor = CreateCustomColor(0, 0, 0); 
char groundColor = CreateCustomColor(1, 2, 1); 
char skyColor = CreateCustomColor(1, 1, 2); 
char textColor = CreateCustomColor(4, 0, 0); 
char numberColor = CreateCustomColor(4, 4, 0); 
char velocityIndicatorColor = CreateCustomColor(4, 4, 0); 
char spaceOrientationColor = CreateCustomColor(0, 0, 4); 
char planetaryOrientationColor = CreateCustomColor(4, 0, 0); 
 
//-------------------------------------------------  
//COLORBLIND OVERRIDES: These will overwrite the constants above 
// if colorblind mode is enabled 
//-------------------------------------------------      
void ColorBlindOverrides() 
{ 
    //these define the colorblind color constants 
    backgroundColor = black; 
    horizonLineColor = lightGray; 
    groundColor = mediumGray; 
    skyColor = black; 
    textColor = yellow; 
    numberColor = yellow; 
    velocityIndicatorColor = cyan; 
    spaceOrientationColor = green; 
    planetaryOrientationColor = red; 
} 
 
//===================================================  
//DO NOT TOUCH ANYTHING BELOW THIS  
//===================================================  
 
//-------------------------------------------------  
//COLOR PRESETS: Do not change!!!  
 
const char red = '\uE200'; //No touchey 
const char medRed = '\uE1C0'; //No touchey  
const char darkRed = '\uE180'; //No touchey  
 
const char green = '\uE120'; //No touchey  
const char medGreen = '\uE118'; //No touchey  
const char darkGreen = '\uE110'; //No touchey  
 
const char blue = '\uE104'; //No touchey  
const char medBlue = '\uE103'; //No touchey  
const char darkBlue = '\uE102'; //No touchey  
 
const char yellow = '\uE220'; //No touchey 
const char medYellow = '\uE1D8'; //No touchey 
const char darkYellow = '\uE190'; //No touchey 
 
const char magenta = '\uE204'; //No touchey 
const char medMagenta = '\uE1C3'; //No touchey 
const char darkMagenta = '\uE182'; //No touchey 
 
const char cyan = '\uE124'; //No touchey 
const char medCyan = '\uE11B'; //No touchey 
const char darkCyan = '\uE112'; //No touchey 
 
const char white = '\uE2FF'; //No touchey  
const char lightGray = '\uE1DB'; //No touchey  
const char mediumGray = '\uE192'; //No touchey  
const char darkGray = '\uE149'; //No touchey  
const char black = '\uE100'; //No touchey  
 
//------------------------------------------------- 
 
const int horizontalMidpoint = 26; //DO NOT TOUCH 
const int verticalMidpoint = 24; //DO NOT TOUCH 
const int horizontalGridSize = horizontalMidpoint * 2 - 1; 
const int verticalGridSize = verticalMidpoint * 2 - 1; 
const int planeSymbolWidth = 10; //measured from center to wingtip  
 
int velocityRow = 0; 
int velocityColumn = 0; 
 
const double refreshInterval = 10; 
const double timeCycleMax = 1 / (double)updatesPerSecond; 
const double rad2deg = 180 / Math.PI; 
const double deg2rad = Math.PI / 180; 
const double horizontalVelocityIncrement = maximumVelocity / (double)horizontalMidpoint; 
const double verticalVelocityIncrement = maximumVelocity / (double)verticalMidpoint; 
const double pitchIncrement = 90 / (double)verticalMidpoint; 
double timeSinceRefresh = 141; 
double timeCurrentCycle = 0; 
double shipSpeed = 0; 
double shipAcceleration = 0; 
double rollAngle = 0; 
double pitchAngle = 0; 
double bearingAngle = 0; 
double altitude = 0; 
double lastSpeed = 0; 
 
bool isUpsideDown = false; 
bool inGravity = false; 
bool isBackwards = false; 
bool isProperlySetup = false; 
 
string headingAndVelocityPixelString = ""; 
string altitudePixelString = ""; 
 
Vector3D absoluteNorthVec = new Vector3D(0.342063708833718, -0.704407897782847, -0.621934025954579);  
//This is the rotation axis of the sun in vanilla 
//this was determined from the game files 
 
List&lt;IMyShipController&gt; shipControllers = new List&lt;IMyShipController&gt;(); 
List&lt;IMyTextPanel&gt; listScreens = new List&lt;IMyTextPanel&gt;(); 
IMyShipController reference = null; 
 
Program() 
{ 
    if (enableColorBlindMode) 
    { 
        ColorBlindOverrides(); 
    } 
 
    InitializeGrid(); 
    InitializeCharacterLists(); 
} 
 
StringBuilder gridBuilder = new StringBuilder(); 
List&lt;string&gt; emptyGrid = new List&lt;string&gt;(); 
List&lt;string&gt; skyGrid = new List&lt;string&gt;(); 
List&lt;StringBuilder&gt; horizonGrid = new List&lt;StringBuilder&gt;(); 
 
void InitializeGrid() 
{ 
    for (int i = 1; i &lt;= verticalGridSize; i++) 
    { 
        emptyGrid.Add(new String(backgroundColor, horizontalGridSize)); 
    } 
 
    for (int i = 1; i &lt;= verticalGridSize; i++) 
    { 
        skyGrid.Add(new String(skyColor, horizontalGridSize)); 
    } 
     
    for (int i = 1; i &lt;= verticalGridSize; i++) 
    { 
        horizonGrid.Add(new StringBuilder()); 
    } 
} 
 
static char CreateCustomColor(int r, int g, int b) 
{ 
    return (char)(0xE100 + (MathHelper.Clamp(r, 0, 7) &lt;&lt; 6) + (MathHelper.Clamp(g, 0, 7) &lt;&lt; 3) + MathHelper.Clamp(b, 0, 7)); 
} 
 
void AssignGridDefaultValues(List&lt;string&gt; gridDefault) 
{ 
    for (int i = 0; i &lt; horizonGrid.Count; i++) 
    { 
        var thisStringBuilder = horizonGrid[i]; 
        thisStringBuilder.Clear(); 
        thisStringBuilder.Append(gridDefault[i]); 
    } 
} 
 
void Main() 
{    
    try 
    { 
        timeCurrentCycle += Runtime.TimeSinceLastRun.TotalSeconds; 
        timeSinceRefresh += Runtime.TimeSinceLastRun.TotalSeconds; 
         
        if (timeCurrentCycle &gt;= timeCycleMax) 
        { 
            Echo("WMI Artificial Horizon is online... " + RunningSymbol()); 
 
            if (!isProperlySetup) 
                isProperlySetup = CheckBlocks(); 
             
            if (isProperlySetup) 
            { 
                if (pauseWhenAway) 
                    reference = GetControlledShipController(shipControllers); 
                else 
                    reference = shipControllers[0]; 
                 
                if (reference != null) 
                { 
                    GetRollPitchAndHeading(); 
                    GetVelocity(); 
                    GetNumberPixelString(); 
                    DrawGrid(); 
                } 
                else 
                { 
                    Echo($"No user detected in any seats\ntagged with '{controlSeatNameTag}'\nPausing execution..."); 
                } 
            } 
 
            timeCurrentCycle = 0; 
            Echo($"Next refresh in {Math.Round(Math.Max(refreshInterval - timeSinceRefresh, 0))} seconds"); 
        } 
         
        if (timeSinceRefresh &gt;= refreshInterval) 
        { 
            isProperlySetup = false; 
            timeSinceRefresh = 0; 
        } 
    } 
    catch 
    { 
        isProperlySetup = false; 
    } 
} 
 
//Whip's Get Subgrid Base Method 
 
IMyCubeGrid GetSubgridBase(IMyTerminalBlock thisBlock) 
{ 
    //small rotor head, large base 
    var rotorHeads = new List&lt;IMyMotorRotor&gt;(); 
    GridTerminalSystem.GetBlocksOfType(rotorHeads, block =&gt; block.CubeGrid == thisBlock.CubeGrid &amp;&amp; block.CubeGrid.GridSizeEnum.ToString() == "Small"); 
     
    foreach (var thisHead in rotorHeads) 
    { 
        if (thisHead.IsAttached &amp;&amp; thisHead.Base.CubeGrid.GridSizeEnum.ToString() == "Large") 
            return thisHead.Base.CubeGrid; 
    } 
 
    //large rotor base, small head 
    var rotorBases = new List&lt;IMyMotorStator&gt;(); 
    GridTerminalSystem.GetBlocksOfType(rotorBases, block =&gt; block.CubeGrid == thisBlock.CubeGrid &amp;&amp; block.CubeGrid.GridSizeEnum.ToString() == "Small"); 
 
    foreach (var thisBase in rotorBases) 
    { 
        if (thisBase.IsAttached &amp;&amp; thisBase.TopGrid.GridSizeEnum.ToString() == "Large") 
            return thisBase.TopGrid; 
    } 
 
    return null; 
} 
 
bool CheckBlocks() 
{    
    GridTerminalSystem.GetBlocksOfType(shipControllers, shouldAddController); 
    GridTerminalSystem.GetBlocksOfType(listScreens, x =&gt; x.CustomName.ToLower().Contains(readoutScreenNameTag.ToLower())); 
     
    bool setupSuccess = true; 
    if (shipControllers.Count == 0) 
    { 
        Echo($"Error: No ship controllers with name '{controlSeatNameTag}' detected"); 
        setupSuccess =  false; 
    } 
     
    if (listScreens.Count == 0) 
    { 
        Echo($"Error: No text panels with name '{controlSeatNameTag}' detected"); 
        setupSuccess =  false; 
    } 
     
    return setupSuccess; 
} 
 
IMyShipController GetControlledShipController(List&lt;IMyShipController&gt; SCs)   
{   
    foreach (IMyShipController thisController in SCs)   
    {   
        if (thisController.IsUnderControl &amp;&amp; thisController.CanControlShip)   
            return thisController;   
    }   
   
    return null;   
}   
 
bool shouldAddController(IMyTerminalBlock block) 
{ 
    if (shipControllersOnSameGrid) 
        return block.CustomName.Contains(controlSeatNameTag) &amp;&amp; block.CubeGrid == Me.CubeGrid; 
    else 
        return block.CustomName.Contains(controlSeatNameTag); 
} 
 
T GetClosestBlockOfType&lt;T&gt;(string name = "") where T : class, IMyTerminalBlock 
{ 
 
    var allBlocks = new List&lt;T&gt;(); 
 
    if (name == "") 
        GridTerminalSystem.GetBlocksOfType(allBlocks); 
    else 
        GridTerminalSystem.GetBlocksOfType(allBlocks, block =&gt; block.CustomName.Contains(name)); 
 
    if (allBlocks.Count == 0) 
    { 
        return null; 
    } 
 
    var closestBlock = allBlocks[0]; 
    var shortestDistance = Vector3D.DistanceSquared(Me.GetPosition(), closestBlock.GetPosition()); 
    allBlocks.Remove(closestBlock); //remove this block from the list 
 
    foreach (T thisBlock in allBlocks) 
    { 
        var thisDistance = Vector3D.DistanceSquared(Me.GetPosition(), thisBlock.GetPosition()); 
 
        if (thisDistance &lt; shortestDistance) 
        { 
            closestBlock = thisBlock; 
            shortestDistance = thisDistance; 
        } 
        //otherwise move to next one 
    } 
 
    return closestBlock; 
} 
 
void AddToGrid(int row, int column, char color) 
{ 
    if (row - 1 &gt;= 0 &amp;&amp; row - 1 &lt; horizonGrid.Count) 
    { 
        var thisRow = horizonGrid[row - 1]; //need to offset index down one 
        if (column - 1 &gt;= 0 &amp;&amp; column - 1 &lt; thisRow.Length) 
        { 
            thisRow[column - 1] = color; 
        } 
    }      
} 
 
void GetVelocity() //This method gets the relative position of the velocity vector on the screen  
{ 
    var velocityVec = reference.GetShipVelocities().LinearVelocity; 
    shipSpeed = velocityVec.Length(); //raw speed of ship 
    shipAcceleration = Math.Abs(shipSpeed - lastSpeed) / timeCycleMax; 
    lastSpeed = shipSpeed; 
 
    if (!useVelocityMagnitude &amp;&amp; velocityVec.Length() &gt; 0.1) 
    { 
        velocityVec = Vector3D.Normalize(velocityVec) * maximumVelocity; 
    } 
 
    var rightVelocity = VectorProjection(velocityVec, reference.WorldMatrix.Right).Length() * VectorCompareDirection(velocityVec, reference.WorldMatrix.Right); 
    var upVelocity = VectorProjection(velocityVec, reference.WorldMatrix.Up).Length() * VectorCompareDirection(velocityVec, reference.WorldMatrix.Up); 
    var forwardVelocity = VectorProjection(velocityVec, reference.WorldMatrix.Forward).Length() * VectorCompareDirection(velocityVec, reference.WorldMatrix.Forward); 
 
    if (rightVelocity &lt; 0) 
    { 
        velocityColumn = horizontalMidpoint - (int)Math.Round(-rightVelocity / horizontalVelocityIncrement); 
    } 
    else 
    { 
        velocityColumn = horizontalMidpoint + (int)Math.Round(rightVelocity / horizontalVelocityIncrement); 
    } 
 
    if (upVelocity &lt; 0) 
    { 
        velocityRow = verticalMidpoint + (int)Math.Round(-upVelocity / verticalVelocityIncrement); 
    } 
    else 
    { 
        velocityRow = verticalMidpoint - (int)Math.Round(upVelocity / verticalVelocityIncrement); 
    } 
 
    if (forwardVelocity &lt; 0) 
    { 
        isBackwards = true; 
    } 
    else 
    { 
        isBackwards = false; 
    } 
 
    if (!isBackwards) //draws prograde velocity   
    { 
        /*  
        Looks like:  
              o  
              o  
            o o o  
        o o o   o o o  
            o o o  
        */ 
 
        AddToGrid(velocityRow + 1, velocityColumn, velocityIndicatorColor); 
        AddToGrid(velocityRow + 1, velocityColumn + 1, velocityIndicatorColor); 
        AddToGrid(velocityRow + 1, velocityColumn - 1, velocityIndicatorColor); 
        AddToGrid(velocityRow - 1, velocityColumn, velocityIndicatorColor); 
        AddToGrid(velocityRow - 1, velocityColumn + 1, velocityIndicatorColor); 
        AddToGrid(velocityRow - 1, velocityColumn - 1, velocityIndicatorColor); 
        AddToGrid(velocityRow, velocityColumn + 1, velocityIndicatorColor); 
        AddToGrid(velocityRow, velocityColumn - 1, velocityIndicatorColor); 
        AddToGrid(velocityRow - 2, velocityColumn, velocityIndicatorColor); 
        AddToGrid(velocityRow - 3, velocityColumn, velocityIndicatorColor); 
        AddToGrid(velocityRow, velocityColumn + 2, velocityIndicatorColor); 
        AddToGrid(velocityRow, velocityColumn + 3, velocityIndicatorColor); 
        AddToGrid(velocityRow, velocityColumn - 2, velocityIndicatorColor); 
        AddToGrid(velocityRow, velocityColumn - 3, velocityIndicatorColor); 
 
    } 
    else //draws retrograde velocity  
    { 
        /*  
        Looks like:  
           o       o  
             o   o  
               o  
             o   o  
           o       o  
        */ 
 
        AddToGrid(velocityRow, velocityColumn, velocityIndicatorColor); 
        AddToGrid(velocityRow - 1, velocityColumn + 1, velocityIndicatorColor); 
        AddToGrid(velocityRow - 1, velocityColumn - 1, velocityIndicatorColor); 
        AddToGrid(velocityRow + 1, velocityColumn + 1, velocityIndicatorColor); 
        AddToGrid(velocityRow + 1, velocityColumn - 1, velocityIndicatorColor); 
        AddToGrid(velocityRow - 2, velocityColumn + 2, velocityIndicatorColor); 
        AddToGrid(velocityRow - 2, velocityColumn - 2, velocityIndicatorColor); 
        AddToGrid(velocityRow + 2, velocityColumn + 2, velocityIndicatorColor); 
        AddToGrid(velocityRow + 2, velocityColumn - 2, velocityIndicatorColor); 
    } 
 
    //Echo("Ship Velocity: " + Math.Round(shipSpeed, 2).ToString()); 
} 
 
void DrawOrientationIndicator() 
{ 
    if (!inGravity) 
    { 
        for (int j = 1; j &lt;= horizontalGridSize; j++) 
        { 
            AddToGrid(verticalMidpoint, j, spaceOrientationColor); //draws a horizontal line  
        } 
 
        for (int j = 1; j &lt;= verticalGridSize; j++) 
        { 
            AddToGrid(j, horizontalMidpoint, spaceOrientationColor); //draws a vertical line  
        } 
    } 
    else //draws a nose orientation indicator that looks like  --- W ---  
    { 
        AddToGrid(verticalMidpoint, horizontalMidpoint, planetaryOrientationColor); 
        AddToGrid(verticalMidpoint + 1, horizontalMidpoint + 1, planetaryOrientationColor); 
        AddToGrid(verticalMidpoint + 1, horizontalMidpoint - 1, planetaryOrientationColor); 
        AddToGrid(verticalMidpoint, horizontalMidpoint - 2, planetaryOrientationColor); 
        AddToGrid(verticalMidpoint, horizontalMidpoint + 2, planetaryOrientationColor); 
        AddToGrid(verticalMidpoint - 1, horizontalMidpoint - 3, planetaryOrientationColor); 
        AddToGrid(verticalMidpoint - 1, horizontalMidpoint + 3, planetaryOrientationColor); 
 
        for (int j = horizontalMidpoint - planeSymbolWidth; j &lt; horizontalMidpoint - 4; j++) 
        { 
            AddToGrid(verticalMidpoint, j, planetaryOrientationColor); 
        } 
 
        for (int j = horizontalMidpoint + 5; j &lt;= horizontalMidpoint + planeSymbolWidth; j++) 
        { 
            AddToGrid(verticalMidpoint, j, planetaryOrientationColor); 
        } 
    } 
} 
 
void GetRollPitchAndHeading() 
{ 
    /// Get Needed Vectors ///  
    Vector3D shipForwardVec = reference.WorldMatrix.Forward; 
    Vector3D shipLeftVec = reference.WorldMatrix.Left; 
    Vector3D shipDownVec = reference.WorldMatrix.Down; 
    Vector3D gravityVec = reference.GetNaturalGravity(); 
    Vector3D planetRelativeLeftVec = shipForwardVec.Cross(gravityVec); 
 
    reference.TryGetPlanetElevation(MyPlanetElevation.Surface, out altitude); 
 
    if (gravityVec.LengthSquared() == 0) 
    { 
        Echo("No natural gravity field detected"); 
        inGravity = false; 
        AssignGridDefaultValues(emptyGrid); 
        DrawOrientationIndicator(); 
        return; 
    } 
     
    inGravity = true; 
    AssignGridDefaultValues(skyGrid); 
 
    isUpsideDown = false; 
 
    /// Compute Pitch and Roll ///  
    if (!VectorIsSameDirection(shipDownVec, gravityVec)) 
    { 
        isUpsideDown = true; 
    } 
 
    rollAngle = VectorAngleBetween(shipLeftVec, planetRelativeLeftVec) * rad2deg; 
 
    rollAngle *= VectorCompareDirection(VectorProjection(shipLeftVec, gravityVec), gravityVec); //ccw is positive  
 
    if (rollAngle &gt; 90 || rollAngle &lt; -90) 
    { 
        rollAngle = 180 - rollAngle; //accounts for upsidedown  
    } 
 
    pitchAngle = VectorAngleBetween(shipForwardVec, gravityVec) * rad2deg; //angle from nose direction to gravity  
    pitchAngle -= 90; //as 90 degrees is level with ground  
 
    //Echo("Roll angle: " + Math.Round(rollAngle, 2).ToString() + "\nPitch angle: " + Math.Round(pitchAngle, 2).ToString()); 
    GetHorizonLine(); //gets horizon line  
 
    if (enableOrientationIndicator) 
    { 
        DrawOrientationIndicator(); //draws orientation indicator 
    } 
 
    /// Compute Bearing ///  
    //get east vector   
    Vector3D relativeEastVec = gravityVec.Cross(absoluteNorthVec); 
 
    //get relative north vector   
    Vector3D relativeNorthVec = relativeEastVec.Cross(gravityVec); 
 
    //project forward vector onto a plane comprised of the north and east vectors   
    Vector3D forwardProjNorthVec = VectorProjection(shipForwardVec, relativeNorthVec); 
    Vector3D forwardProjEastVec = VectorProjection(shipForwardVec, relativeEastVec); 
    Vector3D forwardProjPlaneVec = forwardProjEastVec + forwardProjNorthVec; 
 
    //find angle from abs north to projected forward vector measured clockwise   
    bearingAngle = VectorAngleBetween(forwardProjPlaneVec, relativeNorthVec) * rad2deg; 
    if (VectorIsSameDirection(shipForwardVec, relativeEastVec) == false) 
    { 
        bearingAngle = 360 - bearingAngle; //because of how the angle is measured   
    } 
 
    //Echo("Bearing: " + Math.Round(bearingAngle, 2).ToString()); 
} 
 
void GetHorizonLine() 
{ 
    int horizontalOffset = (int)Math.Round(pitchAngle / pitchIncrement * Math.Sin(rollAngle * deg2rad)); //offset of every point in the horizontal direction  
    int verticalOffset = (int)Math.Round(pitchAngle / pitchIncrement * Math.Cos(rollAngle * deg2rad)); //offset of every point in the vertical direction  
 
    double constant = 1; 
    if (isUpsideDown) 
    { 
        verticalOffset *= -1; 
        constant = -1; 
    } 
 
    int adjustedMidpoint = verticalMidpoint - horizontalOffset; //offsets our midpoint horizontally due to pitch and roll  
 
    for (int i = 1; i &lt;= horizontalGridSize; i++) //rows  
    { 
        int thisHeight = 0; 
 
        if (i &lt; verticalMidpoint) 
        { 
            thisHeight = adjustedMidpoint - (int)Math.Round((adjustedMidpoint - i) * Math.Tan(constant * rollAngle * deg2rad)); 
        } 
        else 
        { 
            thisHeight = adjustedMidpoint + (int)Math.Round((i - adjustedMidpoint) * Math.Tan(constant * rollAngle * deg2rad)); 
        } 
 
        thisHeight += verticalOffset; //offset our computed height by this value  
 
        AddToGrid(thisHeight, i, horizonLineColor); 
 
        for (int j = 1; j &lt;= verticalGridSize; j++) 
        { 
            if (!isUpsideDown) 
            { 
                if (j &gt; thisHeight) 
                { 
                    AddToGrid(j, i, groundColor); 
                } 
            } 
            else 
            { 
                if (j &lt; thisHeight) 
                { 
                    AddToGrid(j, i, groundColor); 
                } 
            } 
             
        } 
    } 
} 
 
 
void DrawGrid() //draws graphical grid  
{ 
    gridBuilder.Clear(); 
     
    gridBuilder.Append(headingAndVelocityPixelString).Append("\n"); 
     
    foreach (StringBuilder thisRow in horizonGrid) 
    { 
        gridBuilder.Append("\ue077").AppendLine(thisRow.ToString()); 
    } 
 
    gridBuilder.Append("\n" + altitudePixelString); 
     
    WriteToTextPanel(listScreens, gridBuilder.ToString()); 
} 
 
void GetNumberPixelString() //gets a graphical string from velocity and heading  
{ 
    //Velocity Splitting  
 
    string velocityString = string.Format("{0:000}", shipSpeed); 
    string altitudeString = string.Format("{0:00000}", altitude); 
    string headingOrAccelString = ""; 
    if (inGravity) 
        headingOrAccelString = string.Format("{0:000}", bearingAngle); 
    else 
        headingOrAccelString = string.Format("{0:000}", shipAcceleration); 
 
    DecomposeNumber velocityStruct; 
    DecomposeNumber headingOrAccelStruct; 
    DecomposeNumber altitudeStruct; 
 
    List&lt;string&gt; velocityWordStruct = GetPixelsFromNumber("spd"); 
    List&lt;string&gt; altitudeWordStruct = GetPixelsFromNumber("alt"); 
    List&lt;string&gt; headingOrAccelWordStruct; 
 
    if (inGravity) 
        headingOrAccelWordStruct = GetPixelsFromNumber("hdg"); 
    else 
        headingOrAccelWordStruct = GetPixelsFromNumber("acc"); 
 
 
    List&lt;string&gt; space = new List&lt;string&gt;() 
    { 
        "\ue076", 
        "\ue076", 
        "\ue076", 
        "\ue076", 
        "\ue076" 
    };  
 
    velocityStruct.Hundreds = GetPixelsFromNumber(velocityString.Substring(0, 1)); 
    velocityStruct.Tens = GetPixelsFromNumber(velocityString.Substring(1, 1)); 
    velocityStruct.Ones = GetPixelsFromNumber(velocityString.Substring(2, 1)); 
 
    headingOrAccelStruct.Hundreds = GetPixelsFromNumber(headingOrAccelString.Substring(0, 1)); 
    headingOrAccelStruct.Tens = GetPixelsFromNumber(headingOrAccelString.Substring(1, 1)); 
    headingOrAccelStruct.Ones = GetPixelsFromNumber(headingOrAccelString.Substring(2, 1)); 
 
    altitudeStruct.TenThousands = GetPixelsFromNumber(altitudeString.Substring(0, 1)); 
    altitudeStruct.Thousands = GetPixelsFromNumber(altitudeString.Substring(1, 1)); 
    altitudeStruct.Hundreds = GetPixelsFromNumber(altitudeString.Substring(2, 1)); 
    altitudeStruct.Tens = GetPixelsFromNumber(altitudeString.Substring(3, 1)); 
    altitudeStruct.Ones = GetPixelsFromNumber(altitudeString.Substring(4, 1)); 
 
    List&lt;List&lt;string&gt;&gt; headingAndVelocityCharacterList = new List&lt;List&lt;string&gt;&gt;() 
    { 
        space, velocityWordStruct, velocityStruct.Hundreds, velocityStruct.Tens, velocityStruct.Ones, space, headingOrAccelWordStruct, headingOrAccelStruct.Hundreds, headingOrAccelStruct.Tens, headingOrAccelStruct.Ones 
    }; 
 
    List&lt;List&lt;string&gt;&gt; altitudeCharacterList = new List&lt;List&lt;string&gt;&gt;(); 
    if (inGravity) 
    { 
        altitudeCharacterList = new List&lt;List&lt;string&gt;&gt;() 
        { 
            altitudeWordStruct, altitudeStruct.TenThousands, altitudeStruct.Thousands, altitudeStruct.Hundreds, altitudeStruct.Tens, altitudeStruct.Ones 
        }; 
    } 
    else 
    { 
        altitudeCharacterList = new List&lt;List&lt;string&gt;&gt;() 
        { 
            altitudeWordStruct, GetPixelsFromNumber("no grav") 
        }; 
    } 
 
    headingAndVelocityPixelString = ConstructPixelString(headingAndVelocityCharacterList); 
    altitudePixelString = ConstructPixelString(altitudeCharacterList); 
} 
 
StringBuilder pixelString = new StringBuilder(); 
string ConstructPixelString(List&lt;List&lt;string&gt;&gt; pixelCharacters) //each list has 1-5 rows 
{ 
    pixelString.Clear(); 
 
    for (int i = 0; i &lt; 5; i++) 
    { 
        foreach (List&lt;string&gt; thisCharacter in pixelCharacters) 
        { 
            pixelString.Append(thisCharacter[i]); 
        } 
        pixelString.Append("\n"); 
    } 
 
    return pixelString.ToString(); 
} 
 
struct DecomposeNumber 
{ 
    public List&lt;string&gt; Ones; 
    public List&lt;string&gt; Tens; 
    public List&lt;string&gt; Hundreds; 
    public List&lt;string&gt; Thousands; 
    public List&lt;string&gt; TenThousands; 
} 
 
 
const string largeSpace = "\ue078\ue077"; 
List&lt;string&gt; GetPixelsFromNumber(string num) //gets graphical representation from a double  
{ 
    List&lt;string&gt; numberGraphicRows = new List&lt;string&gt;(); 
 
    switch (num) 
    { 
        case "0": 
            numberGraphicRows = rows0; 
            break; 
 
        case "1": 
            numberGraphicRows = rows1; 
            break; 
 
        case "2": 
            numberGraphicRows = rows2; 
           break; 
 
        case "3": 
            numberGraphicRows = rows3; 
            break; 
 
        case "4": 
            numberGraphicRows = rows4; 
            break; 
 
        case "5": 
            numberGraphicRows = rows5; 
            break; 
 
        case "6": 
            numberGraphicRows = rows6; 
            break; 
 
        case "7": 
            numberGraphicRows = rows7; 
            break; 
 
        case "8": 
            numberGraphicRows = rows8; 
            break; 
 
        case "9": 
            numberGraphicRows = rows9; 
            break; 
 
        case "spd": 
            numberGraphicRows = rowsSpd; 
            break; 
 
        case "hdg": 
            numberGraphicRows = rowsHdg; 
            break; 
 
        case "alt": 
            numberGraphicRows = rowsAlt; 
            break; 
 
        case "no grav": 
            numberGraphicRows = rowsNoGrav; 
            break; 
 
        case "acc": 
            numberGraphicRows = rowsAcc; 
            break; 
 
        default: 
            numberGraphicRows = rows0; 
            break; 
    } 
    return numberGraphicRows; 
} 
 
void WriteToTextPanel(List&lt;IMyTextPanel&gt; listScreens, string textToWrite, bool append = false) 
{ 
    for (int i = 0; i &lt; listScreens.Count; i++) 
    { 
        var thisScreen = listScreens[i]; 
        thisScreen.WritePublicText(textToWrite, append); 
        thisScreen.ShowTextureOnScreen(); 
        thisScreen.ShowPublicTextOnScreen(); 
        thisScreen.SetValue("FontSize", 0.3f); //for large grid 
        thisScreen.SetValue&lt;long&gt;("Font", 1147350002); 
    } 
} 
 
int VectorCompareDirection(Vector3D a, Vector3D b) //returns -1 if vectors return negative dot product  
{ 
    double check = a.Dot(b); 
    if (check &lt; 0) 
        return -1; 
    else 
        return 1; 
} 
 
double VectorAngleBetween(Vector3D a, Vector3D b) //returns radians  
{ 
    if (Vector3D.IsZero(a) || Vector3D.IsZero(b)) 
        return 0; 
    else 
        return Math.Acos(MathHelper.Clamp(a.Dot(b) / Math.Sqrt(a.LengthSquared() * b.LengthSquared()), -1, 1)); 
} 
 
Vector3D VectorProjection(Vector3D a, Vector3D b) //projects a onto b  
{ 
    Vector3D projection = a.Dot(b) / b.LengthSquared() * b; 
    return projection; 
} 
 
bool VectorIsSameDirection(Vector3D a, Vector3D b) //returns true if vectors produce positive dot product  
{ 
    double check = a.Dot(b); 
    if (check &lt; 0) 
        return false; 
    else 
        return true; 
} 
 
//Whip's Running Symbol Method v6 
int runningSymbolVariant = 0; 
string RunningSymbol() 
{ 
    runningSymbolVariant++; 
    string strRunningSymbol = ""; 
     
    if (runningSymbolVariant == 0) 
        strRunningSymbol = "|"; 
    else if (runningSymbolVariant == 1) 
        strRunningSymbol = "/"; 
    else if (runningSymbolVariant == 2) 
        strRunningSymbol = "--"; 
    else if (runningSymbolVariant == 3) 
    { 
        strRunningSymbol = "\\"; 
        runningSymbolVariant = -1; 
    } 
 
    return strRunningSymbol; 
} 
 
List&lt;string&gt; rows0 = new List&lt;string&gt;(); 
List&lt;string&gt; rows1 = new List&lt;string&gt;(); 
List&lt;string&gt; rows2 = new List&lt;string&gt;(); 
List&lt;string&gt; rows3 = new List&lt;string&gt;(); 
List&lt;string&gt; rows4 = new List&lt;string&gt;(); 
List&lt;string&gt; rows5 = new List&lt;string&gt;(); 
List&lt;string&gt; rows6 = new List&lt;string&gt;(); 
List&lt;string&gt; rows7 = new List&lt;string&gt;(); 
List&lt;string&gt; rows8 = new List&lt;string&gt;(); 
List&lt;string&gt; rows9 = new List&lt;string&gt;(); 
List&lt;string&gt; rowsSpd = new List&lt;string&gt;(); 
List&lt;string&gt; rowsHdg = new List&lt;string&gt;(); 
List&lt;string&gt; rowsAlt = new List&lt;string&gt;(); 
List&lt;string&gt; rowsNoGrav = new List&lt;string&gt;(); 
List&lt;string&gt; rowsAcc= new List&lt;string&gt;(); 
 
void InitializeCharacterLists() 
{ 
    #region character_list_declaration 
    rows0 = new List&lt;string&gt;() 
    { 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }) 
    }; 
 
    rows1 = new List&lt;string&gt;() 
    { 
        new string(new char[] { backgroundColor, numberColor, backgroundColor, backgroundColor }), 
        new string(new char[] { backgroundColor, numberColor, backgroundColor, backgroundColor }), 
        new string(new char[] { backgroundColor, numberColor, backgroundColor, backgroundColor }), 
        new string(new char[] { backgroundColor, numberColor, backgroundColor, backgroundColor }), 
        new string(new char[] { backgroundColor, numberColor, backgroundColor, backgroundColor }) 
    }; 
 
    rows2 = new List&lt;string&gt;() 
    { 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { backgroundColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, backgroundColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }) 
    }; 
 
    rows3 = new List&lt;string&gt;() 
    { 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { backgroundColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { backgroundColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { backgroundColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }) 
    }; 
 
    rows4 = new List&lt;string&gt;() 
    { 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { backgroundColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { backgroundColor, backgroundColor, numberColor, backgroundColor }) 
    }; 
 
    rows5 = new List&lt;string&gt;() 
    { 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, backgroundColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { backgroundColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }) 
    }; 
 
    rows6 = new List&lt;string&gt;() 
    { 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, backgroundColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }) 
    }; 
 
    rows7 = new List&lt;string&gt;() 
    { 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { backgroundColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { backgroundColor, numberColor, backgroundColor, backgroundColor }), 
        new string(new char[] { backgroundColor, numberColor, backgroundColor, backgroundColor }), 
        new string(new char[] { backgroundColor, numberColor, backgroundColor, backgroundColor }) 
    }; 
 
    rows8 = new List&lt;string&gt;() 
    { 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }) 
    }; 
 
    rows9 = new List&lt;string&gt;() 
    { 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }), 
        new string(new char[] { backgroundColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, numberColor, numberColor, backgroundColor }) 
    }; 
 
    rowsSpd = new List&lt;string&gt;() 
    { 
        new string(new char[] { backgroundColor, textColor, textColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor }), 
        new string(new char[] { textColor, backgroundColor, backgroundColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor }), 
        new string(new char[] { textColor, textColor, textColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor }), 
        new string(new char[] { backgroundColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor }), 
        new string(new char[] { textColor, textColor, backgroundColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor }) 
    }; 
 
    rowsHdg = new List&lt;string&gt;() 
    { 
        new string(new char[] { textColor, backgroundColor, textColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor }), 
        new string(new char[] { textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor, textColor, backgroundColor }), 
        new string(new char[] { textColor, textColor, textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, backgroundColor }), 
        new string(new char[] { textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor }), 
        new string(new char[] { textColor, backgroundColor, textColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor }) 
    }; 
 
    rowsAlt = new List&lt;string&gt;() 
    { 
        largeSpace + new string(new char[] { backgroundColor, textColor, backgroundColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, textColor, textColor, textColor, backgroundColor, backgroundColor, backgroundColor }), 
        largeSpace + new string(new char[] { textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor, textColor, backgroundColor, backgroundColor, textColor, backgroundColor }), 
        largeSpace + new string(new char[] { textColor, textColor, textColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor }), 
        largeSpace + new string(new char[] { textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor, textColor, backgroundColor, backgroundColor, textColor, backgroundColor }), 
        largeSpace + new string(new char[] { textColor, backgroundColor, textColor, backgroundColor, textColor, textColor, textColor, backgroundColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor }) 
    }; 
 
    rowsNoGrav = new List&lt;string&gt;() 
    { 
        new string(new char[] { numberColor, numberColor, backgroundColor, backgroundColor, backgroundColor, numberColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor, numberColor, numberColor, backgroundColor, backgroundColor, numberColor, numberColor, backgroundColor, backgroundColor, backgroundColor, numberColor, backgroundColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, backgroundColor, numberColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, backgroundColor, numberColor, backgroundColor, numberColor, numberColor, backgroundColor, numberColor, numberColor, backgroundColor, backgroundColor, numberColor, numberColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, backgroundColor, numberColor, backgroundColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, numberColor, backgroundColor, backgroundColor }), 
        new string(new char[] { numberColor, backgroundColor, numberColor, backgroundColor, backgroundColor, numberColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor, numberColor, numberColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, numberColor, backgroundColor, backgroundColor, backgroundColor }) 
    }; 
 
    rowsAcc= new List&lt;string&gt;() 
    { 
        new string(new char[] { backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, backgroundColor }), 
        new string(new char[] { textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, textColor, backgroundColor }), 
        new string(new char[] { textColor, textColor, textColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor, backgroundColor }), 
        new string(new char[] { textColor, backgroundColor, textColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, textColor, backgroundColor, backgroundColor, backgroundColor, textColor, backgroundColor }), 
        new string(new char[] { textColor, backgroundColor, textColor, backgroundColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, textColor, textColor, backgroundColor, backgroundColor, backgroundColor }) 
    }; 
    #endregion 
} 
 
/*           
///WHAT'S CHANGED///  
 
- Fixed incorrect display of pitch 
- Fixed some variable name typos 
- This code can now display altitude (only in DEV branch!) 
- Removed character limit bypass 
- Clamped arccosine inputs to avoid NaN errors 
- Used string builder instead of string to help performance 
- Added in monospace support - v29 
- Added more color presets - v30 
- Added in a custom color method - v30 
- Fixed colorblind mode settings not updating the text and number colors - v31 
- Added automatic font selection - 31 
- [REVERTED] ~~Code now ignores programs on other grids connected via connectors - v32~~ 
- Changed color defaults - v35 
- [REVERTED] ~~Added method to only consider grids that are the same as the program or are attached via rotor trick - v34~~ - v36 
- Added a function to pause script execution while away - v37 
- Removed all static instance fields - v38 
- Optimized VectorAngleBetween() method - v39 
- REVERTED ALL CHANGES FROM VERSION 40 
- Code now only rescans the grid for blocks every 10 seconds instead of 10 times a second. This should drastically reduce lag on larger ships - v41 
- Removed excess GridTerminalSystem calls in the WriteToTextPanel() method. This should further reduce lag :) - v42 
*/</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="17" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="17" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="17" z="22" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="17" z="21" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-1" y="18" z="24" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="0" y="18" z="25" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="1" y="18" z="24" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="0" y="18" z="23" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <Skeleton>
            <BoneInfo>
              <BonePosition x="14" y="32" z="34" />
              <BoneOffset x="116" y="127" z="137" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="14" y="32" z="35" />
              <BoneOffset x="108" y="134" z="135" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="36" z="32" />
              <BoneOffset x="97" y="112" z="153" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="36" z="33" />
              <BoneOffset x="103" y="81" z="98" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="36" z="34" />
              <BoneOffset x="145" y="82" z="75" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="14" y="36" z="34" />
              <BoneOffset x="80" y="109" z="166" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="36" z="35" />
              <BoneOffset x="129" y="112" z="189" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="14" y="36" z="35" />
              <BoneOffset x="104" y="108" z="114" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="10" y="35" z="32" />
              <BoneOffset x="159" y="127" z="95" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="9" y="36" z="31" />
              <BoneOffset x="125" y="115" z="96" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="14" y="34" z="34" />
              <BoneOffset x="112" y="127" z="141" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="14" y="34" z="35" />
              <BoneOffset x="101" y="131" z="165" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="14" y="33" z="35" />
              <BoneOffset x="112" y="129" z="116" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="33" z="35" />
              <BoneOffset x="133" y="126" z="111" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="14" y="33" z="34" />
              <BoneOffset x="113" y="127" z="139" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="33" z="34" />
              <BoneOffset x="144" y="128" z="139" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="14" y="31" z="35" />
              <BoneOffset x="121" y="128" z="131" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="11" y="35" z="32" />
              <BoneOffset x="127" y="127" z="112" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="9" y="35" z="30" />
              <BoneOffset x="127" y="127" z="134" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="10" y="36" z="32" />
              <BoneOffset x="159" y="97" z="95" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="10" y="36" z="33" />
              <BoneOffset x="126" y="114" z="113" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="9" y="36" z="33" />
              <BoneOffset x="127" y="120" z="107" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="9" y="36" z="32" />
              <BoneOffset x="128" y="122" z="113" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="34" z="34" />
              <BoneOffset x="171" y="122" z="88" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="34" z="35" />
              <BoneOffset x="145" y="126" z="169" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="34" z="32" />
              <BoneOffset x="114" y="127" z="138" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="10" y="36" z="31" />
              <BoneOffset x="127" y="107" z="150" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="13" y="36" z="35" />
              <BoneOffset x="127" y="111" z="125" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="13" y="36" z="34" />
              <BoneOffset x="115" y="121" z="135" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="14" y="35" z="35" />
              <BoneOffset x="113" y="122" z="161" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="14" y="35" z="34" />
              <BoneOffset x="98" y="119" z="150" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="10" y="34" z="32" />
              <BoneOffset x="173" y="181" z="99" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="10" y="34" z="33" />
              <BoneOffset x="129" y="142" z="187" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="9" y="34" z="33" />
              <BoneOffset x="128" y="140" z="155" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="9" y="34" z="32" />
              <BoneOffset x="128" y="137" z="144" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="32" z="34" />
              <BoneOffset x="172" y="161" z="101" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="32" z="35" />
              <BoneOffset x="141" y="140" z="102" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="13" y="32" z="35" />
              <BoneOffset x="124" y="145" z="138" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="13" y="32" z="34" />
              <BoneOffset x="131" y="155" z="98" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="11" y="36" z="35" />
              <BoneOffset x="126" y="112" z="105" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="11" y="36" z="34" />
              <BoneOffset x="126" y="115" z="138" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="11" y="36" z="33" />
              <BoneOffset x="125" y="103" z="144" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="35" z="35" />
              <BoneOffset x="134" y="126" z="134" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="35" z="34" />
              <BoneOffset x="168" y="126" z="110" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="35" z="33" />
              <BoneOffset x="128" y="133" z="125" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="31" z="35" />
              <BoneOffset x="144" y="130" z="67" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="35" z="32" />
              <BoneOffset x="106" y="122" z="149" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="12" y="31" z="34" />
              <BoneOffset x="132" y="127" z="141" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="9" y="34" z="31" />
              <BoneOffset x="131" y="140" z="149" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="9" y="34" z="30" />
              <BoneOffset x="133" y="142" z="158" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="13" y="34" z="35" />
              <BoneOffset x="131" y="127" z="65" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="13" y="34" z="34" />
              <BoneOffset x="101" y="110" z="107" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="11" y="34" z="33" />
              <BoneOffset x="132" y="141" z="152" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="11" y="34" z="32" />
              <BoneOffset x="138" y="149" z="144" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="11" y="34" z="35" />
              <BoneOffset x="124" y="138" z="184" />
            </BoneInfo>
            <BoneInfo>
              <BonePosition x="11" y="34" z="34" />
              <BoneOffset x="127" y="122" z="155" />
            </BoneInfo>
          </Skeleton>
          <LinearVelocity x="-0.370146155" y="0.118588805" z="0.708580732" />
          <AngularVelocity x="0.00185320759" y="-0.000258105661" z="-0.0008068244" />
          <BlockGroups>
            <MyObjectBuilder_BlockGroup>
              <Name>headlights</Name>
              <Blocks>
                <Vector3I>
                  <X>3</X>
                  <Y>16</Y>
                  <Z>33</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>16</Y>
                  <Z>33</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Headlights</Name>
              <Blocks>
                <Vector3I>
                  <X>3</X>
                  <Y>16</Y>
                  <Z>33</Z>
                </Vector3I>
                <Vector3I>
                  <X>-3</X>
                  <Y>16</Y>
                  <Z>33</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>WH</Name>
              <Blocks>
                <Vector3I>
                  <X>2</X>
                  <Y>15</Y>
                  <Z>29</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>15</Y>
                  <Z>26</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>15</Y>
                  <Z>23</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>15</Y>
                  <Z>20</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>15</Y>
                  <Z>17</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>15</Y>
                  <Z>32</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>15</Y>
                  <Z>29</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>15</Y>
                  <Z>26</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>15</Y>
                  <Z>32</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>15</Y>
                  <Z>23</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>15</Y>
                  <Z>20</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>15</Y>
                  <Z>17</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>DriverTswitch</Name>
              <Blocks>
                <Vector3I>
                  <X>1</X>
                  <Y>16</Y>
                  <Z>29</Z>
                </Vector3I>
                <Vector3I>
                  <X>0</X>
                  <Y>16</Y>
                  <Z>29</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>GunnerTswitch</Name>
              <Blocks>
                <Vector3I>
                  <X>1</X>
                  <Y>16</Y>
                  <Z>29</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>16</Y>
                  <Z>29</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>DGSwitch</Name>
              <Blocks>
                <Vector3I>
                  <X>0</X>
                  <Y>16</Y>
                  <Z>29</Z>
                </Vector3I>
                <Vector3I>
                  <X>-1</X>
                  <Y>16</Y>
                  <Z>29</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>GY</Name>
              <Blocks>
                <Vector3I>
                  <X>2</X>
                  <Y>16</Y>
                  <Z>22</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>16</Y>
                  <Z>21</Z>
                </Vector3I>
                <Vector3I>
                  <X>2</X>
                  <Y>16</Y>
                  <Z>21</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>16</Y>
                  <Z>22</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>MART</Name>
              <Blocks>
                <Vector3I>
                  <X>0</X>
                  <Y>17</Y>
                  <Z>24</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>cams</Name>
              <Blocks>
                <Vector3I>
                  <X>2</X>
                  <Y>17</Y>
                  <Z>31</Z>
                </Vector3I>
                <Vector3I>
                  <X>-2</X>
                  <Y>16</Y>
                  <Z>19</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Turret Group1</Name>
              <Blocks>
                <Vector3I>
                  <X>0</X>
                  <Y>17</Y>
                  <Z>24</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
          </BlockGroups>
          <DisplayName>T-14 armata vanilla tank V6</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>141860954347859976</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-1.4295768737792969" y="4.1362075805664062" z="14.390411376953125" />
            <Forward x="-0.6399079" y="-0.0389284641" z="0.767464757" />
            <Up x="0.5239277" y="-0.752703846" z="0.39866823" />
            <Orientation>
              <X>0.8778273</X>
              <Y>0.3363802</Y>
              <Z>0.325224847</Z>
              <W>0.102451771</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheelmirrored</SubtypeName>
              <EntityId>137551092529758861</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.4104488" y="0.08010876" z="0.686268568" />
          <AngularVelocity x="0.6248959" y="-0.8950943" z="0.472855449" />
          <DisplayName>Small Grid 4668</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>110848982886847989</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-1.1144847869873047" y="5.0837020874023437" z="15.765182495117188" />
            <Forward x="0.841721" y="0.385830253" z="-0.377677768" />
            <Up x="0.5239159" y="-0.752700031" z="0.3986905" />
            <Orientation>
              <X>-0.5578018</X>
              <Y>0.004276497</Y>
              <Z>0.751802742</Z>
              <W>-0.3516128</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheelmirrored</SubtypeName>
              <EntityId>130062896149199036</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.331686974" y="0.153490454" z="0.725447655" />
          <AngularVelocity x="0.6280959" y="-0.8996851" z="0.4752654" />
          <DisplayName>Small Grid 5548</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>117989546652730118</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="1.9379463195800781" y="4.527252197265625" z="10.703369140625" />
            <Forward x="0.849984169" y="0.431733459" z="-0.301882" />
            <Up x="0.5239179" y="-0.75270313" z="0.39868167" />
            <Orientation>
              <X>-0.590702534</X>
              <Y>-0.0113777025</Y>
              <Z>0.7262384</Z>
              <W>-0.35145238</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheelmirrored</SubtypeName>
              <EntityId>135929737721163487</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.371300817" y="0.121976733" z="0.704741955" />
          <AngularVelocity x="0.5793124" y="-0.8296035" z="0.438156277" />
          <DisplayName>Small Grid 1291</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>136178912209726431</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-2.4360008239746094" y="6.7005081176757812" z="11.149017333984375" />
            <Forward x="0.0236641243" y="-0.455020159" z="-0.89016664" />
            <Up x="-0.5239183" y="0.752703369" z="-0.398681849" />
            <Orientation>
              <X>-0.228347152</X>
              <Y>0.05267117</Y>
              <Z>0.267405838</Z>
              <W>0.93465364</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>139752160770565177</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.36752224" y="0.124583304" z="0.7108133" />
          <AngularVelocity x="0.6253836" y="-0.8957853" z="0.473206431" />
          <DisplayName>Small Grid 3741</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>97045432025563373</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-0.60646820068359375" y="3.9122467041015625" z="12.886077880859375" />
            <Forward x="-0.7940771" y="-0.262754381" z="0.548088849" />
            <Up x="0.5240848" y="-0.7527103" z="0.39844954" />
            <Orientation>
              <X>0.8075669</X>
              <Y>0.3491134</Y>
              <Z>0.473488063</Z>
              <W>0.0420074239</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheelmirrored</SubtypeName>
              <EntityId>76152069192391830</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.414656878" y="0.07703182" z="0.6836128" />
          <AngularVelocity x="0.625339866" y="-0.8956292" z="0.4729686" />
          <DisplayName>Small Grid 6596</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>94961803585811754</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-2.5544528961181641" y="7.7403488159179687" z="13.268386840820313" />
            <Forward x="-0.314616323" y="0.2631481" z="0.91201365" />
            <Up x="-0.5243504" y="0.7527251" z="-0.398072153" />
            <Orientation>
              <X>-0.303331971</X>
              <Y>0.9295142</Y>
              <Z>-0.177840352</Z>
              <W>0.111201718</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>111025716150198935</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.418353319" y="0.07412693" z="0.684906" />
          <AngularVelocity x="0.599604845" y="-0.8586115" z="0.453565866" />
          <DisplayName>Small Grid 9658</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>115174576106442643</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="0.52098274230957031" y="3.7858657836914062" z="11.165283203125" />
            <Forward x="-0.764282465" y="-0.6222253" z="-0.169433728" />
            <Up x="0.5244815" y="-0.752624035" z="0.39809" />
            <Orientation>
              <X>0.5495382</X>
              <Y>0.336587131</Y>
              <Z>0.757839</Z>
              <W>-0.101965286</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheelmirrored</SubtypeName>
              <EntityId>118011178110708289</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.421563983" y="0.0704503655" z="0.6782973" />
          <AngularVelocity x="0.602123439" y="-0.8622788" z="0.4553285" />
          <DisplayName>Small Grid 200</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>125026381442533197</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-2.7496013641357422" y="4.301483154296875" z="16.437164306640625" />
            <Forward x="-0.8468618" y="-0.510471046" z="0.149145141" />
            <Up x="0.523925" y="-0.7526973" z="0.398684382" />
            <Orientation>
              <X>0.6727902</X>
              <Y>0.34917888</Y>
              <Z>0.650924</Z>
              <W>-0.0415384658</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheelmirrored</SubtypeName>
              <EntityId>101443466443323195</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.411438465" y="0.07585275" z="0.685354" />
          <AngularVelocity x="0.629282534" y="-0.901218235" z="0.475862741" />
          <DisplayName>Small Grid 6888</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>107281390975528754</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-4.4408988952636719" y="7.8561019897460938" z="15.965713500976563" />
            <Forward x="-0.697759151" y="-0.1110668" z="0.7076697" />
            <Up x="-0.524021149" y="0.7527028" z="-0.398547828" />
            <Orientation>
              <X>-0.341528684</X>
              <Y>0.8585994</Y>
              <Z>-0.0837064</Z>
              <W>0.373039424</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>80717562395944254</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.411821723" y="0.0774205" z="0.6894095" />
          <AngularVelocity x="0.578774631" y="-0.8288334" z="0.437699944" />
          <DisplayName>Small Grid 7019</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>134767382495011243</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-0.71886825561523438" y="7.159271240234375" z="9.7585296630859375" />
            <Forward x="0.814597845" y="0.57954675" z="0.0235765763" />
            <Up x="-0.52397126" y="0.7526986" z="-0.3986212" />
            <Orientation>
              <X>0.07435098</X>
              <Y>-0.711519659</Y>
              <Z>0.34368974</Z>
              <W>0.608349442</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>97056737902774529</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.417949915" y="0.07701141" z="0.685341358" />
          <AngularVelocity x="0.618105233" y="-0.8853553" z="0.4677211" />
          <DisplayName>Small Grid 9998</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>132068740831725977</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-3.2733745574951172" y="7.314727783203125" z="13.4110107421875" />
            <Forward x="0.8180985" y="0.312614977" z="-0.482686818" />
            <Up x="-0.5233328" y="0.752665937" z="-0.399520576" />
            <Orientation>
              <X>-0.0276273042</X>
              <Y>-0.507832</Y>
              <Z>0.350576341</Z>
              <W>0.7864093</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>132125737046560601</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.416464925" y="0.07410833" z="0.6862905" />
          <AngularVelocity x="0.5972066" y="-0.8561582" z="0.4529642" />
          <DisplayName>Small Grid 7186</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>143124897585503143</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="0.11115646362304688" y="7.1369857788085937" z="8.62628173828125" />
            <Forward x="0.7153724" y="0.64289856" z="0.2737214" />
            <Up x="-0.5237723" y="0.752669454" z="-0.398937553" />
            <Orientation>
              <X>0.120989472</X>
              <Y>-0.7888107</Y>
              <Z>0.330192119</Z>
              <W>0.5040957</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Wheel">
              <SubtypeName>SmallRealWheel</SubtypeName>
              <EntityId>125357807702843595</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.4142828" y="0.08300206" z="0.6876435" />
          <AngularVelocity x="0.6213935" y="-0.8904151" z="0.470801264" />
          <DisplayName>Small Grid 5880</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>72903410833673912</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="0.0063323974609375" y="7.0535202026367187" z="13.306503295898437" />
            <Forward x="-0.5694386" y="0.756511033" z="-0.321606338" />
            <Up x="-0.6776872" y="-0.6534667" z="-0.337225139" />
            <Orientation>
              <X>0.465453267</X>
              <Y>-0.35007152</Y>
              <Z>0.781080544</Z>
              <W>0.225203022</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorRotor">
              <SubtypeName>SmallRotor</SubtypeName>
              <EntityId>117428121153878930</EntityId>
              <ParentEntityId>142443467692239914</ParentEntityId>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorRotor">
              <SubtypeName>SmallRotor</SubtypeName>
              <EntityId>79391582501346434</EntityId>
              <Min x="0" y="1" z="0" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.327777773" y="-0.11" z="-0.49" />
              <ParentEntityId>126710989098758191</ParentEntityId>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.367375135" y="0.122089416" z="0.708409548" />
          <AngularVelocity x="-0.008884442" y="0.00102048926" z="0.00298098847" />
          <DisplayName>Small Grid 1733</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>96209434413690985</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-2.926849365234375" y="2.2621231079101562" z="24.335845947265625" />
            <Forward x="-0.569495261" y="0.756526649" z="-0.321469337" />
            <Up x="0.6776959" y="0.653453469" z="0.33723408" />
            <Orientation>
              <X>0.350096047</X>
              <Y>0.4655084</Y>
              <Z>-0.225179911</Z>
              <W>0.781043351</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorStator">
              <SubtypeName>SmallStator</SubtypeName>
              <EntityId>137771047853776217</EntityId>
              <Min x="22" y="2" z="-11" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>RTurret2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>117428121153878930</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <TargetVelocity>0</TargetVelocity>
              <MinAngle>0</MinAngle>
              <MaxAngle>0</MaxAngle>
              <CurrentAngle>-0.000156937371</CurrentAngle>
              <LimitsActive>true</LimitsActive>
              <DummyDisplacement>0.065</DummyDisplacement>
              <RotorLock>false</RotorLock>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="21" y="4" z="-8" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="21" y="3" z="-11" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="23" y="3" z="-10" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="24" y="3" z="-12" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>135215859001486927</EntityId>
              <Min x="24" y="3" z="-10" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>CamTfront</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="21" y="3" z="-12" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCornerInv</SubtypeName>
              <Min x="20" y="4" z="-9" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="25" y="4" z="-13" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="21" y="3" z="-7" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="20" y="3" z="-10" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="21" y="3" z="-10" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="25" y="3" z="-9" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_LargeGatlingTurret">
              <SubtypeName>SmallGatlingTurret</SubtypeName>
              <EntityId>75576853580051290</EntityId>
              <Min x="20" y="4" z="-15" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>70</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                            <SubtypeName>NATO_25x184mm</SubtypeName>
                            <ProjectilesCount>0</ProjectilesCount>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.084</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>TurretD "Designator"</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>true</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>70</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                      <SubtypeName>NATO_25x184mm</SubtypeName>
                      <ProjectilesCount>0</ProjectilesCount>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.084</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
              <RemainingAmmo>18</RemainingAmmo>
              <Target>0</Target>
              <TargetMeteors>false</TargetMeteors>
              <TargetMissiles>true</TargetMissiles>
              <IsPotentialTarget>true</IsPotentialTarget>
              <PreviousControlledEntityId xsi:nil="true" />
              <Rotation>0</Rotation>
              <Elevation>0</Elevation>
              <GunBase>
                <RemainingAmmo>18</RemainingAmmo>
                <CurrentAmmoMagazineName>NATO_25x184mm</CurrentAmmoMagazineName>
                <RemainingAmmosList />
                <LastShootTime>636486719466050212</LastShootTime>
              </GunBase>
              <EnableIdleRotation>false</EnableIdleRotation>
              <PreviousIdleRotationState>false</PreviousIdleRotationState>
              <TargetCharacters>true</TargetCharacters>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorStator">
              <SubtypeName>SmallStator</SubtypeName>
              <EntityId>88607590861303973</EntityId>
              <Min x="21" y="3" z="-9" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Motor2 "Elevation"</CustomName>
              <ShowOnHUD>true</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>107184993760822598</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <Friction>0.9744086</Friction>
              <TargetVelocity>1.11758709E-07</TargetVelocity>
              <MinAngle>0</MinAngle>
              <MaxAngle>0.7853982</MaxAngle>
              <CurrentAngle>0.392697752</CurrentAngle>
              <LimitsActive>true</LimitsActive>
              <DummyDisplacement>0.065</DummyDisplacement>
              <RotorLock>false</RotorLock>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="22" y="3" z="-10" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="23" y="3" z="-11" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="21" y="4" z="-9" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>73026497431836282</EntityId>
              <Min x="24" y="3" z="-13" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>TBdecoy2A</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </Toolbar>
              <Delay>1700</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="23" y="3" z="-12" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>100843194592831864</EntityId>
              <Min x="23" y="3" z="-13" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>TBdecoy2B</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Detach</Action>
                      <BlockEntityId>99140216062989522</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Force weld</Action>
                      <BlockEntityId>99140216062989522</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <Delay>1700</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RemoteControl">
              <SubtypeName>SmallBlockRemoteControl</SubtypeName>
              <EntityId>130111190369348789</EntityId>
              <Min x="20" y="3" z="-11" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>AGunnerRC</CustomName>
              <ShowOnHUD>true</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>135215859001486927</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>106423252184474097</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>102001633772276021</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>128094499541524201</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>127683033931705197</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>142288729397342944</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>130111190369348789</BlockEntityId>
                      <GroupName>cams</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>7</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>77282074576838537</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>8</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Reverse</Action>
                      <BlockEntityId>139790424989858249</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>9</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>130111190369348789</BlockEntityId>
                      <GroupName>DGSwitch</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>10</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>130111190369348789</BlockEntityId>
                      <GroupName>GunnerTswitch</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>11</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemWeapon">
                      <DefinitionId Type="MyObjectBuilder_SmallMissileLauncher" Subtype="" />
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>12</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>82500237894190083</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>13</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>14</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>117164751787721412</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>15</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>117164751787721412</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>16</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>86173741901259915</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>17</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>141660041004804603</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>18</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetMissiles</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>19</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetSmallShips</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>20</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetLargeShips</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>21</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetStations</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>22</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetCharacters</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>23</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TargetNeutrals</Action>
                      <BlockEntityId>75576853580051290</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>24</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>130111190369348789</BlockEntityId>
                      <GroupName>GY</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>25</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Override</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>130111190369348789</BlockEntityId>
                      <GroupName>GY</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>26</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>130111190369348789</BlockEntityId>
                      <GroupName>Redlights</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>27</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Recharge</Action>
                      <BlockEntityId>105442813718612794</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>28</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>SemiAuto</Action>
                      <BlockEntityId>105442813718612794</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>29</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>87078162589871980</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>30</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>EnableBroadCast</Action>
                      <BlockEntityId>87078162589871980</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <HorizonIndicatorEnabled>false</HorizonIndicatorEnabled>
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </BuildToolbar>
              <PreviousControlledEntityId xsi:nil="true" />
              <AutoPilotEnabled>false</AutoPilotEnabled>
              <FlightMode>2</FlightMode>
              <BindedCamera>0</BindedCamera>
              <CurrentWaypointIndex>-1</CurrentWaypointIndex>
              <Waypoints />
              <Direction>0</Direction>
              <DockingModeEnabled>false</DockingModeEnabled>
              <CollisionAvoidance>false</CollisionAvoidance>
              <Coords />
              <Names />
              <WaypointThresholdDistance>0</WaypointThresholdDistance>
              <IsMainRemoteControl>false</IsMainRemoteControl>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="20" y="3" z="-12" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>86173741901259915</EntityId>
              <Min x="20" y="3" z="-13" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>TBdecoy1A</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </Toolbar>
              <Delay>1700</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>141660041004804603</EntityId>
              <Min x="21" y="3" z="-13" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>TBdecoy1B</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Detach</Action>
                      <BlockEntityId>89600390004327916</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Force weld</Action>
                      <BlockEntityId>89600390004327916</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <Delay>1700</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="22" y="3" z="-13" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="22" y="4" z="-10" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="20" y="3" z="-9" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="22" y="4" z="-9" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="23" y="3" z="-9" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="22" y="3" z="-12" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="23" y="3" z="-8" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="23" y="4" z="-9" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="21" y="3" z="-8" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="23" y="4" z="-8" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="26" y="3" z="-10" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="25" y="4" z="-12" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Base</SubtypeName>
              <Min x="25" y="4" z="-9" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCornerInv</SubtypeName>
              <Min x="20" y="3" z="-8" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="25" y="3" z="-11" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="26" y="3" z="-11" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="19" y="3" z="-11" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="23" y="4" z="-10" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="21" y="4" z="-10" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="20" y="4" z="-10" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="25" y="4" z="-14" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="23" y="3" z="-14" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="19" y="4" z="-12" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>102001633772276021</EntityId>
              <Min x="19" y="3" z="-12" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>CamTright</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="19" y="3" z="-13" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner</SubtypeName>
              <Min x="20" y="4" z="-8" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>128094499541524201</EntityId>
              <Min x="22" y="3" z="-14" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>CamTrear</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>106423252184474097</EntityId>
              <Min x="25" y="3" z="-12" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>CamTleft</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="24" y="4" z="-16" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="21" y="3" z="-14" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="20" y="3" z="-14" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="19" y="4" z="-14" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="22" y="4" z="-16" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="23" y="3" z="-15" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorStator">
              <SubtypeName>SmallStator</SubtypeName>
              <EntityId>89600390004327916</EntityId>
              <Min x="23" y="4" z="-17" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Rotor Decoy L</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>141347066004848991</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <TargetVelocity>0</TargetVelocity>
              <MinAngle>0</MinAngle>
              <MaxAngle>0</MaxAngle>
              <CurrentAngle>0.000158087409</CurrentAngle>
              <LimitsActive>true</LimitsActive>
              <DummyDisplacement>0.065</DummyDisplacement>
              <RotorLock>false</RotorLock>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TextPanel">
              <SubtypeName>SmallBlockCorner_LCD_1</SubtypeName>
              <EntityId>106907910192300086</EntityId>
              <Min x="24" y="3" z="-9" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Bearing</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Description />
              <Title>Title</Title>
              <AccessFlag>READ_AND_WRITE_FACTION</AccessFlag>
              <ChangeInterval>0</ChangeInterval>
              <SelectedImages />
              <Font Type="MyObjectBuilder_FontDefinition" Subtype="Monospace" />
              <FontSize>1.25</FontSize>
              <PublicDescription>Bearing: 019 N
----&lt; N &gt;----&lt;N.E&gt;---
          ^</PublicDescription>
              <PublicTitle>Public title</PublicTitle>
              <ShowText>PUBLIC</ShowText>
              <FontColor>
                <PackedValue>4294967295</PackedValue>
                <X>255</X>
                <Y>255</Y>
                <Z>255</Z>
                <R>255</R>
                <G>255</G>
                <B>255</B>
                <A>255</A>
              </FontColor>
              <BackgroundColor>
                <PackedValue>4278190080</PackedValue>
                <X>0</X>
                <Y>0</Y>
                <Z>0</Z>
                <R>0</R>
                <G>0</G>
                <B>0</B>
                <A>255</A>
              </BackgroundColor>
              <CurrentShownTexture>0</CurrentShownTexture>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Base</SubtypeName>
              <Min x="19" y="4" z="-9" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="24" y="3" z="-15" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorStator">
              <SubtypeName>SmallStator</SubtypeName>
              <EntityId>99140216062989522</EntityId>
              <Min x="21" y="4" z="-17" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Rotor Decoy R</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>91183590851160794</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <TargetVelocity>0</TargetVelocity>
              <MinAngle>0</MinAngle>
              <MaxAngle>0</MaxAngle>
              <CurrentAngle>-0.0005185468</CurrentAngle>
              <LimitsActive>true</LimitsActive>
              <DummyDisplacement>0.065</DummyDisplacement>
              <RotorLock>false</RotorLock>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="20" y="4" z="-16" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>110872857313357786</EntityId>
              <Min x="25" y="3" z="-10" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Redlight</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Radius>9.714335</Radius>
              <ReflectorRadius>116.572029</ReflectorRadius>
              <ColorRed>0.5764706</ColorRed>
              <ColorGreen>0.003921569</ColorGreen>
              <ColorBlue>0.003921569</ColorBlue>
              <Falloff>1</Falloff>
              <Intensity>4.60995436</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorInvCorner2Base</SubtypeName>
              <Min x="25" y="4" z="-11" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="19" y="4" z="-13" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="21" y="3" z="-15" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Base</SubtypeName>
              <Min x="18" y="3" z="-9" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="19" y="3" z="-8" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="25" y="3" z="-14" />
              <BlockOrientation Forward="Left" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="18" y="3" z="-10" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ReflectorLight">
              <SubtypeName>SmallBlockFrontLight</SubtypeName>
              <EntityId>82317116364243565</EntityId>
              <Min x="19" y="3" z="-10" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>Redlight</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Radius>9.714335</Radius>
              <ReflectorRadius>116.572029</ReflectorRadius>
              <ColorRed>0.5764706</ColorRed>
              <ColorGreen>0.003921569</ColorGreen>
              <ColorBlue>0.003921569</ColorBlue>
              <Falloff>1</Falloff>
              <Intensity>4.60995436</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="19" y="4" z="-10" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="24" y="4" z="-10" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorInvCorner2Base</SubtypeName>
              <Min x="19" y="4" z="-11" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="24" y="3" z="-11" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="25" y="3" z="-8" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="25" y="4" z="-10" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="19" y="3" z="-9" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorStator">
              <SubtypeName>SmallStator</SubtypeName>
              <EntityId>139790424989858249</EntityId>
              <Min x="24" y="4" z="-9" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>RRadar</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>73868287141544507</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <Friction>0.9936987</Friction>
              <TargetVelocity>-0.08333337</TargetVelocity>
              <MinAngle>0</MinAngle>
              <MaxAngle xsi:nil="true" />
              <CurrentAngle>-0.0125781456</CurrentAngle>
              <LimitsActive>true</LimitsActive>
              <DummyDisplacement>0.065</DummyDisplacement>
              <RotorLock>false</RotorLock>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="24" y="3" z="-8" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Base</SubtypeName>
              <Min x="26" y="3" z="-9" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="24" y="3" z="-14" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="20" y="3" z="-15" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="19" y="4" z="-15" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="25" y="4" z="-15" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="21" y="5" z="-16" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="22" y="5" z="-16" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="23" y="5" z="-16" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="23" y="3" z="-7" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="20" y="3" z="-7" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="18" y="3" z="-11" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="19" y="3" z="-14" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="25" y="3" z="-13" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="25" y="3" z="-15" />
              <BlockOrientation Forward="Up" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="19" y="3" z="-15" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="21" y="3" z="-16" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="23" y="3" z="-16" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="20" y="3" z="-16" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="24" y="3" z="-16" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="26" y="3" z="-13" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="18" y="3" z="-13" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="26" y="4" z="-10" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="26" y="4" z="-11" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="18" y="4" z="-11" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="18" y="4" z="-10" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="18" y="4" z="-13" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="26" y="4" z="-13" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="18" y="4" z="-12" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="26" y="4" z="-12" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Base</SubtypeName>
              <Min x="24" y="4" z="-8" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="24" y="3" z="-7" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.367546678" y="0.126109838" z="0.7049279" />
          <AngularVelocity x="-0.00667920057" y="-0.0011888009" z="0.000924613851" />
          <BlockGroups>
            <MyObjectBuilder_BlockGroup>
              <Name>GunR</Name>
              <Blocks>
                <Vector3I>
                  <X>21</X>
                  <Y>3</Y>
                  <Z>-9</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Redlights</Name>
              <Blocks>
                <Vector3I>
                  <X>19</X>
                  <Y>3</Y>
                  <Z>-10</Z>
                </Vector3I>
                <Vector3I>
                  <X>25</X>
                  <Y>3</Y>
                  <Z>-10</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>MART</Name>
              <Blocks>
                <Vector3I>
                  <X>21</X>
                  <Y>3</Y>
                  <Z>-9</Z>
                </Vector3I>
                <Vector3I>
                  <X>20</X>
                  <Y>3</Y>
                  <Z>-11</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>cams</Name>
              <Blocks>
                <Vector3I>
                  <X>22</X>
                  <Y>3</Y>
                  <Z>-14</Z>
                </Vector3I>
                <Vector3I>
                  <X>25</X>
                  <Y>3</Y>
                  <Z>-12</Z>
                </Vector3I>
                <Vector3I>
                  <X>19</X>
                  <Y>3</Y>
                  <Z>-12</Z>
                </Vector3I>
                <Vector3I>
                  <X>24</X>
                  <Y>3</Y>
                  <Z>-10</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Turret Group1</Name>
              <Blocks>
                <Vector3I>
                  <X>21</X>
                  <Y>3</Y>
                  <Z>-9</Z>
                </Vector3I>
                <Vector3I>
                  <X>20</X>
                  <Y>3</Y>
                  <Z>-11</Z>
                </Vector3I>
                <Vector3I>
                  <X>22</X>
                  <Y>6</Y>
                  <Z>-13</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
          </BlockGroups>
          <Handbrake>true</Handbrake>
          <DisplayName>T-14 Armata turret</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>72927638072571977</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="2.6547641754150391" y="5.2379684448242188" z="14.63763427734375" />
            <Forward x="0.785488367" y="-0.448871136" z="0.4260543" />
            <Up x="-0.465167761" y="0.0258606672" z="0.884844542" />
            <Orientation>
              <X>-0.497994542</X>
              <Y>0.681930065</Y>
              <Z>0.488948941</Z>
              <W>-0.21886456</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="0" z="2" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="0" y="0" z="3" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="0" y="0" z="4" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="0" y="0" z="5" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="0" y="1" z="3" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorRotor">
              <SubtypeName>SmallRotor</SubtypeName>
              <EntityId>107184993760822598</EntityId>
              <Min x="0" y="1" z="5" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <ParentEntityId>74042676289791225</ParentEntityId>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>117164751787721412</EntityId>
              <Min x="0" y="1" z="2" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>CamGun</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="-1" y="1" z="3" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="-1" y="1" z="2" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-1" y="0" z="2" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-1" y="0" z="3" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="0" y="-1" z="2" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorCorner2Tip</SubtypeName>
              <Min x="-1" y="-1" z="2" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="0" z="1" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_SmallMissileLauncher">
              <SubtypeName />
              <EntityId>82500237894190083</EntityId>
              <Min x="0" y="0" z="-3" />
              <BlockOrientation Forward="Forward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>80</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                            <SubtypeName>Missile200mm</SubtypeName>
                            <ProjectilesCount>0</ProjectilesCount>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.24</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Gun</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>false</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>80</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                      <SubtypeName>Missile200mm</SubtypeName>
                      <ProjectilesCount>0</ProjectilesCount>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.24</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
              <UseConveyorSystem>false</UseConveyorSystem>
              <GunBase>
                <CurrentAmmoMagazineName>Missile200mm</CurrentAmmoMagazineName>
                <RemainingAmmosList />
                <LastShootTime>636486712937886822</LastShootTime>
              </GunBase>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.3672762" y="0.134382218" z="0.715694666" />
          <AngularVelocity x="-0.0062853205" y="-0.00226118229" z="0.00103172334" />
          <BlockGroups>
            <MyObjectBuilder_BlockGroup>
              <Name>MART</Name>
              <Blocks>
                <Vector3I>
                  <X>0</X>
                  <Y>1</Y>
                  <Z>2</Z>
                </Vector3I>
                <Vector3I>
                  <X>0</X>
                  <Y>0</Y>
                  <Z>0</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>cams</Name>
              <Blocks>
                <Vector3I>
                  <X>0</X>
                  <Y>1</Y>
                  <Z>2</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Turret Group1</Name>
              <Blocks>
                <Vector3I>
                  <X>0</X>
                  <Y>0</Y>
                  <Z>0</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
          </BlockGroups>
          <DisplayName>Small Grid 3567</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>143055006428361725</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-0.83527374267578125" y="9.4009017944335938" z="12.230499267578125" />
            <Forward x="-0.465303242" y="0.0256946832" z="0.884778261" />
            <Up x="-0.5695305" y="0.7564938" z="-0.3214842" />
            <Orientation>
              <X>-0.335669</X>
              <Y>0.9108872</Y>
              <Z>-0.09528593</Z>
              <W>0.220298529</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorRotor">
              <SubtypeName>SmallRotor</SubtypeName>
              <EntityId>141347066004848991</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <ParentEntityId>117823592606896206</ParentEntityId>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Decoy">
              <SubtypeName>SmallDecoy</SubtypeName>
              <EntityId>89312216760537207</EntityId>
              <Min x="0" y="1" z="0" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>DecoyL</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="0" y="1" z="1" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-1" y="1" z="0" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <EntityId>107923345456713989</EntityId>
              <Min x="0" y="2" z="0" />
              <IntegrityPercent>0.3</IntegrityPercent>
              <BuildPercent>0.3</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-1" y="2" z="0" />
              <BlockOrientation Forward="Right" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <EntityId>78143698230135080</EntityId>
              <Min x="0" y="2" z="1" />
              <IntegrityPercent>0.2</IntegrityPercent>
              <BuildPercent>0.2</BuildPercent>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-1" y="1" z="1" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.368062139" y="0.1158745" z="0.6899164" />
          <AngularVelocity x="-0.004374053" y="-0.000852690544" z="0.00127782335" />
          <DisplayName>Small Grid 970</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>139871008905586494</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="-1.3004703521728516" y="9.42669677734375" z="13.115341186523437" />
            <Forward x="-0.46483922" y="0.0261480361" z="0.88500917" />
            <Up x="-0.569533" y="0.756489336" z="-0.321490467" />
            <Orientation>
              <X>-0.3356388</X>
              <Y>0.9109616</Y>
              <Z>-0.09540426</Z>
              <W>0.219985336</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorRotor">
              <SubtypeName>SmallRotor</SubtypeName>
              <EntityId>91183590851160794</EntityId>
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <ParentEntityId>140757964265309423</ParentEntityId>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Decoy">
              <SubtypeName>SmallDecoy</SubtypeName>
              <EntityId>80531880199384325</EntityId>
              <Min x="0" y="1" z="0" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>DecoyR</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="-1" y="1" z="0" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <EntityId>123575404545128314</EntityId>
              <Min x="0" y="2" z="0" />
              <IntegrityPercent>0.3</IntegrityPercent>
              <BuildPercent>0.3</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfArmorBlock</SubtypeName>
              <Min x="0" y="1" z="-1" />
              <BlockOrientation Forward="Backward" Up="Down" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <EntityId>74431205483746419</EntityId>
              <Min x="0" y="2" z="-1" />
              <IntegrityPercent>0.2</IntegrityPercent>
              <BuildPercent>0.2</BuildPercent>
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-1" y="2" z="0" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="-1" y="1" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.370169878" y="0.123889357" z="0.6891978" />
          <AngularVelocity x="-0.008102869" y="-0.00161851034" z="0.00100701139" />
          <DisplayName>Small Grid 7762</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>105047455097997115</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="1.5165767669677734" y="6.7297439575195313" z="12.979782104492188" />
            <Forward x="-0.575289547" y="0.7568031" z="-0.310307652" />
            <Up x="0.677704453" y="0.65344" z="0.3372429" />
            <Orientation>
              <X>0.3515133</X>
              <Y>0.470409</Y>
              <Z>-0.222976342</Z>
              <W>0.7780973</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorRotor">
              <SubtypeName>SmallRotor</SubtypeName>
              <EntityId>73868287141544507</EntityId>
              <ParentEntityId>111414398925116177</ParentEntityId>
              <YieldLastComponent>true</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>HeavyHalfSlopeArmorBlock</SubtypeName>
              <Min x="0" y="1" z="0" />
              <BlockOrientation Forward="Down" Up="Forward" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CameraBlock">
              <SubtypeName>SmallCameraBlock</SubtypeName>
              <EntityId>142288729397342944</EntityId>
              <Min x="0" y="1" z="1" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0.266666681" y="-0.15" z="-0.55" />
              <CustomName>CamRadar</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsActive>false</IsActive>
              <Fov>1.04719758</Fov>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.366373777" y="0.126774967" z="0.7119324" />
          <AngularVelocity x="-0.00431809" y="-0.00565325469" z="-0.000715644739" />
          <BlockGroups>
            <MyObjectBuilder_BlockGroup>
              <Name>cams</Name>
              <Blocks>
                <Vector3I>
                  <X>0</X>
                  <Y>1</Y>
                  <Z>1</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
          </BlockGroups>
          <DisplayName>Small Grid 6701</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
      </CubeGrids>
    </Prefab>
  </Prefabs>
</Definitions>